2020-09-05 11:16:58.107 INFO  9560 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 9560 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 11:16:58.113 DEBUG 9560 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 11:16:58.114 INFO  9560 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 11:17:01.237 INFO  9560 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 11:17:01.239 INFO  9560 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 11:17:03.796 INFO  9560 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 11:17:03.796 INFO  9560 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 11:17:03.796 INFO  9560 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 11:17:04.647 DEBUG 9560 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 11:17:05.355 INFO  9560 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 11:17:06.627 INFO  9560 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 11:17:11.481 DEBUG 9560 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:17:12.674 DEBUG 9560 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 11:17:12.690 DEBUG 9560 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 11:17:12.707 DEBUG 9560 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 11:17:12.711 DEBUG 9560 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 11:17:12.713 DEBUG 9560 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 11:17:12.714 DEBUG 9560 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 11:17:12.754 DEBUG 9560 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 11:17:14.504 INFO  9560 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 11:17:14.516 INFO  9560 [           main] [com.jeesite.modules.Application        ] - Started Application in 17.788 seconds (JVM running for 21.63)
2020-09-05 11:21:23.516 DEBUG 9560 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 11:21:23.517 DEBUG 9560 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:23.520 DEBUG 9560 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 11:21:23.521 DEBUG 9560 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 11:21:23.583 DEBUG 9560 [nio-8980-exec-7] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 11:21:23.701 DEBUG 9560 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:21:23.702 DEBUG 9560 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:23.704 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:21:23.705 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:21:23.722 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:21:23.787 DEBUG 9560 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:21:23.789 DEBUG 9560 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:23.792 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:21:23.793 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 11:21:23.933 DEBUG 9560 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:21:24.256 DEBUG 9560 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:24.257 DEBUG 9560 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:24.260 DEBUG 9560 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:24.261 DEBUG 9560 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 11:21:24.340 DEBUG 9560 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 11:21:24.792 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:24.790  URI: /js/a/test/testData/list  IP: 127.0.0.1
2020-09-05 11:21:24.862 INFO  9560 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2020-09-05 11:21:24.991 DEBUG 9560 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:24.992 DEBUG 9560 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:24.997 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:24.998 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2020-09-05 11:21:25.061 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:21:25.094 DEBUG 9560 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:25.094 DEBUG 9560 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:25.098 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:21:25.099 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 11:21:25.101 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:21:25.156 DEBUG 9560 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:25.140  用时: 350毫秒  URI: /js/a/test/testData/list  总内存: 541.5MB  已用内存: 416.246MB
2020-09-05 11:21:25.159 DEBUG 9560 [   log-save-8-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:21:25.159 DEBUG 9560 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:25.160 DEBUG 9560 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:21:25.160 DEBUG 9560 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 11:21:25.174 DEBUG 9560 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:21:25.182 DEBUG 9560 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:25.183 DEBUG 9560 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:25.184 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:25.187 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084391527079936(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:25.155(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 350(Long)
2020-09-05 11:21:25.193 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:25.656 DEBUG 9560 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:25.655  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 11:21:25.724 DEBUG 9560 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:21:25.726 DEBUG 9560 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:25.842 DEBUG 9560 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 11:21:25.842 DEBUG 9560 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:21:25.876 DEBUG 9560 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:21:25.877 DEBUG 9560 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:21:25.882 DEBUG 9560 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 1
2020-09-05 11:21:25.921 DEBUG 9560 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:25.919  用时: 264毫秒  URI: /js/a/test/testData/listData  总内存: 527.5MB  已用内存: 80.595MB
2020-09-05 11:21:25.924 DEBUG 9560 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:25.925 DEBUG 9560 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:25.926 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:25.927 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084394735722496(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:25.92(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 264(Long)
2020-09-05 11:21:25.931 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:30.180 DEBUG 9560 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:30.180  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:21:30.203 DEBUG 9560 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:21:30.205 DEBUG 9560 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:30.209 DEBUG 9560 [nio-8980-exec-9] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:21:30.209 DEBUG 9560 [nio-8980-exec-9] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:21:30.216 DEBUG 9560 [nio-8980-exec-9] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:21:30.228 DEBUG 9560 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:30.226  用时: 46毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 90.239MB
2020-09-05 11:21:30.232 DEBUG 9560 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:30.232 DEBUG 9560 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:30.232 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:30.233 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084412804784128(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:30.228(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599276090175&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 46(Long)
2020-09-05 11:21:30.235 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:31.565 DEBUG 9560 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:31.565  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:21:31.576 DEBUG 9560 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:21:31.576 DEBUG 9560 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:31.579 DEBUG 9560 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:21:31.580 DEBUG 9560 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:21:31.582 DEBUG 9560 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:21:31.591 DEBUG 9560 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:31.589  用时: 24毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 93.687MB
2020-09-05 11:21:31.594 DEBUG 9560 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:31.595 DEBUG 9560 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:31.595 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:31.596 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084418517426176(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:31.59(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599276091563&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 24(Long)
2020-09-05 11:21:31.598 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:32.673 DEBUG 9560 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:32.673  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:21:32.678 DEBUG 9560 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:21:32.678 DEBUG 9560 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:32.681 DEBUG 9560 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:21:32.681 DEBUG 9560 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:21:32.684 DEBUG 9560 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:21:32.691 DEBUG 9560 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:32.690  用时: 17毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 96.517MB
2020-09-05 11:21:32.695 DEBUG 9560 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:32.695 DEBUG 9560 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:32.695 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:32.696 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084423135354880(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:32.691(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599276092668&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 17(Long)
2020-09-05 11:21:32.697 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:40.067 DEBUG 9560 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:40.067  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:21:40.077 DEBUG 9560 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:21:40.077 DEBUG 9560 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:40.080 DEBUG 9560 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:21:40.080 DEBUG 9560 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:21:40.083 DEBUG 9560 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:21:40.091 DEBUG 9560 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:40.088  用时: 21毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 100.007MB
2020-09-05 11:21:40.094 DEBUG 9560 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:40.095 DEBUG 9560 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:40.095 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:40.096 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084454173204480(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:40.091(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599276100063&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 21(Long)
2020-09-05 11:21:40.097 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:21:55.089 DEBUG 9560 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:21:55.089  URI: /js/a/test/testData/form  IP: 127.0.0.1
2020-09-05 11:21:55.101 INFO  9560 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataForm <<<<<<<<< /js/a/test/testData/form >>>>>>>>> com.jeesite.modules.test.web.TestDataController#form(TestData, Model)
2020-09-05 11:21:55.190 DEBUG 9560 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:21:55.186  用时: 97毫秒  URI: /js/a/test/testData/form  总内存: 527.5MB  已用内存: 118.434MB
2020-09-05 11:21:55.194 DEBUG 9560 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:21:55.194 DEBUG 9560 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:21:55.195 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:21:55.196 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084517494611968(String), access(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:21:55.189(Timestamp), /js/a/test/testData/form(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 97(Long)
2020-09-05 11:21:55.199 DEBUG 9560 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:22:02.015 DEBUG 9560 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:22:02.015  URI: /js/a/test/testData/save  IP: 127.0.0.1
2020-09-05 11:22:02.237 DEBUG 9560 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `test_data` (`id`, `test_input`, `test_textarea`, `test_select`, `test_select_multiple`, `test_radio`, `test_checkbox`, `test_user_code`, `test_office_code`, `test_area_code`, `test_area_name`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (#{id}, #{testInput}, #{testTextarea}, #{testSelect}, #{testSelectMultiple}, #{testRadio}, #{testCheckbox}, #{testUser.userCode}, #{testOffice.officeCode}, #{testAreaCode}, #{testAreaName}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks})
2020-09-05 11:22:02.237 DEBUG 9560 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:02.238 DEBUG 9560 [nio-8980-exec-1] [c.j.modules.test.dao.TestDataDao.insert] - ==>  Preparing: INSERT INTO `test_data` (`id`, `test_input`, `test_textarea`, `test_select`, `test_select_multiple`, `test_radio`, `test_checkbox`, `test_user_code`, `test_office_code`, `test_area_code`, `test_area_name`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:02.238 DEBUG 9560 [nio-8980-exec-1] [c.j.modules.test.dao.TestDataDao.insert] - ==> Parameters: 1302084547051872256(String), 2(String), (String), (String), (String), (String), (String), (String), (String), (String), (String), 0(String), system(String), 2020-09-05 11:22:02.237(Timestamp), system(String), 2020-09-05 11:22:02.237(Timestamp), (String)
2020-09-05 11:22:02.240 DEBUG 9560 [nio-8980-exec-1] [c.j.modules.test.dao.TestDataDao.insert] - <==    Updates: 1
2020-09-05 11:22:02.241 DEBUG 9560 [nio-8980-exec-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `test_data_child` (`id`, `test_data_id`, `test_input`, `test_textarea`, `test_select`, `test_select_multiple`, `test_radio`, `test_checkbox`, `test_user_code`, `test_office_code`, `test_area_code`, `test_area_name`) VALUES (#{id}, #{testData.id}, #{testInput}, #{testTextarea}, #{testSelect}, #{testSelectMultiple}, #{testRadio}, #{testCheckbox}, #{testUser.userCode}, #{testOffice.officeCode}, #{testAreaCode}, #{testAreaName})
2020-09-05 11:22:02.242 DEBUG 9560 [nio-8980-exec-1] [c.j.m.test.dao.TestDataChildDao.insert ] - ==>  Preparing: INSERT INTO `test_data_child` (`id`, `test_data_id`, `test_input`, `test_textarea`, `test_select`, `test_select_multiple`, `test_radio`, `test_checkbox`, `test_user_code`, `test_office_code`, `test_area_code`, `test_area_name`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:02.242 DEBUG 9560 [nio-8980-exec-1] [c.j.m.test.dao.TestDataChildDao.insert ] - ==> Parameters: 1302084547072843776(String), 1302084547051872256(String), 2(String), (String), (String), (String), (String), (String), (String), (String), (String), (String)
2020-09-05 11:22:02.244 DEBUG 9560 [nio-8980-exec-1] [c.j.m.test.dao.TestDataChildDao.insert ] - <==    Updates: 1
2020-09-05 11:22:02.252 DEBUG 9560 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:22:02.251  用时: 236毫秒  URI: /js/a/test/testData/save  总内存: 527.5MB  已用内存: 146.032MB
2020-09-05 11:22:02.256 DEBUG 9560 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:22:02.256 DEBUG 9560 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:02.257 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:02.259 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084547123175424(String), update(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:22:02.252(Timestamp), /js/a/test/testData/save(String), POST(String), id=&testInput=2&testTextarea=&testSelect=&!testSelectMultiple=&!testRadio=&!testCheckbox=&testDate=&testDatetime=&testUser.userName=,&testUser.userCode=&testOffice.officeName=,&testOffice.officeCode=&testAreaName=&testAreaCode=&remarks=&testData_image=&testData_image__del=&testData_file=&testData_file__del=&testDataChildList[0].status=0&testDataChildList[0].id=&testDataChildList[0].testSort=&testDataChildList[0].testData.id=&testDataChildList[0].testInput=2&testDataChildList[0].testTextarea=&testDataChildList[0].testSelect=&!testDataChildList[0].testSelectMultiple=&testDataChildList[0].testRadio=&!testDataChildList[0].testCheckbox=&testDataChildList[0].testDate=&testDataChildList[0].testDatetime=&testDataChildList[0].testUser.userCode=&testUser2.userName=&testUser2.userCode=&testDataChildList[0].testOffice.officeCode=&testDataChildList[0].testAreaName=&testDataChildList[0].testAreaCode=&testDataChildList[0].testDataChild_file=&testDataChildList[0].testDataChild_file__del=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 236(Long)
2020-09-05 11:22:02.261 DEBUG 9560 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:22:02.265 DEBUG 9560 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:22:02.265  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 11:22:02.274 DEBUG 9560 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:22:02.274 DEBUG 9560 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:02.284 DEBUG 9560 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 11:22:02.284 DEBUG 9560 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:22:02.286 DEBUG 9560 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:22:02.287 DEBUG 9560 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:22:02.307 DEBUG 9560 [nio-8980-exec-8] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 11:22:02.313 DEBUG 9560 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:22:02.312  用时: 47毫秒  URI: /js/a/test/testData/listData  总内存: 527.5MB  已用内存: 147.733MB
2020-09-05 11:22:02.317 DEBUG 9560 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:22:02.317 DEBUG 9560 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:02.317 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:02.318 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084547379027968(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:22:02.313(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 47(Long)
2020-09-05 11:22:02.320 DEBUG 9560 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:22:05.739 DEBUG 9560 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:22:05.739  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:22:05.748 DEBUG 9560 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:22:05.749 DEBUG 9560 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:05.752 DEBUG 9560 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:22:05.753 DEBUG 9560 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:22:05.756 DEBUG 9560 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:22:05.764 DEBUG 9560 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:22:05.762  用时: 23毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 150.680MB
2020-09-05 11:22:05.768 DEBUG 9560 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:22:05.768 DEBUG 9560 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:05.769 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:05.769 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084561853571072(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:22:05.764(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1302084547051872256&_search=false&nd=1599276125736&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 23(Long)
2020-09-05 11:22:05.771 DEBUG 9560 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:22:11.074 DEBUG 9560 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:22:11.074  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:22:11.079 DEBUG 9560 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:22:11.079 DEBUG 9560 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:11.082 DEBUG 9560 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:22:11.082 DEBUG 9560 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:22:11.084 DEBUG 9560 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:22:11.092 DEBUG 9560 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:22:11.090  用时: 16毫秒  URI: /js/a/test/testData/subListData  总内存: 527.5MB  已用内存: 152.270MB
2020-09-05 11:22:11.096 DEBUG 9560 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:22:11.097 DEBUG 9560 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3d42b756] will be managed by Spring
2020-09-05 11:22:11.097 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:22:11.098 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302084584196628480(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:22:11.092(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1302084547051872256&_search=false&nd=1599276131070&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 16(Long)
2020-09-05 11:22:11.099 DEBUG 9560 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:47:18.866 INFO  7152 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 7152 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 11:47:18.869 DEBUG 7152 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 11:47:18.869 INFO  7152 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 11:47:20.281 INFO  7152 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 11:47:20.281 INFO  7152 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 11:47:22.168 INFO  7152 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 11:47:22.169 INFO  7152 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 11:47:22.169 INFO  7152 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 11:47:22.715 DEBUG 7152 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 11:47:23.120 INFO  7152 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 11:47:23.758 INFO  7152 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 11:47:27.835 DEBUG 7152 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:28.973 DEBUG 7152 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 11:47:28.988 DEBUG 7152 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 11:47:29.002 DEBUG 7152 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 11:47:29.005 DEBUG 7152 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 11:47:29.007 DEBUG 7152 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 11:47:29.008 DEBUG 7152 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 11:47:29.134 DEBUG 7152 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 11:47:30.827 INFO  7152 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 11:47:30.829 INFO  7152 [           main] [com.jeesite.modules.Application        ] - Started Application in 12.702 seconds (JVM running for 13.889)
2020-09-05 11:47:50.694 DEBUG 7152 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 11:47:50.696 DEBUG 7152 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:50.699 DEBUG 7152 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 11:47:50.700 DEBUG 7152 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 11:47:50.787 DEBUG 7152 [nio-8980-exec-2] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 11:47:50.871 DEBUG 7152 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:47:50.871 DEBUG 7152 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:50.874 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:47:50.875 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:47:50.948 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:47:50.961 DEBUG 7152 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:47:50.964 DEBUG 7152 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:50.967 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:47:50.968 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 11:47:51.145 DEBUG 7152 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:47:52.524 DEBUG 7152 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:52.525 DEBUG 7152 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:52.528 DEBUG 7152 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:52.529 DEBUG 7152 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 11:47:52.585 DEBUG 7152 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 11:47:53.005 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:47:53.003  URI: /js/a/test/testData/list  IP: 127.0.0.1
2020-09-05 11:47:53.046 INFO  7152 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2020-09-05 11:47:53.128 DEBUG 7152 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:53.128 DEBUG 7152 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:53.132 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:53.133 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2020-09-05 11:47:53.158 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:47:53.190 DEBUG 7152 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:53.190 DEBUG 7152 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:53.195 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:47:53.197 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 11:47:53.201 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:47:53.267 DEBUG 7152 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:47:53.248  用时: 245毫秒  URI: /js/a/test/testData/list  总内存: 490MB  已用内存: 149.064MB
2020-09-05 11:47:53.269 DEBUG 7152 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:47:53.269 DEBUG 7152 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:53.270 DEBUG 7152 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:47:53.271 DEBUG 7152 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 11:47:53.291 DEBUG 7152 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:47:53.300 DEBUG 7152 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:47:53.302 DEBUG 7152 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:53.302 DEBUG 7152 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:47:53.306 DEBUG 7152 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302091052544819200(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:47:53.265(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 245(Long)
2020-09-05 11:47:53.337 DEBUG 7152 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:47:53.835 DEBUG 7152 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:47:53.835  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 11:47:53.899 DEBUG 7152 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:47:53.900 DEBUG 7152 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:53.948 DEBUG 7152 [nio-8980-exec-7] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 11:47:53.949 DEBUG 7152 [nio-8980-exec-7] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:47:53.989 DEBUG 7152 [nio-8980-exec-7] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:47:53.990 DEBUG 7152 [nio-8980-exec-7] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:47:53.998 DEBUG 7152 [nio-8980-exec-7] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 11:47:54.020 DEBUG 7152 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:47:54.018  用时: 183毫秒  URI: /js/a/test/testData/listData  总内存: 490MB  已用内存: 179.177MB
2020-09-05 11:47:54.024 DEBUG 7152 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:47:54.024 DEBUG 7152 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:47:54.025 DEBUG 7152 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:47:54.027 DEBUG 7152 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302091055711518720(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:47:54.02(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 183(Long)
2020-09-05 11:47:54.029 DEBUG 7152 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:48:03.611 DEBUG 7152 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:48:03.611  URI: /js/a/test/testData/form  IP: 127.0.0.1
2020-09-05 11:48:03.614 DEBUG 7152 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`id` = #{id}
2020-09-05 11:48:03.614 DEBUG 7152 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will not be managed by Spring
2020-09-05 11:48:03.619 DEBUG 7152 [nio-8980-exec-6] [c.j.modules.test.dao.TestDataDao.get   ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`id` = ?
2020-09-05 11:48:03.620 DEBUG 7152 [nio-8980-exec-6] [c.j.modules.test.dao.TestDataDao.get   ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:48:03.623 DEBUG 7152 [nio-8980-exec-6] [c.j.modules.test.dao.TestDataDao.get   ] - <==      Total: 1
2020-09-05 11:48:03.626 DEBUG 7152 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:48:03.627 DEBUG 7152 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will not be managed by Spring
2020-09-05 11:48:03.632 DEBUG 7152 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:48:03.633 DEBUG 7152 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:48:03.733 DEBUG 7152 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:48:03.761 INFO  7152 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataForm <<<<<<<<< /js/a/test/testData/form >>>>>>>>> com.jeesite.modules.test.web.TestDataController#form(TestData, Model)
2020-09-05 11:48:03.816 DEBUG 7152 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:48:03.813  用时: 202毫秒  URI: /js/a/test/testData/form  总内存: 490MB  已用内存: 201.945MB
2020-09-05 11:48:03.834 DEBUG 7152 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:48:03.835 DEBUG 7152 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will be managed by Spring
2020-09-05 11:48:03.835 DEBUG 7152 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:48:03.837 DEBUG 7152 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302091096798920704(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:48:03.816(Timestamp), /js/a/test/testData/form(String), GET(String), id=1302084547051872256(String), 1302084547051872256(String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 202(Long)
2020-09-05 11:48:03.850 DEBUG 7152 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:48:04.145 DEBUG 7152 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = #{sqlMap.where#biz_key#EQ1} AND a.`biz_type` = #{sqlMap.where#biz_type#EQ1} AND a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.145 DEBUG 7152 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = #{sqlMap.where#biz_key#EQ1} AND a.`biz_type` = #{sqlMap.where#biz_type#EQ1} AND a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.146 DEBUG 7152 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@49370d95] will not be managed by Spring
2020-09-05 11:48:04.146 DEBUG 7152 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will not be managed by Spring
2020-09-05 11:48:04.150 DEBUG 7152 [io-8980-exec-10] [c.j.m.file.dao.FileUploadDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = ? AND a.`biz_type` = ? AND a.`status` = ? ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.150 DEBUG 7152 [nio-8980-exec-3] [c.j.m.file.dao.FileUploadDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = ? AND a.`biz_type` = ? AND a.`status` = ? ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.151 DEBUG 7152 [io-8980-exec-10] [c.j.m.file.dao.FileUploadDao.findList  ] - ==> Parameters: 1302084547051872256(String), testData_file(String), 0(String)
2020-09-05 11:48:04.151 DEBUG 7152 [nio-8980-exec-3] [c.j.m.file.dao.FileUploadDao.findList  ] - ==> Parameters: 1302084547051872256(String), testData_image(String), 0(String)
2020-09-05 11:48:04.206 DEBUG 7152 [nio-8980-exec-3] [c.j.m.file.dao.FileUploadDao.findList  ] - <==      Total: 0
2020-09-05 11:48:04.206 DEBUG 7152 [io-8980-exec-10] [c.j.m.file.dao.FileUploadDao.findList  ] - <==      Total: 0
2020-09-05 11:48:04.339 DEBUG 7152 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = #{sqlMap.where#biz_key#EQ1} AND a.`biz_type` = #{sqlMap.where#biz_type#EQ1} AND a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.340 DEBUG 7152 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@797ee1a9] will not be managed by Spring
2020-09-05 11:48:04.343 DEBUG 7152 [nio-8980-exec-5] [c.j.m.file.dao.FileUploadDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = ? AND a.`biz_type` = ? AND a.`status` = ? ORDER BY a.file_sort, a.id
2020-09-05 11:48:04.344 DEBUG 7152 [nio-8980-exec-5] [c.j.m.file.dao.FileUploadDao.findList  ] - ==> Parameters: 1302084547072843776(String), testDataChild_file(String), 0(String)
2020-09-05 11:48:04.347 DEBUG 7152 [nio-8980-exec-5] [c.j.m.file.dao.FileUploadDao.findList  ] - <==      Total: 0
2020-09-05 11:50:04.315 INFO  10184 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 10184 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 11:50:04.317 DEBUG 10184 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 11:50:04.317 INFO  10184 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 11:50:05.689 INFO  10184 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 11:50:05.689 INFO  10184 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 11:50:07.597 INFO  10184 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 11:50:07.597 INFO  10184 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 11:50:07.597 INFO  10184 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 11:50:07.941 DEBUG 10184 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 11:50:08.375 INFO  10184 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 11:50:09.040 INFO  10184 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 11:50:13.135 DEBUG 10184 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:50:14.297 DEBUG 10184 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 11:50:14.312 DEBUG 10184 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 11:50:14.327 DEBUG 10184 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 11:50:14.331 DEBUG 10184 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 11:50:14.333 DEBUG 10184 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 11:50:14.334 DEBUG 10184 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 11:50:14.337 DEBUG 10184 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 11:50:16.047 INFO  10184 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 11:50:16.049 INFO  10184 [           main] [com.jeesite.modules.Application        ] - Started Application in 12.488 seconds (JVM running for 13.652)
2020-09-05 11:52:05.021 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 11:52:05.023 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:05.027 DEBUG 10184 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 11:52:05.028 DEBUG 10184 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 11:52:05.035 DEBUG 10184 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 11:52:05.123 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:52:05.123 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:05.127 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:52:05.128 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:52:05.144 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:52:05.162 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:05.166 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:05.169 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:05.170 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 11:52:05.226 DEBUG 10184 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:52:05.493 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:05.496 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:05.499 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:05.500 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 11:52:05.504 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 11:52:05.942 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:05.940  URI: /js/a/test/testData/list  IP: 127.0.0.1
2020-09-05 11:52:05.992 INFO  10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2020-09-05 11:52:06.110 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:06.111 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:06.117 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:06.118 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2020-09-05 11:52:06.123 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:52:06.173 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:06.174 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:06.182 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:06.184 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 11:52:06.188 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:52:06.268 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:06.248  用时: 308毫秒  URI: /js/a/test/testData/list  总内存: 477.5MB  已用内存: 142.553MB
2020-09-05 11:52:06.270 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:06.271 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:06.271 DEBUG 10184 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:06.272 DEBUG 10184 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 11:52:06.294 DEBUG 10184 [   log-save-8-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 11:52:06.305 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:06.307 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:06.308 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:06.312 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092113708949504(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:06.266(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 308(Long)
2020-09-05 11:52:06.314 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:06.853 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:06.853  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 11:52:06.920 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:52:06.921 DEBUG 10184 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:06.965 DEBUG 10184 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 11:52:06.966 DEBUG 10184 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:52:06.968 DEBUG 10184 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:52:06.969 DEBUG 10184 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 11:52:06.973 DEBUG 10184 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 11:52:07.002 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:06.998  用时: 145毫秒  URI: /js/a/test/testData/listData  总内存: 477.5MB  已用内存: 171.479MB
2020-09-05 11:52:07.007 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:07.008 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:07.009 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:07.012 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092116791762944(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:07.001(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 145(Long)
2020-09-05 11:52:07.015 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:10.110 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:10.110  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:10.129 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:10.131 DEBUG 10184 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:10.137 DEBUG 10184 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:10.137 DEBUG 10184 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:52:10.140 DEBUG 10184 [nio-8980-exec-2] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:52:10.161 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:10.157  用时: 47毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 190.852MB
2020-09-05 11:52:10.165 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:10.165 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:10.166 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:10.167 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092130045763584(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:10.161(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1302084547051872256&_search=false&nd=1599277930105&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 47(Long)
2020-09-05 11:52:10.168 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:12.633 DEBUG 10184 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:12.633  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:12.644 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:12.644 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:12.647 DEBUG 10184 [nio-8980-exec-5] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:12.648 DEBUG 10184 [nio-8980-exec-5] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:52:12.650 DEBUG 10184 [nio-8980-exec-5] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:52:12.661 DEBUG 10184 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:12.658  用时: 25毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 193.988MB
2020-09-05 11:52:12.666 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:12.666 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:12.667 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:12.668 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092140531523584(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:12.661(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1302084547051872256&_search=false&nd=1599277932629&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 25(Long)
2020-09-05 11:52:12.670 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:14.095 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:14.095  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:14.099 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:14.099 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:14.102 DEBUG 10184 [nio-8980-exec-4] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:14.103 DEBUG 10184 [nio-8980-exec-4] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:14.105 DEBUG 10184 [nio-8980-exec-4] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:14.115 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:14.113  用时: 18毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 196.028MB
2020-09-05 11:52:14.119 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:14.120 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:14.120 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:14.121 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092146630041600(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:14.115(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277934091&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 18(Long)
2020-09-05 11:52:14.122 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:15.116 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:15.116  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:15.130 DEBUG 10184 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:15.131 DEBUG 10184 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:15.135 DEBUG 10184 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:15.135 DEBUG 10184 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:15.137 DEBUG 10184 [nio-8980-exec-6] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:15.147 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:15.144  用时: 28毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 198.882MB
2020-09-05 11:52:15.149 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:15.150 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:15.150 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:15.151 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092150954369024(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:15.146(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277935110&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 28(Long)
2020-09-05 11:52:15.153 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:16.347 DEBUG 10184 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:16.347  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:16.357 DEBUG 10184 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:16.358 DEBUG 10184 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:16.363 DEBUG 10184 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:16.364 DEBUG 10184 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:16.366 DEBUG 10184 [io-8980-exec-10] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:16.373 DEBUG 10184 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:16.372  用时: 25毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 202.049MB
2020-09-05 11:52:16.376 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:16.377 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:16.377 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:16.378 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092156100780032(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:16.373(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277936343&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 25(Long)
2020-09-05 11:52:16.379 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:17.430 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:17.430  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:17.439 DEBUG 10184 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:17.439 DEBUG 10184 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:17.442 DEBUG 10184 [nio-8980-exec-1] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:17.443 DEBUG 10184 [nio-8980-exec-1] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:17.445 DEBUG 10184 [nio-8980-exec-1] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:17.454 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:17.453  用时: 23毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 205.501MB
2020-09-05 11:52:17.457 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:17.457 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:17.458 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:17.459 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092160634822656(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:17.454(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277937426&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 23(Long)
2020-09-05 11:52:17.461 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:18.716 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:18.715  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:18.720 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:18.720 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:18.723 DEBUG 10184 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:18.723 DEBUG 10184 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:18.726 DEBUG 10184 [nio-8980-exec-3] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:18.735 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:18.733  用时: 18毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 207.233MB
2020-09-05 11:52:18.738 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:18.738 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:18.739 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:18.739 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092166007726080(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:18.735(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277938710&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 18(Long)
2020-09-05 11:52:18.741 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:20.069 DEBUG 10184 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:20.069  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:20.080 DEBUG 10184 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:20.081 DEBUG 10184 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:20.084 DEBUG 10184 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:20.084 DEBUG 10184 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1301517060195180544(String)
2020-09-05 11:52:20.087 DEBUG 10184 [nio-8980-exec-7] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 2
2020-09-05 11:52:20.101 DEBUG 10184 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:20.099  用时: 30毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 210.369MB
2020-09-05 11:52:20.104 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:20.104 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:20.104 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:20.105 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092171732951040(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:20.1(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1301517060195180544&_search=false&nd=1599277940064&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 30(Long)
2020-09-05 11:52:20.106 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:21.880 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:21.879  URI: /js/a/test/testData/subListData  IP: 127.0.0.1
2020-09-05 11:52:21.888 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = #{sqlMap.where#test_data_id#EQ1} ORDER BY a.id ASC
2020-09-05 11:52:21.888 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:21.891 DEBUG 10184 [nio-8980-exec-8] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_sort` AS "testSort", a.`test_data_id` AS "testData.id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", u12.`user_name` AS "testUser.userName", u13.`office_name` AS "testOffice.officeName" FROM `test_data_child` a LEFT JOIN `js_sys_user` u12 ON u12.user_code = a.test_user_code LEFT JOIN `js_sys_office` u13 ON u13.office_code = a.test_office_code WHERE a.`test_data_id` = ? ORDER BY a.id ASC
2020-09-05 11:52:21.892 DEBUG 10184 [nio-8980-exec-8] [c.j.m.t.dao.TestDataChildDao.findList  ] - ==> Parameters: 1302084547051872256(String)
2020-09-05 11:52:21.894 DEBUG 10184 [nio-8980-exec-8] [c.j.m.t.dao.TestDataChildDao.findList  ] - <==      Total: 1
2020-09-05 11:52:21.902 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:21.900  用时: 21毫秒  URI: /js/a/test/testData/subListData  总内存: 477.5MB  已用内存: 213.505MB
2020-09-05 11:52:21.905 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:21.905 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:21.906 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:21.906 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092179286892544(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 11:52:21.901(Timestamp), /js/a/test/testData/subListData(String), POST(String), testData.id=1302084547051872256&_search=false&nd=1599277941876&pageSize=-1&pageNo=1&orderBy=&sord=asc(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 21(Long)
2020-09-05 11:52:21.908 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:44.228 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:44.228  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2020-09-05 11:52:44.242 INFO  10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2020-09-05 11:52:44.268 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:44.268 DEBUG 10184 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:44.271 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:44.271 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2020-09-05 11:52:44.278 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:52:44.282 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:44.282 DEBUG 10184 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:44.285 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:52:44.286 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2020-09-05 11:52:44.289 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2020-09-05 11:52:44.294 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:44.293  用时: 65毫秒  URI: /js/a/sys/menu/list  总内存: 477.5MB  已用内存: 222.510MB
2020-09-05 11:52:44.298 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:44.298 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:44.299 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:44.300 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092273209942016(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 11:52:44.294(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 65(Long)
2020-09-05 11:52:44.302 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:44.426 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:44.425  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2020-09-05 11:52:44.448 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:44.448 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:44.453 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:52:44.454 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2020-09-05 11:52:45.016 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 11:52:45.029 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:45.028  用时: 603毫秒  URI: /js/a/sys/menu/listData  总内存: 477.5MB  已用内存: 229.496MB
2020-09-05 11:52:45.034 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:45.034 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:45.035 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:45.035 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092276292755456(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 11:52:45.029(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 603(Long)
2020-09-05 11:52:45.037 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:52:57.450 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:52:57.450  URI: /js/a/sys/menu/form  IP: 127.0.0.1
2020-09-05 11:52:57.452 DEBUG 10184 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = #{menuCode}
2020-09-05 11:52:57.452 DEBUG 10184 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will not be managed by Spring
2020-09-05 11:52:57.455 DEBUG 10184 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.MenuDao.get] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`menu_code` = ?
2020-09-05 11:52:57.456 DEBUG 10184 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.MenuDao.get] - ==> Parameters: 1298541730076454912(String)
2020-09-05 11:52:57.499 DEBUG 10184 [nio-8980-exec-6] [com.jeesite.modules.sys.dao.MenuDao.get] - <==      Total: 1
2020-09-05 11:52:57.503 DEBUG 10184 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 11:52:57.503 DEBUG 10184 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:57.506 DEBUG 10184 [nio-8980-exec-6] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 11:52:57.506 DEBUG 10184 [nio-8980-exec-6] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 11:52:57.509 DEBUG 10184 [nio-8980-exec-6] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 11:52:57.512 INFO  10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuForm <<<<<<<<< /js/a/sys/menu/form >>>>>>>>> com.jeesite.modules.sys.web.MenuController#form(Menu, Model)
2020-09-05 11:52:57.544 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:52:57.543  用时: 93毫秒  URI: /js/a/sys/menu/form  总内存: 477.5MB  已用内存: 239.143MB
2020-09-05 11:52:57.549 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:52:57.549 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:52:57.549 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:52:57.550 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092328784470016(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 11:52:57.544(Timestamp), /js/a/sys/menu/form(String), GET(String), menuCode=1298541730076454912(String), 1298541730076454912(String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 93(Long)
2020-09-05 11:52:57.552 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:05.800 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:05.799  URI: /js/a/sys/module/list  IP: 127.0.0.1
2020-09-05 11:53:05.809 INFO  10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/moduleList <<<<<<<<< /js/a/sys/module/list >>>>>>>>> com.jeesite.modules.sys.web.ModuleController#list(Module, Model)
2020-09-05 11:53:05.827 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:53:05.828 DEBUG 10184 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:05.830 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:53:05.831 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2020-09-05 11:53:05.835 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2020-09-05 11:53:05.839 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:05.838  用时: 39毫秒  URI: /js/a/sys/module/list  总内存: 477.5MB  已用内存: 247.737MB
2020-09-05 11:53:05.843 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:05.844 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:05.844 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:05.845 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092363576221696(String), select(String), 系统管理/系统设置/模块管理(String), system(String), 超级管理员(String), 2020-09-05 11:53:05.839(Timestamp), /js/a/sys/module/list(String), GET(String), (String), (String), Module(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 39(Long)
2020-09-05 11:53:05.846 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:05.915 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:05.915  URI: /js/a/sys/module/listData  IP: 127.0.0.1
2020-09-05 11:53:05.925 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:53:05.926 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:05.930 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT count(0) FROM `js_sys_module` a WHERE a.`status` != ?
2020-09-05 11:53:05.930 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 1(String)
2020-09-05 11:53:05.932 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:53:05.932 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 1(String)
2020-09-05 11:53:05.934 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 11:53:05.945 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:05.944  用时: 29毫秒  URI: /js/a/sys/module/listData  总内存: 477.5MB  已用内存: 252.851MB
2020-09-05 11:53:05.949 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:05.950 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:05.950 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:05.953 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092364020817920(String), select(String), 系统管理/系统设置/模块管理(String), system(String), 超级管理员(String), 2020-09-05 11:53:05.945(Timestamp), /js/a/sys/module/listData(String), POST(String), moduleName=&mainClassName=&status=&pageNo=&pageSize=&orderBy=(String), (String), Module(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 29(Long)
2020-09-05 11:53:05.954 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:11.878 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:11.878  URI: /js/a/sys/config/list  IP: 127.0.0.1
2020-09-05 11:53:11.893 INFO  10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/configList <<<<<<<<< /js/a/sys/config/list >>>>>>>>> com.jeesite.modules.sys.web.ConfigController#list(Config, Model)
2020-09-05 11:53:11.917 DEBUG 10184 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:53:11.917 DEBUG 10184 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:11.920 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 11:53:11.921 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2020-09-05 11:53:11.923 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 11:53:11.926 DEBUG 10184 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:11.925  用时: 47毫秒  URI: /js/a/sys/config/list  总内存: 477.5MB  已用内存: 259.385MB
2020-09-05 11:53:11.932 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:11.933 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:11.933 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:11.934 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092389106950144(String), select(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:11.926(Timestamp), /js/a/sys/config/list(String), GET(String), (String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 47(Long)
2020-09-05 11:53:11.935 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:11.978 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:11.978  URI: /js/a/sys/config/listData  IP: 127.0.0.1
2020-09-05 11:53:11.989 DEBUG 10184 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:53:11.989 DEBUG 10184 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:11.996 DEBUG 10184 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT count(0) FROM `js_sys_config` a
2020-09-05 11:53:11.997 DEBUG 10184 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:11.998 DEBUG 10184 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key LIMIT 20
2020-09-05 11:53:11.998 DEBUG 10184 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:12.001 DEBUG 10184 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:53:12.008 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:12.008  用时: 30毫秒  URI: /js/a/sys/config/listData  总内存: 477.5MB  已用内存: 263.361MB
2020-09-05 11:53:12.013 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:12.014 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:12.014 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:12.015 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092389450883072(String), select(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:12.008(Timestamp), /js/a/sys/config/listData(String), POST(String), configName=&configKey_like=&isSys=&pageNo=&pageSize=&orderBy=(String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 30(Long)
2020-09-05 11:53:12.016 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:30.669 DEBUG 10184 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:30.669  URI: /js/a/sys/config/form  IP: 127.0.0.1
2020-09-05 11:53:30.671 DEBUG 10184 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a WHERE a.`id` = #{id}
2020-09-05 11:53:30.672 DEBUG 10184 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will not be managed by Spring
2020-09-05 11:53:30.678 DEBUG 10184 [nio-8980-exec-7] [c.jeesite.modules.sys.dao.ConfigDao.get] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a WHERE a.`id` = ?
2020-09-05 11:53:30.679 DEBUG 10184 [nio-8980-exec-7] [c.jeesite.modules.sys.dao.ConfigDao.get] - ==> Parameters: 1298482531474653184(String)
2020-09-05 11:53:30.681 DEBUG 10184 [nio-8980-exec-7] [c.jeesite.modules.sys.dao.ConfigDao.get] - <==      Total: 1
2020-09-05 11:53:30.684 INFO  10184 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/configForm <<<<<<<<< /js/a/sys/config/form >>>>>>>>> com.jeesite.modules.sys.web.ConfigController#form(Config, Model)
2020-09-05 11:53:30.704 DEBUG 10184 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:30.704  用时: 35毫秒  URI: /js/a/sys/config/form  总内存: 477.5MB  已用内存: 267.115MB
2020-09-05 11:53:30.707 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:30.708 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:30.708 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:30.709 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092467867590656(String), select(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:30.704(Timestamp), /js/a/sys/config/form(String), GET(String), id=1298482531474653184(String), 1298482531474653184(String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 35(Long)
2020-09-05 11:53:30.713 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:46.064 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:46.064  URI: /js/a/sys/config/checkConfigKey  IP: 127.0.0.1
2020-09-05 11:53:46.066 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:46.065  用时: 1毫秒  URI: /js/a/sys/config/checkConfigKey  总内存: 477.5MB  已用内存: 268.331MB
2020-09-05 11:53:46.070 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:46.070 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:46.070 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:46.071 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092532300488704(String), access(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:46.066(Timestamp), /js/a/sys/config/checkConfigKey(String), GET(String), oldConfigKey=sys.index.menuStyle&configKey=sys.index.menuStyle(String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 1(Long)
2020-09-05 11:53:46.072 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:46.091 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:46.091  URI: /js/a/sys/config/save  IP: 127.0.0.1
2020-09-05 11:53:46.092 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a WHERE a.`id` = #{id}
2020-09-05 11:53:46.092 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will not be managed by Spring
2020-09-05 11:53:46.095 DEBUG 10184 [nio-8980-exec-8] [c.jeesite.modules.sys.dao.ConfigDao.get] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a WHERE a.`id` = ?
2020-09-05 11:53:46.096 DEBUG 10184 [nio-8980-exec-8] [c.jeesite.modules.sys.dao.ConfigDao.get] - ==> Parameters: 1298482531474653184(String)
2020-09-05 11:53:46.097 DEBUG 10184 [nio-8980-exec-8] [c.jeesite.modules.sys.dao.ConfigDao.get] - <==      Total: 1
2020-09-05 11:53:46.183 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_sys_config` SET `config_name` = #{configName}, `config_key` = #{configKey}, `config_value` = #{configValue}, `is_sys` = #{isSys}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `id` = #{id}
2020-09-05 11:53:46.184 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:46.184 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.update   ] - ==>  Preparing: UPDATE `js_sys_config` SET `config_name` = ?, `config_key` = ?, `config_value` = ?, `is_sys` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `id` = ?
2020-09-05 11:53:46.184 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.update   ] - ==> Parameters: 主框架页-主导航菜单显示风格(String), sys.index.menuStyle(String), 2(String), 0(String), system(String), 2020-09-05 11:53:46.183(Timestamp), 1：菜单全部在左侧；2：根菜单显示在顶部(String), 1298482531474653184(String)
2020-09-05 11:53:46.185 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.update   ] - <==    Updates: 1
2020-09-05 11:53:46.190 DEBUG 10184 [nio-8980-exec-8] [com.jeesite.common.io.PropertiesUtils  ] - Trying: [classpath:config/jeesite-core.yml, classpath:application.yml, classpath:application-default.yml, classpath:config/application.yml, classpath:config/application-default.yml, classpath:bootstrap.yml, classpath:bootstrap-default.yml, classpath:config/bootstrap.yml, classpath:config/bootstrap-default.yml, file:application.yml, file:application-default.yml, file:config/application.yml, file:config/application-default.yml, file:bootstrap.yml, file:bootstrap-default.yml, file:config/bootstrap.yml, file:config/bootstrap-default.yml]
2020-09-05 11:53:46.206 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:46.205  用时: 114毫秒  URI: /js/a/sys/config/save  总内存: 477.5MB  已用内存: 291.063MB
2020-09-05 11:53:46.209 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:46.209 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@53153d5e] will be managed by Spring
2020-09-05 11:53:46.210 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:46.210 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092532887691264(String), update(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:46.206(Timestamp), /js/a/sys/config/save(String), POST(String), id=1298482531474653184&configName=主框架页-主导航菜单显示风格&configKey=sys.index.menuStyle&configValue=2&!isSys=&isSys=0&remarks=1：菜单全部在左侧；2：根菜单显示在顶部(String), 1298482531474653184(String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 114(Long)
2020-09-05 11:53:46.216 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:46.216  URI: /js/a/sys/config/listData  IP: 127.0.0.1
2020-09-05 11:53:46.345 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:46.351 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:53:46.351 DEBUG 10184 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:46.355 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT count(0) FROM `js_sys_config` a
2020-09-05 11:53:46.355 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:46.377 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key LIMIT 20
2020-09-05 11:53:46.378 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:46.399 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:53:46.404 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:46.403  用时: 187毫秒  URI: /js/a/sys/config/listData  总内存: 477.5MB  已用内存: 293.916MB
2020-09-05 11:53:46.407 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:46.407 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:46.407 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:46.408 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092533713969152(String), select(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:46.403(Timestamp), /js/a/sys/config/listData(String), POST(String), configName=&configKey_like=&isSys=&pageNo=&pageSize=&orderBy=(String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 187(Long)
2020-09-05 11:53:46.409 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:48.013 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:53:48.014 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.017 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:53:48.017 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:48.019 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:53:48.026 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:48.027 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.031 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:48.031 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 11:53:48.033 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 11:53:48.119 DEBUG 10184 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:48.119 DEBUG 10184 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.122 DEBUG 10184 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:48.123 DEBUG 10184 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298482562558640128,%(String)
2020-09-05 11:53:48.183 DEBUG 10184 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 67
2020-09-05 11:53:48.269 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:48.269  URI: /js/a/sys/config/list  IP: 127.0.0.1
2020-09-05 11:53:48.270 INFO  10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/configList <<<<<<<<< /js/a/sys/config/list >>>>>>>>> com.jeesite.modules.sys.web.ConfigController#list(Config, Model)
2020-09-05 11:53:48.274 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:48.273  用时: 4毫秒  URI: /js/a/sys/config/list  总内存: 477.5MB  已用内存: 305.175MB
2020-09-05 11:53:48.279 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:48.279 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.279 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:48.280 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092541561511936(String), access(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:48.274(Timestamp), /js/a/sys/config/list(String), GET(String), (String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 4(Long)
2020-09-05 11:53:48.281 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:48.593 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:48.593  URI: /js/a/sys/config/listData  IP: 127.0.0.1
2020-09-05 11:53:48.597 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 11:53:48.597 DEBUG 10184 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.601 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT count(0) FROM `js_sys_config` a
2020-09-05 11:53:48.601 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:48.602 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key LIMIT 20
2020-09-05 11:53:48.603 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 11:53:48.605 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 11:53:48.611 DEBUG 10184 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:48.610  用时: 17毫秒  URI: /js/a/sys/config/listData  总内存: 477.5MB  已用内存: 306.615MB
2020-09-05 11:53:48.615 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:48.615 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:48.615 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:48.616 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092542970798080(String), select(String), 系统管理/系统设置/参数设置(String), system(String), 超级管理员(String), 2020-09-05 11:53:48.61(Timestamp), /js/a/sys/config/listData(String), POST(String), configName=&configKey_like=&isSys=&pageNo=&pageSize=&orderBy=(String), (String), Config(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 17(Long)
2020-09-05 11:53:48.617 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:49.459 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:49.459 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:49.462 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 11:53:49.462 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 11:53:49.464 DEBUG 10184 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 11:53:51.466 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:51.466  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 11:53:51.481 INFO  10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 11:53:51.521 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:51.520  用时: 54毫秒  URI: /js/a/market/marketPurchase/list  总内存: 477.5MB  已用内存: 317.716MB
2020-09-05 11:53:51.526 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:51.527 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:51.527 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:51.528 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092555176222720(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 11:53:51.52(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 54(Long)
2020-09-05 11:53:51.529 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:51.582 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:51.582  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 11:53:51.596 DEBUG 10184 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 11:53:51.598 DEBUG 10184 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:51.602 DEBUG 10184 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` != ?
2020-09-05 11:53:51.602 DEBUG 10184 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 1(String)
2020-09-05 11:53:51.649 DEBUG 10184 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 11:53:51.650 DEBUG 10184 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 1(String)
2020-09-05 11:53:51.652 DEBUG 10184 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 11:53:51.665 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:51.663  用时: 81毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 477.5MB  已用内存: 322.747MB
2020-09-05 11:53:51.669 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:51.669 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:51.670 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:51.671 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092555780202496(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 11:53:51.664(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&supplierId=&supplierName=&purchaseLabel=&status=&remarks=&totalMoney=&payState=&payDate=&payableMoney=&paidMoney=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 81(Long)
2020-09-05 11:53:51.674 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 11:53:57.834 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 11:53:57.833  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 11:53:57.835 INFO  10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model)
2020-09-05 11:53:57.872 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 11:53:57.872  用时: 39毫秒  URI: /js/a/market/marketPurchase/form  总内存: 477.5MB  已用内存: 327.578MB
2020-09-05 11:53:57.876 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 11:53:57.876 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6e425e3c] will be managed by Spring
2020-09-05 11:53:57.876 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 11:53:57.877 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302092581818441728(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 11:53:57.872(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 39(Long)
2020-09-05 11:53:57.878 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 17:59:21.685 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 05:59:21.685  URI: /js/a/market/marketSupplier/list  IP: 127.0.0.1
2020-09-05 17:59:22.232 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 17:59:22.235 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.243 DEBUG 10184 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 17:59:22.245 DEBUG 10184 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 17:59:22.250 DEBUG 10184 [nio-8980-exec-8] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 17:59:22.261 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 17:59:22.261 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.264 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 17:59:22.265 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 17:59:22.266 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 17:59:22.275 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 17:59:22.276 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.279 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 17:59:22.279 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 17:59:22.450 DEBUG 10184 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 17:59:22.453 INFO  10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketSupplierList <<<<<<<<< /js/a/market/marketSupplier/list >>>>>>>>> com.jeesite.modules.market.web.MarketSupplierController#list(MarketSupplier, Model)
2020-09-05 17:59:22.489 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:22.489 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.493 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:22.493 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), market_supplier(String), 1(String), 0(String)
2020-09-05 17:59:22.495 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 17:59:22.500 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:22.500 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.504 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:22.505 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2020-09-05 17:59:22.542 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2020-09-05 17:59:22.547 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 05:59:22.546  用时: 861毫秒  URI: /js/a/market/marketSupplier/list  总内存: 469.5MB  已用内存: 73.406MB
2020-09-05 17:59:22.549 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 17:59:22.549 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.550 DEBUG 10184 [   log-save-8-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 17:59:22.550 DEBUG 10184 [   log-save-8-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 17:59:22.564 DEBUG 10184 [   log-save-8-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 17:59:22.567 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 17:59:22.568 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.568 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 17:59:22.569 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184540566298624(String), select(String), 超市管理/供应商管理(String), system(String), 超级管理员(String), 2020-09-05 17:59:22.546(Timestamp), /js/a/market/marketSupplier/list(String), GET(String), (String), (String), MarketSupplier(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 861(Long)
2020-09-05 17:59:22.570 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 17:59:22.673 DEBUG 10184 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 05:59:22.673  URI: /js/a/market/marketSupplier/listData  IP: 127.0.0.1
2020-09-05 17:59:22.697 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 17:59:22.699 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.703 DEBUG 10184 [nio-8980-exec-5] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_supplier` a WHERE a.`status` != ?
2020-09-05 17:59:22.704 DEBUG 10184 [nio-8980-exec-5] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 1(String)
2020-09-05 17:59:22.720 DEBUG 10184 [nio-8980-exec-5] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 17:59:22.721 DEBUG 10184 [nio-8980-exec-5] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 1(String)
2020-09-05 17:59:22.723 DEBUG 10184 [nio-8980-exec-5] [c.j.m.m.dao.MarketSupplierDao.findList ] - <==      Total: 1
2020-09-05 17:59:22.731 DEBUG 10184 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 05:59:22.730  用时: 57毫秒  URI: /js/a/market/marketSupplier/listData  总内存: 469.5MB  已用内存: 81.393MB
2020-09-05 17:59:22.736 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 17:59:22.737 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:22.737 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 17:59:22.738 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184541342244864(String), select(String), 超市管理/供应商管理(String), system(String), 超级管理员(String), 2020-09-05 17:59:22.731(Timestamp), /js/a/market/marketSupplier/listData(String), POST(String), supplierName=&supplierPhone=&supplierLabel=&supplierNearBizDate_gte=&supplierNearBizDate_lte=&status=&pageNo=&pageSize=&orderBy=(String), (String), MarketSupplier(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 57(Long)
2020-09-05 17:59:22.739 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 17:59:32.806 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 05:59:32.806  URI: /js/a/market/marketGood/list  IP: 127.0.0.1
2020-09-05 17:59:32.832 INFO  10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketGoodList <<<<<<<<< /js/a/market/marketGood/list >>>>>>>>> com.jeesite.modules.market.web.MarketGoodController#list(MarketGood, Model)
2020-09-05 17:59:32.963 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:32.964 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:32.969 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:32.970 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 17:59:32.972 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 17:59:32.977 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:32.977 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:32.981 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:32.981 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), market_good_type(String), 1(String), 0(String)
2020-09-05 17:59:32.983 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2020-09-05 17:59:32.987 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 05:59:32.987  用时: 181毫秒  URI: /js/a/market/marketGood/list  总内存: 469.5MB  已用内存: 92.761MB
2020-09-05 17:59:32.992 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 17:59:32.992 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:32.993 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 17:59:32.994 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184584359026688(String), select(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 17:59:32.987(Timestamp), /js/a/market/marketGood/list(String), GET(String), (String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 181(Long)
2020-09-05 17:59:32.996 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 17:59:33.066 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 05:59:33.066  URI: /js/a/market/marketGood/listData  IP: 127.0.0.1
2020-09-05 17:59:33.092 DEBUG 10184 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 17:59:33.094 DEBUG 10184 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:33.099 DEBUG 10184 [nio-8980-exec-1] [c.j.m.market.dao.MarketGoodDao.findList] - ==>  Preparing: SELECT count(0) FROM `market_good` a WHERE a.`status` != ?
2020-09-05 17:59:33.099 DEBUG 10184 [nio-8980-exec-1] [c.j.m.market.dao.MarketGoodDao.findList] - ==> Parameters: 1(String)
2020-09-05 17:59:33.151 DEBUG 10184 [nio-8980-exec-1] [c.j.m.market.dao.MarketGoodDao.findList] - ==>  Preparing: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 17:59:33.152 DEBUG 10184 [nio-8980-exec-1] [c.j.m.market.dao.MarketGoodDao.findList] - ==> Parameters: 1(String)
2020-09-05 17:59:33.165 DEBUG 10184 [nio-8980-exec-1] [c.j.m.market.dao.MarketGoodDao.findList] - <==      Total: 1
2020-09-05 17:59:33.179 DEBUG 10184 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 05:59:33.177  用时: 111毫秒  URI: /js/a/market/marketGood/listData  总内存: 469.5MB  已用内存: 98.361MB
2020-09-05 17:59:33.183 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 17:59:33.183 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:33.184 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 17:59:33.185 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184585160138752(String), select(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 17:59:33.178(Timestamp), /js/a/market/marketGood/listData(String), POST(String), status=&goodType=&goodName=&pageNo=&pageSize=&orderBy=(String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 111(Long)
2020-09-05 17:59:33.186 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 17:59:50.205 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 05:59:50.205  URI: /js/a/market/marketGood/form  IP: 127.0.0.1
2020-09-05 17:59:50.210 INFO  10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketGoodForm <<<<<<<<< /js/a/market/marketGood/form >>>>>>>>> com.jeesite.modules.market.web.MarketGoodController#form(MarketGood, Model)
2020-09-05 17:59:50.365 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:50.366 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:50.370 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 17:59:50.370 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), market_good_unit(String), 1(String), 0(String)
2020-09-05 17:59:50.373 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2020-09-05 17:59:50.478 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 05:59:50.478  用时: 273毫秒  URI: /js/a/market/marketGood/form  总内存: 469.5MB  已用内存: 109.875MB
2020-09-05 17:59:50.483 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 17:59:50.483 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 17:59:50.483 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 17:59:50.484 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184657721597952(String), select(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 17:59:50.478(Timestamp), /js/a/market/marketGood/form(String), GET(String), (String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 273(Long)
2020-09-05 17:59:50.486 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 18:00:11.752 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 06:00:11.752  URI: /js/a/market/marketGood/getGoodInfoByBarCode  IP: 127.0.0.1
2020-09-05 18:00:12.848 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 06:00:12.847  用时: 1秒  URI: /js/a/market/marketGood/getGoodInfoByBarCode  总内存: 469.5MB  已用内存: 132.429MB
2020-09-05 18:00:12.852 DEBUG 10184 [   log-save-8-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 18:00:12.852 DEBUG 10184 [   log-save-8-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:00:12.852 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:00:12.853 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302184751548178432(String), access(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 18:00:12.848(Timestamp), /js/a/market/marketGood/getGoodInfoByBarCode(String), GET(String), barCode=6934024512123(String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 1095(Long)
2020-09-05 18:00:12.854 DEBUG 10184 [   log-save-8-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 18:02:26.833 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = #{sqlMap.where#file_md5#EQ1} ORDER BY a.file_id DESC
2020-09-05 18:02:26.835 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:02:26.838 DEBUG 10184 [nio-8980-exec-8] [c.j.m.file.dao.FileEntityDao.findList  ] - ==>  Preparing: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = ? ORDER BY a.file_id DESC LIMIT 1
2020-09-05 18:02:26.838 DEBUG 10184 [nio-8980-exec-8] [c.j.m.file.dao.FileEntityDao.findList  ] - ==> Parameters: 6f4a1713d9274f79f945a74cdd9dfb23(String)
2020-09-05 18:02:26.852 DEBUG 10184 [nio-8980-exec-8] [c.j.m.file.dao.FileEntityDao.findList  ] - <==      Total: 0
2020-09-05 18:02:27.006 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = #{sqlMap.where#file_md5#EQ1} ORDER BY a.file_id DESC
2020-09-05 18:02:27.007 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:02:27.014 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.findList  ] - ==>  Preparing: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = ? ORDER BY a.file_id DESC LIMIT 1
2020-09-05 18:02:27.014 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.findList  ] - ==> Parameters: 6f4a1713d9274f79f945a74cdd9dfb23(String)
2020-09-05 18:02:27.016 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.findList  ] - <==      Total: 0
2020-09-05 18:02:27.768 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_file_entity` (`file_id`, `file_md5`, `file_path`, `file_content_type`, `file_extension`, `file_size`, `file_meta`) VALUES (#{fileId}, #{fileMd5}, #{filePath}, #{fileContentType}, #{fileExtension}, #{fileSize}, #{fileMeta})
2020-09-05 18:02:27.769 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.insert    ] - ==>  Preparing: INSERT INTO `js_sys_file_entity` (`file_id`, `file_md5`, `file_path`, `file_content_type`, `file_extension`, `file_size`, `file_meta`) VALUES (?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:02:27.769 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.insert    ] - ==> Parameters: 1302185313605885954(String), 6f4a1713d9274f79f945a74cdd9dfb23(String), 202009/(String), image/png(String), png(String), 162929(Long), {"width":716,"height":343}(String)
2020-09-05 18:02:27.835 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileEntityDao.insert    ] - <==    Updates: 1
2020-09-05 18:02:27.839 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_file_upload` (`id`, `file_id`, `file_name`, `file_type`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (#{id}, #{fileEntity.fileId}, #{fileName}, #{fileType}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate})
2020-09-05 18:02:27.841 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileUploadDao.insert    ] - ==>  Preparing: INSERT INTO `js_sys_file_upload` (`id`, `file_id`, `file_name`, `file_type`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:02:27.842 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileUploadDao.insert    ] - ==> Parameters: 1302185313605885953(String), 1302185313605885954(String), mt-loadmore.png(String), image(String), 0(String), system(String), 2020-09-05 18:02:27.839(Timestamp), system(String), 2020-09-05 18:02:27.839(Timestamp)
2020-09-05 18:02:27.885 DEBUG 10184 [nio-8980-exec-4] [c.j.m.file.dao.FileUploadDao.insert    ] - <==    Updates: 1
2020-09-05 18:02:27.910 DEBUG 10184 [nio-8980-exec-4] [c.j.modules.sys.web.UserfilesController] - File: D:\work\jeesite4-market\src\main\webapp\userfiles\fileupload\202009\1302185313605885954.png
2020-09-05 18:04:01.225 DEBUG 10184 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = #{sqlMap.where#file_md5#EQ1} ORDER BY a.file_id DESC
2020-09-05 18:04:01.225 DEBUG 10184 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:04:01.229 DEBUG 10184 [nio-8980-exec-5] [c.j.m.file.dao.FileEntityDao.findList  ] - ==>  Preparing: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = ? ORDER BY a.file_id DESC LIMIT 1
2020-09-05 18:04:01.229 DEBUG 10184 [nio-8980-exec-5] [c.j.m.file.dao.FileEntityDao.findList  ] - ==> Parameters: ea4c14ab7a6e53e0561ec2ae2506d8d8(String)
2020-09-05 18:04:01.230 DEBUG 10184 [nio-8980-exec-5] [c.j.m.file.dao.FileEntityDao.findList  ] - <==      Total: 0
2020-09-05 18:04:01.292 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = #{sqlMap.where#file_md5#EQ1} ORDER BY a.file_id DESC
2020-09-05 18:04:01.293 DEBUG 10184 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:04:01.296 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.findList  ] - ==>  Preparing: SELECT a.`file_id` AS "fileId", a.`file_md5` AS "fileMd5", a.`file_path` AS "filePath", a.`file_content_type` AS "fileContentType", a.`file_extension` AS "fileExtension", a.`file_size` AS "fileSize", a.`file_meta` AS "fileMeta", a.`file_preview` AS "filePreview" FROM `js_sys_file_entity` a WHERE a.`file_md5` = ? ORDER BY a.file_id DESC LIMIT 1
2020-09-05 18:04:01.296 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.findList  ] - ==> Parameters: ea4c14ab7a6e53e0561ec2ae2506d8d8(String)
2020-09-05 18:04:01.297 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.findList  ] - <==      Total: 0
2020-09-05 18:04:01.695 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_file_entity` (`file_id`, `file_md5`, `file_path`, `file_content_type`, `file_extension`, `file_size`, `file_meta`) VALUES (#{fileId}, #{fileMd5}, #{filePath}, #{fileContentType}, #{fileExtension}, #{fileSize}, #{fileMeta})
2020-09-05 18:04:01.695 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.insert    ] - ==>  Preparing: INSERT INTO `js_sys_file_entity` (`file_id`, `file_md5`, `file_path`, `file_content_type`, `file_extension`, `file_size`, `file_meta`) VALUES (?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:01.696 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.insert    ] - ==> Parameters: 1302185709451714562(String), ea4c14ab7a6e53e0561ec2ae2506d8d8(String), 202009/(String), image/png(String), png(String), 11574(Long), {"width":550,"height":330}(String)
2020-09-05 18:04:01.697 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileEntityDao.insert    ] - <==    Updates: 1
2020-09-05 18:04:01.698 DEBUG 10184 [nio-8980-exec-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_file_upload` (`id`, `file_id`, `file_name`, `file_type`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (#{id}, #{fileEntity.fileId}, #{fileName}, #{fileType}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate})
2020-09-05 18:04:01.698 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileUploadDao.insert    ] - ==>  Preparing: INSERT INTO `js_sys_file_upload` (`id`, `file_id`, `file_name`, `file_type`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:01.698 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileUploadDao.insert    ] - ==> Parameters: 1302185709451714561(String), 1302185709451714562(String), 纯水乐纯净水.png(String), image(String), 0(String), system(String), 2020-09-05 18:04:01.697(Timestamp), system(String), 2020-09-05 18:04:01.697(Timestamp)
2020-09-05 18:04:01.705 DEBUG 10184 [nio-8980-exec-2] [c.j.m.file.dao.FileUploadDao.insert    ] - <==    Updates: 1
2020-09-05 18:04:01.768 DEBUG 10184 [nio-8980-exec-2] [c.j.modules.sys.web.UserfilesController] - File: D:\work\jeesite4-market\src\main\webapp\userfiles\fileupload\202009\1302185709451714562.png
2020-09-05 18:04:04.425 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 06:04:04.425  URI: /js/a/market/marketGood/save  IP: 127.0.0.1
2020-09-05 18:04:04.451 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `market_good` (`id`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `barcode`, `good_type`, `good_self_code`, `good_name`, `good_short_name`, `good_unit`, `good_label`, `good_level`, `good_packaging_specs`, `good_origin`, `good_sale_price`, `good_suggest_price`) VALUES (#{id}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{barcode}, #{goodType}, #{goodSelfCode}, #{goodName}, #{goodShortName}, #{goodUnit}, #{goodLabel}, #{goodLevel}, #{goodPackagingSpecs}, #{goodOrigin}, #{goodSalePrice}, #{goodSuggestPrice})
2020-09-05 18:04:04.452 DEBUG 10184 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:04:04.452 DEBUG 10184 [nio-8980-exec-9] [c.j.m.market.dao.MarketGoodDao.insert  ] - ==>  Preparing: INSERT INTO `market_good` (`id`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `barcode`, `good_type`, `good_self_code`, `good_name`, `good_short_name`, `good_unit`, `good_label`, `good_level`, `good_packaging_specs`, `good_origin`, `good_sale_price`, `good_suggest_price`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:04.453 DEBUG 10184 [nio-8980-exec-9] [c.j.m.market.dao.MarketGoodDao.insert  ] - ==> Parameters: 1302185722961567744(String), 0(String), system(String), 2020-09-05 18:04:04.451(Timestamp), system(String), 2020-09-05 18:04:04.451(Timestamp), (String), 6934024512123(String), (String), (String), 纯水乐 饮用纯净水(String), (String), (String), (String), (String), 550mL(String), (String), 1.0(Double), 1.0(Double)
2020-09-05 18:04:04.465 DEBUG 10184 [nio-8980-exec-9] [c.j.m.market.dao.MarketGoodDao.insert  ] - <==    Updates: 1
2020-09-05 18:04:04.467 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_sys_file_upload` SET `file_sort` = #{fileSort}, `biz_key` = #{bizKey}, `biz_type` = #{bizType}, `update_by` = #{updateBy}, `update_date` = #{updateDate} WHERE `id` = #{id}
2020-09-05 18:04:04.467 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.update    ] - ==>  Preparing: UPDATE `js_sys_file_upload` SET `file_sort` = ?, `biz_key` = ?, `biz_type` = ?, `update_by` = ?, `update_date` = ? WHERE `id` = ?
2020-09-05 18:04:04.468 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.update    ] - ==> Parameters: 10(Integer), 1302185722961567744(String), marketGood_image(String), system(String), 2020-09-05 18:04:04.467(Timestamp), 1302185709451714561(String)
2020-09-05 18:04:04.469 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.update    ] - <==    Updates: 1
2020-09-05 18:04:04.469 DEBUG 10184 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_sys_file_upload` SET `status` = #{status}, `update_by` = #{updateBy}, `update_date` = #{updateDate} WHERE `id` = #{id}
2020-09-05 18:04:04.470 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.delete    ] - ==>  Preparing: UPDATE `js_sys_file_upload` SET `status` = ?, `update_by` = ?, `update_date` = ? WHERE `id` = ?
2020-09-05 18:04:04.470 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.delete    ] - ==> Parameters: 1(String), system(String), 2020-09-05 18:04:04.469(Timestamp), 1302185313605885953(String)
2020-09-05 18:04:04.471 DEBUG 10184 [nio-8980-exec-9] [c.j.m.file.dao.FileUploadDao.delete    ] - <==    Updates: 1
2020-09-05 18:04:04.492 DEBUG 10184 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 06:04:04.491  用时: 66毫秒  URI: /js/a/market/marketGood/save  总内存: 469.5MB  已用内存: 177.136MB
2020-09-05 18:04:04.494 DEBUG 10184 [   log-save-8-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 18:04:04.494 DEBUG 10184 [   log-save-8-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5ed75c83] will be managed by Spring
2020-09-05 18:04:04.495 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:04.495 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302185723129339904(String), update(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 18:04:04.492(Timestamp), /js/a/market/marketGood/save(String), POST(String), id=&remarks=&barcode=6934024512123&goodType=&goodSelfCode=&goodName=纯水乐 饮用纯净水&goodShortName=&goodUnit=&goodLabel=&goodLevel=&goodShelfNo=&goodPackagingSpecs=550mL&goodOrigin=&goodCostPrice=&goodSalePrice=1.00&goodSuggestPrice=1.00&marketGood_image=1302185709451714561&marketGood_image__del=1302185313605885953(String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 66(Long)
2020-09-05 18:04:04.502 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 06:04:04.502  URI: /js/a/market/marketGood/listData  IP: 127.0.0.1
2020-09-05 18:04:04.540 DEBUG 10184 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 18:04:04.540 DEBUG 10184 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will be managed by Spring
2020-09-05 18:04:04.545 DEBUG 10184 [nio-8980-exec-8] [c.j.m.market.dao.MarketGoodDao.findList] - ==>  Preparing: SELECT count(0) FROM `market_good` a WHERE a.`status` != ?
2020-09-05 18:04:04.545 DEBUG 10184 [nio-8980-exec-8] [c.j.m.market.dao.MarketGoodDao.findList] - ==> Parameters: 1(String)
2020-09-05 18:04:04.565 DEBUG 10184 [   log-save-8-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 18:04:04.566 DEBUG 10184 [nio-8980-exec-8] [c.j.m.market.dao.MarketGoodDao.findList] - ==>  Preparing: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 18:04:04.566 DEBUG 10184 [nio-8980-exec-8] [c.j.m.market.dao.MarketGoodDao.findList] - ==> Parameters: 1(String)
2020-09-05 18:04:04.581 DEBUG 10184 [nio-8980-exec-8] [c.j.m.market.dao.MarketGoodDao.findList] - <==      Total: 2
2020-09-05 18:04:04.585 DEBUG 10184 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 06:04:04.584  用时: 82毫秒  URI: /js/a/market/marketGood/listData  总内存: 469.5MB  已用内存: 179.229MB
2020-09-05 18:04:04.588 DEBUG 10184 [   log-save-8-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 18:04:04.588 DEBUG 10184 [   log-save-8-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will be managed by Spring
2020-09-05 18:04:04.588 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:04.589 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302185723523604480(String), select(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 18:04:04.585(Timestamp), /js/a/market/marketGood/listData(String), POST(String), status=&goodType=&goodName=&pageNo=&pageSize=&orderBy=(String), (String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 82(Long)
2020-09-05 18:04:04.592 DEBUG 10184 [   log-save-8-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 18:04:20.790 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 06:04:20.789  URI: /js/a/market/marketGood/form  IP: 127.0.0.1
2020-09-05 18:04:20.791 DEBUG 10184 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`id` = #{id}
2020-09-05 18:04:20.791 DEBUG 10184 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will not be managed by Spring
2020-09-05 18:04:20.796 DEBUG 10184 [nio-8980-exec-4] [c.j.m.market.dao.MarketGoodDao.get     ] - ==>  Preparing: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`barcode` AS "barcode", a.`good_type` AS "goodType", a.`good_self_code` AS "goodSelfCode", a.`good_name` AS "goodName", a.`good_short_name` AS "goodShortName", a.`good_unit` AS "goodUnit", a.`good_label` AS "goodLabel", a.`good_level` AS "goodLevel", a.`good_shelf_no` AS "goodShelfNo", a.`good_packaging_specs` AS "goodPackagingSpecs", a.`good_origin` AS "goodOrigin", a.`good_cost_price` AS "goodCostPrice", a.`good_sale_price` AS "goodSalePrice", a.`good_suggest_price` AS "goodSuggestPrice" FROM `market_good` a WHERE a.`id` = ?
2020-09-05 18:04:20.797 DEBUG 10184 [nio-8980-exec-4] [c.j.m.market.dao.MarketGoodDao.get     ] - ==> Parameters: 1302185722961567744(String)
2020-09-05 18:04:20.802 DEBUG 10184 [nio-8980-exec-4] [c.j.m.market.dao.MarketGoodDao.get     ] - <==      Total: 1
2020-09-05 18:04:20.804 INFO  10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketGoodForm <<<<<<<<< /js/a/market/marketGood/form >>>>>>>>> com.jeesite.modules.market.web.MarketGoodController#form(MarketGood, Model)
2020-09-05 18:04:20.917 DEBUG 10184 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 06:04:20.917  用时: 128毫秒  URI: /js/a/market/marketGood/form  总内存: 469.5MB  已用内存: 181.469MB
2020-09-05 18:04:20.920 DEBUG 10184 [   log-save-8-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 18:04:20.920 DEBUG 10184 [   log-save-8-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will be managed by Spring
2020-09-05 18:04:20.921 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:04:20.922 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302185792024977408(String), select(String), 超市管理/商品管理(String), system(String), 超级管理员(String), 2020-09-05 18:04:20.917(Timestamp), /js/a/market/marketGood/form(String), GET(String), id=1302185722961567744(String), 1302185722961567744(String), MarketGood(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 128(Long)
2020-09-05 18:04:20.941 DEBUG 10184 [   log-save-8-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 18:04:21.015 DEBUG 10184 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = #{sqlMap.where#biz_key#EQ1} AND a.`biz_type` = #{sqlMap.where#biz_type#EQ1} AND a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.file_sort, a.id
2020-09-05 18:04:21.015 DEBUG 10184 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will not be managed by Spring
2020-09-05 18:04:21.019 DEBUG 10184 [nio-8980-exec-1] [c.j.m.file.dao.FileUploadDao.findList  ] - ==>  Preparing: SELECT a.`id` AS "id", a.`file_id` AS "fileEntity.fileId", a.`file_name` AS "fileName", a.`file_type` AS "fileType", a.`file_sort` AS "fileSort", a.`biz_key` AS "bizKey", a.`biz_type` AS "bizType", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", b.`file_md5` AS "fileEntity.fileMd5", b.`file_path` AS "fileEntity.filePath", b.`file_content_type` AS "fileEntity.fileContentType", b.`file_extension` AS "fileEntity.fileExtension", b.`file_size` AS "fileEntity.fileSize", b.`file_meta` AS "fileEntity.fileMeta", b.`file_preview` AS "fileEntity.filePreview", u.`user_name` AS "createByName" FROM `js_sys_file_upload` a LEFT JOIN `js_sys_file_entity` b ON b.file_id = a.file_id LEFT JOIN `js_sys_user` u ON u.user_code = a.create_by WHERE a.`biz_key` = ? AND a.`biz_type` = ? AND a.`status` = ? ORDER BY a.file_sort, a.id
2020-09-05 18:04:21.019 DEBUG 10184 [nio-8980-exec-1] [c.j.m.file.dao.FileUploadDao.findList  ] - ==> Parameters: 1302185722961567744(String), marketGood_image(String), 0(String)
2020-09-05 18:04:21.024 DEBUG 10184 [nio-8980-exec-1] [c.j.m.file.dao.FileUploadDao.findList  ] - <==      Total: 1
2020-09-05 18:04:21.045 DEBUG 10184 [nio-8980-exec-7] [c.j.modules.sys.web.UserfilesController] - File: D:\work\jeesite4-market\src\main\webapp\userfiles\fileupload\202009\1302185709451714562.png
2020-09-05 18:05:12.337 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 06:05:12.337  URI: /js/a/market/marketSupplier/form  IP: 127.0.0.1
2020-09-05 18:05:12.338 DEBUG 10184 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`id` = #{id}
2020-09-05 18:05:12.338 DEBUG 10184 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will not be managed by Spring
2020-09-05 18:05:12.344 DEBUG 10184 [nio-8980-exec-3] [c.j.m.market.dao.MarketSupplierDao.get ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`id` = ?
2020-09-05 18:05:12.345 DEBUG 10184 [nio-8980-exec-3] [c.j.m.market.dao.MarketSupplierDao.get ] - ==> Parameters: 1298543900599414784(String)
2020-09-05 18:05:12.761 DEBUG 10184 [nio-8980-exec-3] [c.j.m.market.dao.MarketSupplierDao.get ] - <==      Total: 1
2020-09-05 18:05:12.771 INFO  10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketSupplierForm <<<<<<<<< /js/a/market/marketSupplier/form >>>>>>>>> com.jeesite.modules.market.web.MarketSupplierController#form(MarketSupplier, Model)
2020-09-05 18:05:12.809 DEBUG 10184 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 06:05:12.808  用时: 471毫秒  URI: /js/a/market/marketSupplier/form  总内存: 469.5MB  已用内存: 189.239MB
2020-09-05 18:05:12.812 DEBUG 10184 [   log-save-8-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 18:05:12.812 DEBUG 10184 [   log-save-8-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@7e1a997d] will be managed by Spring
2020-09-05 18:05:12.813 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 18:05:12.814 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302186009671606272(String), select(String), 超市管理/供应商管理(String), system(String), 超级管理员(String), 2020-09-05 18:05:12.808(Timestamp), /js/a/market/marketSupplier/form(String), GET(String), id=1298543900599414784(String), 1298543900599414784(String), MarketSupplier(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 471(Long)
2020-09-05 18:05:12.815 DEBUG 10184 [   log-save-8-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:34:26.355 INFO  4876 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 4876 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 20:34:26.359 DEBUG 4876 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 20:34:26.360 INFO  4876 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 20:34:30.084 INFO  4876 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 20:34:30.086 INFO  4876 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 20:34:35.142 INFO  4876 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 20:34:35.142 INFO  4876 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 20:34:35.142 INFO  4876 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 20:34:36.304 DEBUG 4876 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 20:34:37.450 INFO  4876 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 20:34:39.791 INFO  4876 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 20:34:54.081 DEBUG 4876 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@47224d5d] will be managed by Spring
2020-09-05 20:34:57.631 DEBUG 4876 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 20:34:57.681 DEBUG 4876 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 20:34:57.720 DEBUG 4876 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 20:34:57.733 DEBUG 4876 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 20:34:57.741 DEBUG 4876 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 20:34:57.744 DEBUG 4876 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:34:57.762 DEBUG 4876 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 20:35:03.031 INFO  4876 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 20:35:03.037 INFO  4876 [           main] [com.jeesite.modules.Application        ] - Started Application in 38.035 seconds (JVM running for 40.046)
2020-09-05 20:37:21.449 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 20:37:21.455 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@47224d5d] will be managed by Spring
2020-09-05 20:37:21.471 DEBUG 4876 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 20:37:21.476 DEBUG 4876 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 20:37:21.535 DEBUG 4876 [nio-8980-exec-3] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 20:37:21.963 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 20:37:21.964 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@47224d5d] will be managed by Spring
2020-09-05 20:37:21.979 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 20:37:21.981 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 20:37:22.114 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 20:37:22.172 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 13毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:22.185 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:22.199 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:22.205 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 20:37:22.353 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 20:37:23.770 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:37:23.776 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:23.787 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:37:23.790 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 20:37:23.798 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 20:37:23.895 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:23.897 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:23.905 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:23.908 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 20:37:23.915 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 20:37:24.494 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:24.496 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:24.503 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:24.505 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 20:37:24.515 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 20:37:24.558 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:37:24.556  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 20:37:24.658 INFO  4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 20:37:24.865 DEBUG 4876 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:37:24.866 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:24.875 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:37:24.878 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 20:37:24.883 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 20:37:25.022 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:37:24.961  用时: 405毫秒  URI: /js/a/market/marketPurchase/list  总内存: 501.5MB  已用内存: 175.712MB
2020-09-05 20:37:25.026 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:25.026 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:25.027 DEBUG 4876 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:25.029 DEBUG 4876 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 20:37:25.073 DEBUG 4876 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 20:37:25.103 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:37:25.106 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:25.108 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:37:25.131 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302224312929923072(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 20:37:25.017(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 405(Long)
2020-09-05 20:37:25.135 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:37:26.104 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:37:26.104  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 20:37:26.185 DEBUG 4876 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 20:37:26.188 DEBUG 4876 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:26.329 DEBUG 4876 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` != ?
2020-09-05 20:37:26.331 DEBUG 4876 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 1(String)
2020-09-05 20:37:26.361 DEBUG 4876 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 20:37:26.362 DEBUG 4876 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 1(String)
2020-09-05 20:37:26.365 DEBUG 4876 [nio-8980-exec-1] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 20:37:26.427 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:37:26.416  用时: 312毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 501.5MB  已用内存: 196.597MB
2020-09-05 20:37:26.435 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:37:26.437 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:26.440 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:37:26.444 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302224318839697408(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 20:37:26.426(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&supplierId=&supplierName=&purchaseLabel=&status=&remarks=&totalMoney=&payState=&payDate=&payableMoney=&paidMoney=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 312(Long)
2020-09-05 20:37:26.447 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:37:28.719 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:28.720 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:28.727 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:37:28.729 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298482562558640128,%(String)
2020-09-05 20:37:28.757 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 67
2020-09-05 20:37:35.507 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:37:35.506  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 20:37:35.532 INFO  4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model)
2020-09-05 20:37:35.753 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:37:35.743  用时: 237毫秒  URI: /js/a/market/marketPurchase/form  总内存: 501.5MB  已用内存: 208.093MB
2020-09-05 20:37:35.772 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:37:35.775 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:37:35.778 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:37:35.786 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302224357947387904(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 20:37:35.75(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 237(Long)
2020-09-05 20:37:35.796 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:46:46.237 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:46.237  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2020-09-05 20:46:46.381 INFO  4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2020-09-05 20:46:46.433 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:46.429  用时: 192毫秒  URI: /js/a/gen/genTable/list  总内存: 501.5MB  已用内存: 221.931MB
2020-09-05 20:46:46.460 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:46:46.462 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:46.465 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:46:46.469 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226667675103232(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 20:46:46.432(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 192(Long)
2020-09-05 20:46:46.492 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:46:46.603 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:46.601  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 20:46:46.677 DEBUG 4876 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2020-09-05 20:46:46.678 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:46.714 DEBUG 4876 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2020-09-05 20:46:46.715 DEBUG 4876 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 20:46:46.720 DEBUG 4876 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2020-09-05 20:46:46.721 DEBUG 4876 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 20:46:46.730 DEBUG 4876 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2020-09-05 20:46:46.792 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:46.788  用时: 187毫秒  URI: /js/a/gen/genTable/listData  总内存: 501.5MB  已用内存: 233.978MB
2020-09-05 20:46:46.803 DEBUG 4876 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:46:46.806 DEBUG 4876 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:46.807 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:46:46.811 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226669180858368(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 20:46:46.791(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 187(Long)
2020-09-05 20:46:46.815 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:46:49.660 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:46:49.660  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2020-09-05 20:46:49.667 DEBUG 4876 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 20:46:49.668 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:49.677 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 20:46:49.678 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase(String)
2020-09-05 20:46:49.682 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 20:46:49.687 DEBUG 4876 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 20:46:49.695 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 20:46:49.697 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase(String)
2020-09-05 20:46:49.716 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 17
2020-09-05 20:46:49.776 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:49.794 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2020-09-05 20:46:49.796 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: market_purchase(String), market_purchase(String)
2020-09-05 20:46:49.801 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2020-09-05 20:46:49.812 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2020-09-05 20:46:49.814 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: market_purchase(String)
2020-09-05 20:46:49.820 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 17
2020-09-05 20:46:49.831 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2020-09-05 20:46:49.834 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: market_purchase(String)
2020-09-05 20:46:49.837 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2020-09-05 20:46:50.175 DEBUG 4876 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2020-09-05 20:46:50.178 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:46:50.191 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2020-09-05 20:46:50.193 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2020-09-05 20:46:50.211 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 34
2020-09-05 20:46:50.217 DEBUG 4876 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 20:46:50.220 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:46:50.233 DEBUG 4876 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 20:46:50.234 DEBUG 4876 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2020-09-05 20:46:50.244 DEBUG 4876 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 7
2020-09-05 20:46:50.251 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:50.267 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2020-09-05 20:46:50.268 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2020-09-05 20:46:50.273 DEBUG 4876 [nio-8980-exec-4] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2020-09-05 20:46:50.282 INFO  4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2020-09-05 20:46:50.449 DEBUG 4876 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:46:50.451 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:50.467 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:46:50.471 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2020-09-05 20:46:50.479 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 20:46:50.660 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:46:50.652  用时: 992毫秒  URI: /js/a/gen/genTable/form  总内存: 501.5MB  已用内存: 268.249MB
2020-09-05 20:46:50.681 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:46:50.683 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:46:50.685 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:46:50.687 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226685404426240(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 20:46:50.659(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=market_purchase&op=step2(String), market_purchase(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 992(Long)
2020-09-05 20:46:50.692 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:47:37.655 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:37.655  URI: /js/a/sys/module/list  IP: 127.0.0.1
2020-09-05 20:47:37.680 INFO  4876 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/moduleList <<<<<<<<< /js/a/sys/module/list >>>>>>>>> com.jeesite.modules.sys.web.ModuleController#list(Module, Model)
2020-09-05 20:47:37.726 DEBUG 4876 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:37.727 DEBUG 4876 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:37.734 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:37.736 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2020-09-05 20:47:38.172 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2020-09-05 20:47:38.188 DEBUG 4876 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:38.185  用时: 530毫秒  URI: /js/a/sys/module/list  总内存: 501.5MB  已用内存: 276.800MB
2020-09-05 20:47:38.203 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:47:38.205 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:38.207 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:47:38.212 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226884751306752(String), select(String), 系统管理/系统设置/模块管理(String), system(String), 超级管理员(String), 2020-09-05 20:47:38.187(Timestamp), /js/a/sys/module/list(String), GET(String), (String), (String), Module(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 530(Long)
2020-09-05 20:47:38.229 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:47:38.447 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:38.446  URI: /js/a/sys/module/listData  IP: 127.0.0.1
2020-09-05 20:47:38.503 DEBUG 4876 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 20:47:38.505 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:38.548 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT count(0) FROM `js_sys_module` a WHERE a.`status` != ?
2020-09-05 20:47:38.549 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 1(String)
2020-09-05 20:47:38.557 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 20:47:38.559 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 1(String)
2020-09-05 20:47:38.573 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 20:47:38.636 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:38.631  用时: 185毫秒  URI: /js/a/sys/module/listData  总内存: 501.5MB  已用内存: 282.235MB
2020-09-05 20:47:38.650 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:47:38.654 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:38.657 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:47:38.674 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226886630354944(String), select(String), 系统管理/系统设置/模块管理(String), system(String), 超级管理员(String), 2020-09-05 20:47:38.635(Timestamp), /js/a/sys/module/listData(String), POST(String), moduleName=&mainClassName=&status=&pageNo=&pageSize=&orderBy=(String), (String), Module(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 185(Long)
2020-09-05 20:47:38.680 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:47:59.530 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:59.530  URI: /js/a/sys/menu/list  IP: 127.0.0.1
2020-09-05 20:47:59.557 INFO  4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/menuList <<<<<<<<< /js/a/sys/menu/list >>>>>>>>> com.jeesite.modules.sys.web.MenuController#list(Menu, Model)
2020-09-05 20:47:59.600 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.601 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.607 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.608 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2020-09-05 20:47:59.614 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 20:47:59.622 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.623 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.630 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.632 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_show_hide(String), 1(String), 0(String)
2020-09-05 20:47:59.638 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 20:47:59.647 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.648 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.654 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:47:59.655 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_weight(String), 1(String), 0(String)
2020-09-05 20:47:59.660 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2020-09-05 20:47:59.668 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:59.666  用时: 136毫秒  URI: /js/a/sys/menu/list  总内存: 501.5MB  已用内存: 291.100MB
2020-09-05 20:47:59.676 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:47:59.677 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.677 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:47:59.680 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226974844956672(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 20:47:59.667(Timestamp), /js/a/sys/menu/list(String), GET(String), (String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 136(Long)
2020-09-05 20:47:59.683 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:47:59.820 DEBUG 4876 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:47:59.820  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2020-09-05 20:47:59.878 DEBUG 4876 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:47:59.879 DEBUG 4876 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.889 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:47:59.891 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String)
2020-09-05 20:47:59.898 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 20:47:59.933 DEBUG 4876 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:47:59.928  用时: 108毫秒  URI: /js/a/sys/menu/listData  总内存: 501.5MB  已用内存: 299.057MB
2020-09-05 20:47:59.942 DEBUG 4876 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:47:59.942 DEBUG 4876 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:47:59.944 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:47:59.945 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226975956447232(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 20:47:59.932(Timestamp), /js/a/sys/menu/listData(String), POST(String), moduleCodes=&sysCode=default&menuNameOrig=&pageNo=&pageSize=&orderBy=(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 108(Long)
2020-09-05 20:47:59.950 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:03.168 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:03.167  URI: /js/a/sys/menu/listData  IP: 127.0.0.1
2020-09-05 20:48:03.186 DEBUG 4876 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:48:03.187 DEBUG 4876 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:03.197 DEBUG 4876 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 20:48:03.198 DEBUG 4876 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 1298482592505970688(String), default(String)
2020-09-05 20:48:03.203 DEBUG 4876 [nio-8980-exec-8] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 1
2020-09-05 20:48:03.213 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:03.211  用时: 44毫秒  URI: /js/a/sys/menu/listData  总内存: 501.5MB  已用内存: 301.466MB
2020-09-05 20:48:03.220 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:03.221 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:03.221 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:03.223 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302226989717958656(String), select(String), 系统管理/系统设置/菜单管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:03.213(Timestamp), /js/a/sys/menu/listData(String), POST(String), id=&nodeid=1298482592505970688&parentid=0&n_level=0&_search=false&nd=1599310083160&pageSize=&pageNo=&orderBy=&sord=asc&moduleCodes=&sysCode=default&menuNameOrig=&parentCode=1298482592505970688(String), (String), Menu(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 44(Long)
2020-09-05 20:48:03.227 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:07.716 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:07.716  URI: /js/a/sys/role/list  IP: 127.0.0.1
2020-09-05 20:48:07.760 INFO  4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/roleList <<<<<<<<< /js/a/sys/role/list >>>>>>>>> com.jeesite.modules.sys.web.RoleController#list(Role, Model)
2020-09-05 20:48:07.814 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.814 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:07.823 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.825 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_type(String), 1(String), 0(String)
2020-09-05 20:48:07.834 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 20:48:07.844 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.845 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:07.854 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.858 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_type(String), 1(String), 0(String)
2020-09-05 20:48:07.862 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 4
2020-09-05 20:48:07.873 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.873 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:07.880 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.881 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_data_scope(String), 1(String), 0(String)
2020-09-05 20:48:07.886 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 6
2020-09-05 20:48:07.895 DEBUG 4876 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.897 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:07.905 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:07.907 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_role_biz_scope(String), 1(String), 0(String)
2020-09-05 20:48:07.913 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 20:48:07.924 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:07.922  用时: 206毫秒  URI: /js/a/sys/role/list  总内存: 501.5MB  已用内存: 316.514MB
2020-09-05 20:48:07.938 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:07.939 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:07.941 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:07.944 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227009473130496(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:07.923(Timestamp), /js/a/sys/role/list(String), GET(String), (String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 206(Long)
2020-09-05 20:48:07.947 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:08.095 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:08.095  URI: /js/a/sys/role/listData  IP: 127.0.0.1
2020-09-05 20:48:08.139 DEBUG 4876 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.role_sort ASC
2020-09-05 20:48:08.142 DEBUG 4876 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:08.165 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_role` a WHERE a.`status` != ?
2020-09-05 20:48:08.165 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2020-09-05 20:48:08.171 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.RoleDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`status` != ? ORDER BY a.role_sort ASC LIMIT 20
2020-09-05 20:48:08.175 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.RoleDao.findList   ] - ==> Parameters: 1(String)
2020-09-05 20:48:08.180 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.RoleDao.findList   ] - <==      Total: 4
2020-09-05 20:48:08.204 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:08.202  用时: 107毫秒  URI: /js/a/sys/role/listData  总内存: 501.5MB  已用内存: 321.954MB
2020-09-05 20:48:08.216 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:08.217 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:08.217 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:08.220 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227010647535616(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:08.203(Timestamp), /js/a/sys/role/listData(String), POST(String), ctrlPermi=2&roleName_like=&roleCode_like=&userType=&isSys=&status=&pageNo=&pageSize=&orderBy=(String), (String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 107(Long)
2020-09-05 20:48:08.226 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:14.219 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:14.219  URI: /js/a/sys/empUser/index  IP: 127.0.0.1
2020-09-05 20:48:14.254 INFO  4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/empUserIndex <<<<<<<<< /js/a/sys/empUser/index >>>>>>>>> com.jeesite.modules.sys.web.user.EmpUserController#index(EmpUser, Model)
2020-09-05 20:48:14.381 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:14.378  用时: 159毫秒  URI: /js/a/sys/empUser/index  总内存: 501.5MB  已用内存: 330.424MB
2020-09-05 20:48:14.400 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:14.401 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:14.404 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:14.408 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227036555751424(String), access(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:14.38(Timestamp), /js/a/sys/empUser/index(String), GET(String), (String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 159(Long)
2020-09-05 20:48:14.421 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:14.535 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:14.535  URI: /js/a/sys/empUser/list  IP: 127.0.0.1
2020-09-05 20:48:14.582 DEBUG 4876 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:48:14.596 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`post_code` AS "postCode", a.`post_name` AS "postName", a.`post_type` AS "postType", a.`post_sort` AS "postSort" FROM `js_sys_post` a WHERE a.`status` = ? ORDER BY a.post_sort ASC
2020-09-05 20:48:14.598 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 20:48:14.605 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.PostDao.findList   ] - <==      Total: 5
2020-09-05 20:48:14.607 INFO  4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/empUserList <<<<<<<<< /js/a/sys/empUser/list >>>>>>>>> com.jeesite.modules.sys.web.user.EmpUserController#list(EmpUser, Model)
2020-09-05 20:48:14.719 DEBUG 4876 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:14.721 DEBUG 4876 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:14.744 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 20:48:14.750 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_user_status(String), 1(String), 0(String)
2020-09-05 20:48:14.763 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 3
2020-09-05 20:48:14.799 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:14.798  用时: 263毫秒  URI: /js/a/sys/empUser/list  总内存: 501.5MB  已用内存: 343.062MB
2020-09-05 20:48:14.804 DEBUG 4876 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:14.805 DEBUG 4876 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:14.805 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:14.807 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227038308970496(String), select(String), 系统管理/组织管理/用户管理/查看(String), system(String), 超级管理员(String), 2020-09-05 20:48:14.798(Timestamp), /js/a/sys/empUser/list(String), GET(String), (String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 263(Long)
2020-09-05 20:48:14.809 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:14.886 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:14.893 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:48:14.894 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:48:14.927 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:48:15.416 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:15.416  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:15.539 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:15.570 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ?
2020-09-05 20:48:15.571 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String)
2020-09-05 20:48:15.597 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:15.604 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String)
2020-09-05 20:48:15.612 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:15.634 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:15.629  用时: 213毫秒  URI: /js/a/sys/empUser/listData  总内存: 501.5MB  已用内存: 369.213MB
2020-09-05 20:48:15.651 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 4毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:15.652 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:15.654 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:15.659 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227041811214336(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:15.634(Timestamp), /js/a/sys/empUser/listData(String), POST(String), ctrlPermi=2&loginCode=&userName=&refName=&mobile=&status=&employee.office.officeName=&employee.office.officeCode=&employee.company.companyName=&employee.company.companyCode=&email=&employee.postCode=&phone=&pageNo=&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 213(Long)
2020-09-05 20:48:15.667 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:29.715 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:29.715  URI: /js/a/sys/role/formAuthUser  IP: 127.0.0.1
2020-09-05 20:48:29.717 DEBUG 4876 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`role_code` = #{roleCode}
2020-09-05 20:48:29.718 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:48:29.727 DEBUG 4876 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.RoleDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`role_code` AS "roleCode", a.`role_name` AS "roleName", a.`role_type` AS "roleType", a.`role_sort` AS "roleSort", a.`is_sys` AS "isSys", a.`user_type` AS "userType", a.`data_scope` AS "dataScope", a.`biz_scope` AS "bizScope", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_role` a WHERE a.`role_code` = ?
2020-09-05 20:48:29.729 DEBUG 4876 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.RoleDao.get] - ==> Parameters: dept(String)
2020-09-05 20:48:29.732 DEBUG 4876 [nio-8980-exec-9] [com.jeesite.modules.sys.dao.RoleDao.get] - <==      Total: 1
2020-09-05 20:48:29.743 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:29.753 DEBUG 4876 [nio-8980-exec-9] [c.j.m.s.dao.UserDao.findListByRoleCode ] - ==>  Preparing: SELECT a.user_code AS "userCode", a.user_name AS "userName" FROM js_sys_user a JOIN js_sys_user_role ur ON ur.user_code = a.user_code WHERE a.status = ? AND ur.role_code = ?
2020-09-05 20:48:29.754 DEBUG 4876 [nio-8980-exec-9] [c.j.m.s.dao.UserDao.findListByRoleCode ] - ==> Parameters: 0(String), dept(String)
2020-09-05 20:48:30.144 DEBUG 4876 [nio-8980-exec-9] [c.j.m.s.dao.UserDao.findListByRoleCode ] - <==      Total: 0
2020-09-05 20:48:30.153 INFO  4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/roleFormAuthUser <<<<<<<<< /js/a/sys/role/formAuthUser >>>>>>>>> com.jeesite.modules.sys.web.RoleController#formAuthUser(Role, Model, HttpServletRequest)
2020-09-05 20:48:30.292 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:30.289  用时: 574毫秒  URI: /js/a/sys/role/formAuthUser  总内存: 501.5MB  已用内存: 378.107MB
2020-09-05 20:48:30.304 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:30.306 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:30.307 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:30.311 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227103291322368(String), select(String), 系统管理/权限管理/角色管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:30.291(Timestamp), /js/a/sys/role/formAuthUser(String), GET(String), roleCode=dept(String), dept(String), Role(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 574(Long)
2020-09-05 20:48:30.322 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:30.658 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:30.658  URI: /js/a/sys/user/listData  IP: 127.0.0.1
2020-09-05 20:48:30.728 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:30.757 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN js_sys_user_role ur ON ur.user_code = a.user_code WHERE a.`status` = ? AND a.`user_type` = ? AND ur.role_code = ?
2020-09-05 20:48:30.758 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 0(String), employee(String), dept(String)
2020-09-05 20:48:30.764 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a JOIN js_sys_user_role ur ON ur.user_code = a.user_code WHERE a.`status` = ? AND a.`user_type` = ? AND ur.role_code = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:30.769 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - ==> Parameters: 0(String), employee(String), dept(String)
2020-09-05 20:48:30.779 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.UserDao.findList   ] - <==      Total: 0
2020-09-05 20:48:30.798 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:30.795  用时: 137毫秒  URI: /js/a/sys/user/listData  总内存: 501.5MB  已用内存: 385.398MB
2020-09-05 20:48:30.810 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:30.811 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:30.812 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:30.815 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227105413640192(String), select(String), 未知操作(String), system(String), 超级管理员(String), 2020-09-05 20:48:30.797(Timestamp), /js/a/sys/user/listData(String), POST(String), roleCode=dept&userType=employee&loginCode=&userName=&email=&mobile=&phone=&pageNo=&pageSize=&orderBy=(String), User(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 137(Long)
2020-09-05 20:48:30.821 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:35.731 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:35.731  URI: /js/a/sys/empUser/empUserSelect  IP: 127.0.0.1
2020-09-05 20:48:35.737 INFO  4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/sys/user/empUserSelect <<<<<<<<< /js/a/sys/empUser/empUserSelect >>>>>>>>> com.jeesite.modules.sys.web.user.EmpUserController#empUserSelect(EmpUser, String, Model)
2020-09-05 20:48:35.788 DEBUG 4876 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:35.786  用时: 55毫秒  URI: /js/a/sys/empUser/empUserSelect  总内存: 501.5MB  已用内存: 390.834MB
2020-09-05 20:48:35.800 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:35.802 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:35.803 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:35.805 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227126343217152(String), access(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:35.787(Timestamp), /js/a/sys/empUser/empUserSelect(String), POST(String), checkbox=true&selectData=%7B%7D(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 55(Long)
2020-09-05 20:48:35.809 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:36.009 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:36.020 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:48:36.021 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:48:36.032 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:48:36.121 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:36.121  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:36.151 DEBUG 4876 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:36.177 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ?
2020-09-05 20:48:36.178 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2020-09-05 20:48:36.182 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:36.184 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2020-09-05 20:48:36.189 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:36.199 DEBUG 4876 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:36.197  用时: 76毫秒  URI: /js/a/sys/empUser/listData  总内存: 501.5MB  已用内存: 395.764MB
2020-09-05 20:48:36.206 DEBUG 4876 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:36.206 DEBUG 4876 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:36.207 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:36.209 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227128071270400(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:36.199(Timestamp), /js/a/sys/empUser/listData(String), POST(String), status=0&isAll=&employee.postCode=&roleCode=&userType=&loginCode=&userName=&refName=&employee.office.officeName=&employee.office.officeCode=&employee.company.companyName=&employee.company.companyCode=&mobile=&pageNo=&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 76(Long)
2020-09-05 20:48:36.213 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:41.649 DEBUG 4876 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:41.648  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:41.685 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:41.708 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ?
2020-09-05 20:48:41.709 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2020-09-05 20:48:41.714 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:41.718 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String)
2020-09-05 20:48:41.724 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:41.735 DEBUG 4876 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:41.734  用时: 86毫秒  URI: /js/a/sys/empUser/listData  总内存: 501.5MB  已用内存: 400.807MB
2020-09-05 20:48:41.741 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:41.742 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:41.742 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:41.743 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227151290937344(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:41.735(Timestamp), /js/a/sys/empUser/listData(String), POST(String), status=0&isAll=&employee.postCode=&roleCode=&userType=&loginCode=&userName=&refName=&employee.office.officeName=&employee.office.officeCode=&employee.company.companyName=&employee.company.companyCode=&mobile=&pageNo=1&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 86(Long)
2020-09-05 20:48:41.747 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:43.345 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:43.345  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:43.372 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:43.395 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?)
2020-09-05 20:48:43.395 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SD(String), %,SD,%(String)
2020-09-05 20:48:43.398 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?) ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:43.399 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SD(String), %,SD,%(String)
2020-09-05 20:48:43.406 DEBUG 4876 [nio-8980-exec-9] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:43.418 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:43.416  用时: 71毫秒  URI: /js/a/sys/empUser/listData  总内存: 501.5MB  已用内存: 405.234MB
2020-09-05 20:48:43.429 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:43.429 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:43.431 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:43.431 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227158345756672(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:43.417(Timestamp), /js/a/sys/empUser/listData(String), POST(String), status=&isAll=&employee.postCode=&roleCode=&userType=&loginCode=&userName=&refName=&employee.office.officeName=山东公司&employee.office.officeCode=SD&employee.company.companyName=&employee.company.companyCode=&mobile=&pageNo=1&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 71(Long)
2020-09-05 20:48:43.434 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:48.572 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:48.572  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:48.595 DEBUG 4876 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:48.610 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?)
2020-09-05 20:48:48.611 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SDJN(String), %,SDJN,%(String)
2020-09-05 20:48:48.615 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?) ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:48.617 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SDJN(String), %,SDJN,%(String)
2020-09-05 20:48:48.620 DEBUG 4876 [nio-8980-exec-4] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:48.632 DEBUG 4876 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:48.629  用时: 57毫秒  URI: /js/a/sys/empUser/listData  总内存: 501.5MB  已用内存: 409.316MB
2020-09-05 20:48:48.637 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:48.638 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:48.639 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:48.641 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227180214857728(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:48.631(Timestamp), /js/a/sys/empUser/listData(String), POST(String), status=&isAll=&employee.postCode=&roleCode=&userType=&loginCode=&userName=&refName=&employee.office.officeName=济南公司&employee.office.officeCode=SDJN&employee.company.companyName=&employee.company.companyCode=&mobile=&pageNo=1&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 57(Long)
2020-09-05 20:48:48.643 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:48:49.796 DEBUG 4876 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:48:49.796  URI: /js/a/sys/empUser/listData  IP: 127.0.0.1
2020-09-05 20:48:49.816 DEBUG 4876 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:49.875 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT count(0) FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code = a.ref_code AND a.user_type = ? LEFT JOIN `js_sys_office` o ON o.office_code = e.office_code LEFT JOIN `js_sys_company` c ON c.company_code = e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?)
2020-09-05 20:48:49.876 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SDJN(String), %,SDJN,%(String)
2020-09-05 20:48:49.879 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` != ? AND (o.`office_code` = ? OR o.parent_codes LIKE ?) ORDER BY a.user_weight DESC, a.update_date DESC LIMIT 20
2020-09-05 20:48:49.881 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 1(String), SDJN(String), %,SDJN,%(String)
2020-09-05 20:48:49.887 DEBUG 4876 [nio-8980-exec-5] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:48:49.896 DEBUG 4876 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:48:49.894  用时: 98毫秒  URI: /js/a/sys/empUser/listData  总内存: 492MB  已用内存: 70.590MB
2020-09-05 20:48:49.902 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:48:49.902 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:48:49.903 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:48:49.904 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227185516457984(String), select(String), 系统管理/组织管理/用户管理(String), system(String), 超级管理员(String), 2020-09-05 20:48:49.895(Timestamp), /js/a/sys/empUser/listData(String), POST(String), status=&isAll=&employee.postCode=&roleCode=&userType=&loginCode=&userName=&refName=&employee.office.officeName=济南公司&employee.office.officeCode=SDJN&employee.company.companyName=&employee.company.companyCode=&mobile=&pageNo=1&pageSize=&orderBy=(String), (String), EmpUser(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 98(Long)
2020-09-05 20:48:49.906 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:04.285 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:04.285  URI: /js/a/test/testData/list  IP: 127.0.0.1
2020-09-05 20:49:04.318 INFO  4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2020-09-05 20:49:04.517 DEBUG 4876 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:04.513  用时: 228毫秒  URI: /js/a/test/testData/list  总内存: 492MB  已用内存: 86.242MB
2020-09-05 20:49:04.533 DEBUG 4876 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:49:04.535 DEBUG 4876 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:04.538 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:04.540 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227246841376768(String), access(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 20:49:04.516(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 228(Long)
2020-09-05 20:49:04.545 DEBUG 4876 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:04.883 DEBUG 4876 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:04.882  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 20:49:04.953 DEBUG 4876 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 20:49:04.957 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:04.985 DEBUG 4876 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 20:49:04.986 DEBUG 4876 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 20:49:05.006 DEBUG 4876 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 20:49:05.007 DEBUG 4876 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 20:49:05.013 DEBUG 4876 [nio-8980-exec-6] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 20:49:05.073 DEBUG 4876 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:05.070  用时: 188毫秒  URI: /js/a/test/testData/listData  总内存: 492MB  已用内存: 93.059MB
2020-09-05 20:49:05.088 DEBUG 4876 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:49:05.089 DEBUG 4876 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:05.090 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:05.092 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227249173409792(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 20:49:05.073(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 188(Long)
2020-09-05 20:49:05.095 DEBUG 4876 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:06.187 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:06.187  URI: /js/a/test/testData/transTest  IP: 127.0.0.1
2020-09-05 20:49:06.194 DEBUG 4876 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `test_data` (`id`, `test_input`, `test_textarea`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (#{id}, #{testInput}, #{testTextarea}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate})
2020-09-05 20:49:06.194 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:06.195 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.insert] - ==>  Preparing: INSERT INTO `test_data` (`id`, `test_input`, `test_textarea`, `status`, `create_by`, `create_date`, `update_by`, `update_date`) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:06.196 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.insert] - ==> Parameters: 1302227253871030272(String), transTest(String), OQ2zN(String), 0(String), system(String), 2020-09-05 20:49:06.193(Timestamp), system(String), 2020-09-05 20:49:06.193(Timestamp)
2020-09-05 20:49:06.199 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.insert] - <==    Updates: 1
2020-09-05 20:49:06.202 DEBUG 4876 [io-8980-exec-10] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `test_data_child` (`id`, `test_data_id`, `test_input`) VALUES (#{id}, #{testData.id}, #{testInput})
2020-09-05 20:49:06.204 DEBUG 4876 [io-8980-exec-10] [c.j.m.test.dao.TestDataChildDao.insert ] - ==>  Preparing: INSERT INTO `test_data_child` (`id`, `test_data_id`, `test_input`) VALUES (?, ?, ?)
2020-09-05 20:49:06.205 DEBUG 4876 [io-8980-exec-10] [c.j.m.test.dao.TestDataChildDao.insert ] - ==> Parameters: 1302227253908779008(String), 1302227253871030272(String), transTest0transTest1transTest2transTest3transTest4transTest5transTest6transTest7transTest8transTest9transTest10transTest11transTest12transTest13transTest14transTest15transTest16transTest17transTest18transTest19transTest20transTest21transTest22transTest23transTest24transTest25transTest26transTest27transTest28transTest29transTest30transTest31transTest32transTest33transTest34transTest35transTest36transTest37transTest38transTest39transTest40transTest41transTest42transTest43transTest44transTest45transTest46transTest47transTest48transTest49transTest50transTest51transTest52transTest53transTest54transTest55transTest56transTest57transTest58transTest59transTest60transTest61transTest62transTest63transTest64transTest65transTest66transTest67transTest68transTest69transTest70transTest71transTest72transTest73transTest74transTest75transTest76transTest77transTest78transTest79transTest80transTest81transTest82transTest83transTest84transTest85transTest86transTest87transTest88transTest89transTest90transTest91transTest92transTest93transTest94transTest95transTest96transTest97transTest98transTest99transTest100transTest101transTest102transTest103transTest104transTest105transTest106transTest107transTest108transTest109transTest110transTest111transTest112transTest113transTest114transTest115transTest116transTest117transTest118transTest119transTest120transTest121transTest122transTest123transTest124transTest125transTest126transTest127transTest128transTest129transTest130transTest131transTest132transTest133transTest134transTest135transTest136transTest137transTest138transTest139transTest140transTest141transTest142transTest143transTest144transTest145transTest146transTest147transTest148transTest149transTest150transTest151transTest152transTest153transTest154transTest155transTest156transTest157transTest158transTest159transTest160transTest161transTest162transTest163transTest164transTest165transTest166transTest167transTest168transTest169transTest170transTest171transTest172transTest173transTest174transTest175transTest176transTest177transTest178transTest179transTest180transTest181transTest182transTest183transTest184transTest185transTest186transTest187transTest188transTest189transTest190transTest191transTest192transTest193transTest194transTest195transTest196transTest197transTest198transTest199transTest200transTest201transTest202transTest203transTest204transTest205transTest206transTest207transTest208transTest209transTest210transTest211transTest212transTest213transTest214transTest215transTest216transTest217transTest218transTest219transTest220transTest221transTest222transTest223transTest224transTest225transTest226transTest227transTest228transTest229transTest230transTest231transTest232transTest233transTest234transTest235transTest236transTest237transTest238transTest239transTest240transTest241transTest242transTest243transTest244transTest245transTest246transTest247transTest248transTest249transTest250transTest251transTest252transTest253transTest254transTest255transTest256transTest257transTest258transTest259transTest260transTest261transTest262transTest263transTest264transTest265transTest266transTest267transTest268transTest269transTest270transTest271transTest272transTest273transTest274transTest275transTest276transTest277transTest278transTest279transTest280transTest281transTest282transTest283transTest284transTest285transTest286transTest287transTest288transTest289transTest290transTest291transTest292transTest293transTest294transTest295transTest296transTest297transTest298transTest299transTest300transTest301transTest302transTest303transTest304transTest305transTest306transTest307transTest308transTest309transTest310transTest311transTest312transTest313transTest314transTest315transTest316transTest317transTest318transTest319transTest320transTest321transTest322transTest323transTest324transTest325transTest326transTest327transTest328transTest329transTest330transTest331transTest332transTest333transTest334transTest335transTest336transTest337transTest338transTest339transTest340transTest341transTest342transTest343transTest344transTest345transTest346transTest347transTest348transTest349transTest350transTest351transTest352transTest353transTest354transTest355transTest356transTest357transTest358transTest359transTest360transTest361transTest362transTest363transTest364transTest365transTest366transTest367transTest368transTest369transTest370transTest371transTest372transTest373transTest374transTest375transTest376transTest377transTest378transTest379transTest380transTest381transTest382transTest383transTest384transTest385transTest386transTest387transTest388transTest389transTest390transTest391transTest392transTest393transTest394transTest395transTest396transTest397transTest398transTest399transTest400transTest401transTest402transTest403transTest404transTest405transTest406transTest407transTest408transTest409transTest410transTest411transTest412transTest413transTest414transTest415transTest416transTest417transTest418transTest419transTest420transTest421transTest422transTest423transTest424transTest425transTest426transTest427transTest428transTest429transTest430transTest431transTest432transTest433transTest434transTest435transTest436transTest437transTest438transTest439transTest440transTest441transTest442transTest443transTest444transTest445transTest446transTest447transTest448transTest449transTest450transTest451transTest452transTest453transTest454transTest455transTest456transTest457transTest458transTest459transTest460transTest461transTest462transTest463transTest464transTest465transTest466transTest467transTest468transTest469transTest470transTest471transTest472transTest473transTest474transTest475transTest476transTest477transTest478transTest479transTest480transTest481transTest482transTest483transTest484transTest485transTest486transTest487transTest488transTest489transTest490transTest491transTest492transTest493transTest494transTest495transTest496transTest497transTest498transTest499(String)
2020-09-05 20:49:06.545 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.web.TestDataController] - 事务测试信息，报错回滚：
### Error updating database.  Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'test_input' at row 1
### The error may exist in com/jeesite/modules/test/dao/TestDataChildDao.java (best guess)
### The error may involve com.jeesite.modules.test.dao.TestDataChildDao.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO `test_data_child` (`id`, `test_data_id`, `test_input`) VALUES (?, ?, ?)
### Cause: com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'test_input' at row 1
; Data truncation: Data too long for column 'test_input' at row 1; nested exception is com.mysql.cj.jdbc.exceptions.MysqlDataTruncation: Data truncation: Data too long for column 'test_input' at row 1
2020-09-05 20:49:06.550 DEBUG 4876 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`id` = #{id}
2020-09-05 20:49:06.551 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:06.570 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.get   ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`id` = ?
2020-09-05 20:49:06.571 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.get   ] - ==> Parameters: 1302227253871030272(String)
2020-09-05 20:49:06.575 DEBUG 4876 [io-8980-exec-10] [c.j.modules.test.dao.TestDataDao.get   ] - <==      Total: 0
2020-09-05 20:49:06.589 DEBUG 4876 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:06.586  用时: 399毫秒  URI: /js/a/test/testData/transTest  总内存: 492MB  已用内存: 100.720MB
2020-09-05 20:49:06.598 DEBUG 4876 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:49:06.599 DEBUG 4876 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:06.600 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:06.602 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227255531974656(String), update(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 20:49:06.588(Timestamp), /js/a/test/testData/transTest(String), POST(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 399(Long)
2020-09-05 20:49:06.607 DEBUG 4876 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:06.633 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:06.633  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 20:49:06.660 DEBUG 4876 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 20:49:06.661 DEBUG 4876 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:06.677 DEBUG 4876 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 20:49:06.678 DEBUG 4876 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 20:49:06.682 DEBUG 4876 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 20:49:06.683 DEBUG 4876 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 20:49:06.687 DEBUG 4876 [nio-8980-exec-9] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 20:49:06.698 DEBUG 4876 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:06.696  用时: 63毫秒  URI: /js/a/test/testData/listData  总内存: 492MB  已用内存: 103.197MB
2020-09-05 20:49:06.705 DEBUG 4876 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:49:06.705 DEBUG 4876 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:06.706 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:06.707 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227255993348096(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 20:49:06.698(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 63(Long)
2020-09-05 20:49:06.709 DEBUG 4876 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:07.171 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 08:49:07.171  URI: /js/a/test/testData/form  IP: 127.0.0.1
2020-09-05 20:49:07.176 INFO  4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataForm <<<<<<<<< /js/a/test/testData/form >>>>>>>>> com.jeesite.modules.test.web.TestDataController#form(TestData, Model)
2020-09-05 20:49:07.310 DEBUG 4876 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 08:49:07.309  用时: 138毫秒  URI: /js/a/test/testData/form  总内存: 492MB  已用内存: 116.133MB
2020-09-05 20:49:07.319 DEBUG 4876 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 20:49:07.319 DEBUG 4876 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:07.320 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 20:49:07.321 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302227258556067840(String), access(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 20:49:07.31(Timestamp), /js/a/test/testData/form(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 138(Long)
2020-09-05 20:49:07.324 DEBUG 4876 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 20:49:10.872 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:10.882 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:49:10.883 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:49:10.888 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:49:10.911 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:10.920 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:10.921 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN(String)
2020-09-05 20:49:10.930 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:10.946 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:10.954 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:10.955 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN01(String)
2020-09-05 20:49:10.958 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:10.981 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:10.989 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:10.989 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD01(String)
2020-09-05 20:49:10.995 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.014 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.022 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.023 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SD(String)
2020-09-05 20:49:11.030 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.049 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.057 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.058 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN02(String)
2020-09-05 20:49:11.064 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.083 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.093 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.094 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD(String)
2020-09-05 20:49:11.099 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.117 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.124 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.126 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD02(String)
2020-09-05 20:49:11.132 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.153 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.165 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.166 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN03(String)
2020-09-05 20:49:11.172 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:11.206 DEBUG 4876 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:11.220 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:11.221 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD03(String)
2020-09-05 20:49:11.231 DEBUG 4876 [io-8980-exec-10] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:15.257 DEBUG 4876 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:15.265 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:49:15.265 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:49:15.271 DEBUG 4876 [nio-8980-exec-7] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:49:22.588 DEBUG 4876 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`area_code` AS "areaCode", a.`area_name` AS "areaName", a.`area_type` AS "areaType" FROM `js_sys_area` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.tree_sorts, a.area_code
2020-09-05 20:49:22.591 DEBUG 4876 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:22.598 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.AreaDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`area_code` AS "areaCode", a.`area_name` AS "areaName", a.`area_type` AS "areaType" FROM `js_sys_area` a WHERE a.`status` = ? ORDER BY a.tree_sorts, a.area_code
2020-09-05 20:49:22.599 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.AreaDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 20:49:29.065 DEBUG 4876 [nio-8980-exec-3] [c.j.modules.sys.dao.AreaDao.findList   ] - <==      Total: 3251
2020-09-05 20:49:29.568 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:29.576 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:49:29.577 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:49:29.581 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:49:29.601 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.609 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.609 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN(String)
2020-09-05 20:49:29.613 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.626 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.633 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.634 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN01(String)
2020-09-05 20:49:29.638 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.654 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.663 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.663 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD01(String)
2020-09-05 20:49:29.667 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.682 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.689 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.690 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SD(String)
2020-09-05 20:49:29.694 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.709 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.717 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.718 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN02(String)
2020-09-05 20:49:29.721 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.737 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.745 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.746 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD(String)
2020-09-05 20:49:29.749 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.763 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.772 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.773 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD02(String)
2020-09-05 20:49:29.778 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.794 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.803 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.803 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN03(String)
2020-09-05 20:49:29.807 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:29.821 DEBUG 4876 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:29.829 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:29.830 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD03(String)
2020-09-05 20:49:29.833 DEBUG 4876 [nio-8980-exec-2] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.545 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will be managed by Spring
2020-09-05 20:49:41.557 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.OfficeDao.findList ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`office_code` AS "officeCode", a.`view_code` AS "viewCode", a.`office_name` AS "officeName", a.`full_name` AS "fullName", a.`office_type` AS "officeType", a.`leader` AS "leader", a.`phone` AS "phone", a.`address` AS "address", a.`zip_code` AS "zipCode", a.`email` AS "email", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_office` a WHERE a.`status` = ? ORDER BY a.tree_sort, a.office_code
2020-09-05 20:49:41.558 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.OfficeDao.findList ] - ==> Parameters: 0(String)
2020-09-05 20:49:41.563 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.OfficeDao.findList ] - <==      Total: 9
2020-09-05 20:49:41.580 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.588 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.589 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN(String)
2020-09-05 20:49:41.592 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.610 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.619 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.620 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN01(String)
2020-09-05 20:49:41.623 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.638 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.646 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.647 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD01(String)
2020-09-05 20:49:41.651 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.666 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.673 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.674 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SD(String)
2020-09-05 20:49:41.678 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.691 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.699 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.700 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN02(String)
2020-09-05 20:49:41.704 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.723 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.732 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.732 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD(String)
2020-09-05 20:49:41.736 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.755 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.764 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.765 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD02(String)
2020-09-05 20:49:41.768 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.786 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.793 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.794 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDJN03(String)
2020-09-05 20:49:41.798 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 20:49:41.811 DEBUG 4876 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6091e729] will not be managed by Spring
2020-09-05 20:49:41.819 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4", e.`corp_code` AS "employee.corpCode", e.`corp_name` AS "employee.corpName", e.`status` AS "employee.status", e.`create_by` AS "employee.createBy", e.`create_date` AS "employee.createDate", e.`update_by` AS "employee.updateBy", e.`update_date` AS "employee.updateDate", e.`remarks` AS "employee.remarks", e.`emp_code` AS "employee.empCode", e.`emp_no` AS "employee.empNo", e.`emp_name` AS "employee.empName", e.`emp_name_en` AS "employee.empNameEn", o.`status` AS "employee.office.status", o.`create_by` AS "employee.office.createBy", o.`create_date` AS "employee.office.createDate", o.`update_by` AS "employee.office.updateBy", o.`update_date` AS "employee.office.updateDate", o.`remarks` AS "employee.office.remarks", o.`parent_code` AS "employee.office.parentCode", o.`parent_codes` AS "employee.office.parentCodes", o.`tree_sort` AS "employee.office.treeSort", o.`tree_sorts` AS "employee.office.treeSorts", o.`tree_leaf` AS "employee.office.treeLeaf", o.`tree_level` AS "employee.office.treeLevel", o.`tree_names` AS "employee.office.treeNames", o.`office_code` AS "employee.office.officeCode", o.`view_code` AS "employee.office.viewCode", o.`office_name` AS "employee.office.officeName", o.`full_name` AS "employee.office.fullName", o.`office_type` AS "employee.office.officeType", o.`leader` AS "employee.office.leader", o.`phone` AS "employee.office.phone", o.`address` AS "employee.office.address", o.`zip_code` AS "employee.office.zipCode", o.`email` AS "employee.office.email", c.`status` AS "employee.company.status", c.`create_by` AS "employee.company.createBy", c.`create_date` AS "employee.company.createDate", c.`update_by` AS "employee.company.updateBy", c.`update_date` AS "employee.company.updateDate", c.`remarks` AS "employee.company.remarks", c.`parent_code` AS "employee.company.parentCode", c.`parent_codes` AS "employee.company.parentCodes", c.`tree_sort` AS "employee.company.treeSort", c.`tree_sorts` AS "employee.company.treeSorts", c.`tree_leaf` AS "employee.company.treeLeaf", c.`tree_level` AS "employee.company.treeLevel", c.`tree_names` AS "employee.company.treeNames", c.`company_code` AS "employee.company.companyCode", c.`view_code` AS "employee.company.viewCode", c.`company_name` AS "employee.company.companyName", c.`full_name` AS "employee.company.fullName", ar.`area_code` AS "employee.company.area.areaCode", ar.`area_name` AS "employee.company.area.areaName", ar.`area_type` AS "employee.company.area.areaType" FROM `js_sys_user` a JOIN `js_sys_employee` e ON e.emp_code=a.ref_code AND a.user_type=? LEFT JOIN `js_sys_office` o ON o.office_code=e.office_code LEFT JOIN `js_sys_company` c ON c.company_code=e.company_code LEFT JOIN `js_sys_area` ar ON ar.area_code = c.area_code WHERE a.`status` = ? AND a.`user_type` = ? AND o.`office_code` = ? ORDER BY a.user_weight DESC, a.update_date DESC
2020-09-05 20:49:41.819 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - ==> Parameters: employee(String), 0(String), employee(String), SDQD03(String)
2020-09-05 20:49:41.824 DEBUG 4876 [nio-8980-exec-6] [c.j.modules.sys.dao.EmpUserDao.findList] - <==      Total: 0
2020-09-05 21:46:01.256 INFO  17008 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 17008 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 21:46:01.259 DEBUG 17008 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 21:46:01.260 INFO  17008 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 21:46:04.636 INFO  17008 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 21:46:04.637 INFO  17008 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 21:46:09.145 INFO  17008 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 21:46:09.145 INFO  17008 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 21:46:09.145 INFO  17008 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 21:46:10.180 DEBUG 17008 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 21:46:10.872 INFO  17008 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 21:46:12.424 INFO  17008 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 21:46:21.393 DEBUG 17008 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:24.414 DEBUG 17008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 21:46:24.440 DEBUG 17008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 21:46:24.511 DEBUG 17008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 21:46:24.529 DEBUG 17008 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 12毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:46:24.539 DEBUG 17008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 21:46:24.542 DEBUG 17008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 21:46:24.556 DEBUG 17008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 21:46:29.168 INFO  17008 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 21:46:29.172 INFO  17008 [           main] [com.jeesite.modules.Application        ] - Started Application in 29.048 seconds (JVM running for 30.921)
2020-09-05 21:46:32.803 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 21:46:32.806 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:32.814 DEBUG 17008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 21:46:32.816 DEBUG 17008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 21:46:32.998 DEBUG 17008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 21:46:33.391 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 21:46:33.391 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:33.403 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 21:46:33.403 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 21:46:33.511 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 21:46:33.546 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:33.551 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:33.559 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:33.563 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 21:46:33.749 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 21:46:38.989 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 9毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:38.996 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:39.010 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:39.013 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 21:46:39.024 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 21:46:39.154 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:39.156 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:39.167 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:39.170 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 21:46:39.179 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 21:46:39.807 DEBUG 17008 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:39.809 DEBUG 17008 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:39.823 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:39.825 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298482562558640128,%(String)
2020-09-05 21:46:39.905 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 67
2020-09-05 21:46:40.139 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:46:40.137  URI: /js/a/test/testData/list  IP: 127.0.0.1
2020-09-05 21:46:40.179 INFO  17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/test/testDataList <<<<<<<<< /js/a/test/testData/list >>>>>>>>> com.jeesite.modules.test.web.TestDataController#list(TestData, Model)
2020-09-05 21:46:40.328 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:40.329 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:40.335 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:40.338 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_type(String), 1(String), 0(String)
2020-09-05 21:46:40.343 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 21:46:40.419 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:40.422 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:40.428 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:40.429 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_search_status(String), 1(String), 0(String)
2020-09-05 21:46:40.434 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 21:46:40.557 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:46:40.526  用时: 389毫秒  URI: /js/a/test/testData/list  总内存: 515MB  已用内存: 118.597MB
2020-09-05 21:46:40.562 DEBUG 17008 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:40.563 DEBUG 17008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:40.564 DEBUG 17008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:40.566 DEBUG 17008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 21:46:40.599 DEBUG 17008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 21:46:40.618 DEBUG 17008 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:46:40.622 DEBUG 17008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:40.623 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:46:40.630 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302241742505455616(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 21:46:40.551(Timestamp), /js/a/test/testData/list(String), GET(String), (String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 389(Long)
2020-09-05 21:46:40.632 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:46:41.331 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:46:41.331  URI: /js/a/test/testData/listData  IP: 127.0.0.1
2020-09-05 21:46:41.444 DEBUG 17008 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 21:46:41.446 DEBUG 17008 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:41.531 DEBUG 17008 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT count(0) FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ?
2020-09-05 21:46:41.532 DEBUG 17008 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 21:46:41.560 DEBUG 17008 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==>  Preparing: SELECT a.`id` AS "id", a.`test_input` AS "testInput", a.`test_textarea` AS "testTextarea", a.`test_select` AS "testSelect", a.`test_select_multiple` AS "testSelectMultiple", a.`test_radio` AS "testRadio", a.`test_checkbox` AS "testCheckbox", a.`test_date` AS "testDate", a.`test_datetime` AS "testDatetime", a.`test_user_code` AS "testUser.userCode", a.`test_office_code` AS "testOffice.officeCode", a.`test_area_code` AS "testAreaCode", a.`test_area_name` AS "testAreaName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", u10.`user_name` AS "testUser.userName", u11.`office_name` AS "testOffice.officeName" FROM `test_data` a LEFT JOIN `js_sys_user` u10 ON u10.user_code = a.test_user_code LEFT JOIN `js_sys_office` u11 ON u11.office_code = a.test_office_code WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:46:41.562 DEBUG 17008 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - ==> Parameters: 1(String)
2020-09-05 21:46:41.587 DEBUG 17008 [io-8980-exec-10] [c.j.m.test.dao.TestDataDao.findList    ] - <==      Total: 2
2020-09-05 21:46:41.744 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:46:41.730  用时: 399毫秒  URI: /js/a/test/testData/listData  总内存: 515MB  已用内存: 148.537MB
2020-09-05 21:46:41.760 DEBUG 17008 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:46:41.763 DEBUG 17008 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:41.765 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:46:41.773 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302241747505065984(String), select(String), 系统管理/研发工具/代码生成实例/单表_主子表(String), system(String), 超级管理员(String), 2020-09-05 21:46:41.743(Timestamp), /js/a/test/testData/listData(String), POST(String), testInput=&testTextarea=&testSelect=&testDate_gte=&testDate_lte=&testDatetime_gte=&testDatetime_lte=&testUser.userName=&testUser.userCode=&testOffice.officeName=&testOffice.officeCode=&testAreaName=&testAreaCode=&!testSelectMultiple=&status=&!testRadio=&testRadio=&!testCheckbox=&pageNo=&pageSize=&orderBy=(String), (String), TestData(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 399(Long)
2020-09-05 21:46:41.780 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:46:43.540 DEBUG 17008 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:43.541 DEBUG 17008 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:43.548 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:46:43.551 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 21:46:43.556 DEBUG 17008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 21:46:46.438 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:46:46.437  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2020-09-05 21:46:46.460 INFO  17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2020-09-05 21:46:46.508 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:46:46.505  用时: 68毫秒  URI: /js/a/gen/genTable/list  总内存: 515MB  已用内存: 158.619MB
2020-09-05 21:46:46.519 DEBUG 17008 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:46:46.521 DEBUG 17008 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:46.523 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:46:46.528 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302241767486730240(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:46:46.507(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 68(Long)
2020-09-05 21:46:46.535 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:46:46.668 DEBUG 17008 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:46:46.668  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 21:46:46.745 DEBUG 17008 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2020-09-05 21:46:46.746 DEBUG 17008 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:46.770 DEBUG 17008 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2020-09-05 21:46:46.771 DEBUG 17008 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:46:46.774 DEBUG 17008 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:46:46.775 DEBUG 17008 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:46:46.782 DEBUG 17008 [nio-8980-exec-4] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2020-09-05 21:46:46.823 DEBUG 17008 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:46:46.820  用时: 152毫秒  URI: /js/a/gen/genTable/listData  总内存: 515MB  已用内存: 169.304MB
2020-09-05 21:46:46.831 DEBUG 17008 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:46:46.832 DEBUG 17008 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:46.834 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:46:46.836 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302241768807936000(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:46:46.822(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 152(Long)
2020-09-05 21:46:46.841 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:46:49.779 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:46:49.779  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2020-09-05 21:46:49.783 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 21:46:49.783 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:49.790 DEBUG 17008 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 21:46:49.791 DEBUG 17008 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase(String)
2020-09-05 21:46:49.795 DEBUG 17008 [nio-8980-exec-6] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 21:46:49.799 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:46:49.807 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:46:49.808 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase(String)
2020-09-05 21:46:49.829 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 17
2020-09-05 21:46:49.884 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:49.891 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2020-09-05 21:46:49.892 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: market_purchase(String), market_purchase(String)
2020-09-05 21:46:49.897 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2020-09-05 21:46:49.907 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2020-09-05 21:46:49.908 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: market_purchase(String)
2020-09-05 21:46:49.914 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 17
2020-09-05 21:46:49.924 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2020-09-05 21:46:49.925 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: market_purchase(String)
2020-09-05 21:46:49.929 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2020-09-05 21:46:50.062 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2020-09-05 21:46:50.065 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will not be managed by Spring
2020-09-05 21:46:50.075 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2020-09-05 21:46:50.076 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2020-09-05 21:46:50.088 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 34
2020-09-05 21:46:50.091 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 21:46:50.091 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will not be managed by Spring
2020-09-05 21:46:50.101 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 21:46:50.102 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2020-09-05 21:46:50.106 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 7
2020-09-05 21:46:50.111 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:50.121 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2020-09-05 21:46:50.121 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2020-09-05 21:46:50.124 DEBUG 17008 [nio-8980-exec-6] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2020-09-05 21:46:50.130 INFO  17008 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2020-09-05 21:46:50.209 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:50.210 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:50.220 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:46:50.221 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_yes_no(String), 1(String), 0(String)
2020-09-05 21:46:50.225 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 2
2020-09-05 21:46:50.282 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:46:50.278  用时: 499毫秒  URI: /js/a/gen/genTable/form  总内存: 515MB  已用内存: 192.272MB
2020-09-05 21:46:50.289 DEBUG 17008 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:46:50.291 DEBUG 17008 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:46:50.292 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:46:50.294 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302241783320227840(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:46:50.282(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=market_purchase&op=step2(String), market_purchase(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 499(Long)
2020-09-05 21:46:50.298 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:49:56.642 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:49:56.641  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2020-09-05 21:49:56.647 INFO  17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2020-09-05 21:49:56.657 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:49:56.655  用时: 14毫秒  URI: /js/a/gen/genTable/list  总内存: 515MB  已用内存: 199.011MB
2020-09-05 21:49:56.672 DEBUG 17008 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:49:56.673 DEBUG 17008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:49:56.675 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:49:56.679 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302242565033635840(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:49:56.657(Timestamp), /js/a/gen/genTable/list(String), GET(String), parentTableName=market_purchase(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 14(Long)
2020-09-05 21:49:56.681 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:49:56.794 DEBUG 17008 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:49:56.794  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 21:49:56.803 DEBUG 17008 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:49:56.804 DEBUG 17008 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:49:56.827 DEBUG 17008 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2020-09-05 21:49:56.828 DEBUG 17008 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: market_purchase(String)
2020-09-05 21:49:56.831 DEBUG 17008 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:49:56.832 DEBUG 17008 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: market_purchase(String)
2020-09-05 21:49:56.836 DEBUG 17008 [nio-8980-exec-7] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2020-09-05 21:49:56.850 DEBUG 17008 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:49:56.848  用时: 54毫秒  URI: /js/a/gen/genTable/listData  总内存: 515MB  已用内存: 201.494MB
2020-09-05 21:49:56.861 DEBUG 17008 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:49:56.862 DEBUG 17008 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:49:56.863 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:49:56.865 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302242565843136512(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:49:56.85(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=market_purchase&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 54(Long)
2020-09-05 21:49:56.869 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:50:00.985 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:50:00.985  URI: /js/a/gen/genTable/form  IP: 127.0.0.1
2020-09-05 21:50:00.989 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 21:50:00.990 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:50:00.997 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 21:50:00.998 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:50:01.001 DEBUG 17008 [nio-8980-exec-1] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 21:50:01.003 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:50:01.013 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:50:01.014 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:50:01.023 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 19
2020-09-05 21:50:01.044 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:50:01.050 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY "tableName"
2020-09-05 21:50:01.051 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: market_purchase_good(String), market_purchase_good(String)
2020-09-05 21:50:01.055 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 1
2020-09-05 21:50:01.065 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==>  Preparing: SELECT t.COLUMN_NAME AS "columnName", t.COLUMN_COMMENT AS "comments", (CASE WHEN t.IS_NULLABLE = 'YES' THEN '1' ELSE '0' END) AS "isNull", (t.ORDINAL_POSITION * 10) AS "columnSort", t.COLUMN_TYPE AS "columnType" FROM information_schema.COLUMNS t WHERE t.TABLE_SCHEMA = (select database()) AND t.TABLE_NAME = ? ORDER BY t.ORDINAL_POSITION
2020-09-05 21:50:01.066 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:50:01.075 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findTableColumnList        ] - <==      Total: 20
2020-09-05 21:50:01.086 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==>  Preparing: SELECT au.COLUMN_NAME AS "columnName" FROM information_schema.COLUMNS au WHERE au.TABLE_SCHEMA = (select database()) AND au.COLUMN_KEY = 'PRI' AND au.TABLE_NAME = ?
2020-09-05 21:50:01.086 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:50:01.090 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.dao.GenDataDictDao.findTablePK ] - <==      Total: 1
2020-09-05 21:50:01.106 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.dict_type, a.update_date DESC
2020-09-05 21:50:01.107 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will not be managed by Spring
2020-09-05 21:50:01.114 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`id` AS "id", a.`dict_name` AS "dictName", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys" FROM `js_sys_dict_type` a WHERE a.`status` = ? ORDER BY a.dict_type, a.update_date DESC
2020-09-05 21:50:01.115 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - ==> Parameters: 0(String)
2020-09-05 21:50:01.122 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.dao.DictTypeDao.findList     ] - <==      Total: 34
2020-09-05 21:50:01.125 DEBUG 17008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 21:50:01.125 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will not be managed by Spring
2020-09-05 21:50:01.131 DEBUG 17008 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a ORDER BY a.update_date DESC
2020-09-05 21:50:01.132 DEBUG 17008 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: 
2020-09-05 21:50:01.142 DEBUG 17008 [nio-8980-exec-1] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 7
2020-09-05 21:50:01.145 DEBUG 17008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:50:01.153 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==>  Preparing: SELECT a.gen_base_dir AS "genBaseDir" FROM js_gen_table a GROUP BY a.gen_base_dir ORDER BY max(a.update_date) DESC LIMIT 20
2020-09-05 21:50:01.154 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - ==> Parameters: 
2020-09-05 21:50:01.158 DEBUG 17008 [nio-8980-exec-1] [c.j.m.g.d.G.findGenBaseDirList         ] - <==      Total: 2
2020-09-05 21:50:01.162 INFO  17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableForm <<<<<<<<< /js/a/gen/genTable/form >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#form(GenTable, String, Model, RedirectAttributes)
2020-09-05 21:50:01.186 DEBUG 17008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:50:01.184  用时: 199毫秒  URI: /js/a/gen/genTable/form  总内存: 515MB  已用内存: 207.051MB
2020-09-05 21:50:01.196 DEBUG 17008 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:50:01.197 DEBUG 17008 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:50:01.198 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:50:01.206 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302242584025444352(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:50:01.185(Timestamp), /js/a/gen/genTable/form(String), GET(String), tableName=market_purchase_good&op=step2(String), market_purchase_good(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 199(Long)
2020-09-05 21:50:01.211 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:51:55.901 DEBUG 17008 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:51:55.901  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2020-09-05 21:51:55.908 DEBUG 17008 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 21:51:55.908 DEBUG 17008 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:51:55.912 DEBUG 17008 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 21:51:55.913 DEBUG 17008 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:51:55.915 DEBUG 17008 [nio-8980-exec-8] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 21:51:55.915 DEBUG 17008 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:51:55.919 DEBUG 17008 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:51:55.920 DEBUG 17008 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:51:55.924 DEBUG 17008 [nio-8980-exec-8] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 19
2020-09-05 21:51:56.307 DEBUG 17008 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:51:56.295  用时: 394毫秒  URI: /js/a/gen/genTable/save  总内存: 515MB  已用内存: 241.494MB
2020-09-05 21:51:56.313 DEBUG 17008 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:51:56.313 DEBUG 17008 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:51:56.314 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:51:56.317 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243066877915136(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:51:56.306(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=market_purchase_good&comments=进货商品管理&className=MarketPurchaseGood&functionAuthor=zg&parentTableName=market_purchase&parentTableFkName=market_purchase_id&remarks=&columnList[0].id=1301694766997278720&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=编号&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1301694767022444544&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=status&columnList[1].comments=状态（0正常 1删除 2停用）&columnList[1].columnType=char(1)&columnList[1].attrType=String&columnList[1].fullAttrName=status&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&!columnList[1].isList=&!columnList[1].isQuery=&columnList[1].queryType=EQ&!columnList[1].isEdit=&!columnList[1].isRequired=&columnList[1].isRequired=1&columnList[1].showType=select&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=sys_search_status&columnList[1].optionMap['dictType']=sys_search_status&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1301694767047610368&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=create_by&columnList[2].comments=创建者&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=createBy&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1301694767081164800&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=create_date&columnList[3].comments=创建时间&columnList[3].columnType=datetime&columnList[3].attrType=java.util.Date&columnList[3].fullAttrName=createDate&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].isRequired=1&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1301694767102136320&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=update_by&columnList[4].comments=更新者&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=updateBy&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].isRequired=1&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1301694767127302144&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_date&columnList[5].comments=更新时间&columnList[5].columnType=datetime&columnList[5].attrType=java.util.Date&columnList[5].fullAttrName=updateDate&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].isRequired=1&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1301694767148273664&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=remarks&columnList[6].comments=备注信息&columnList[6].columnType=varchar(500)&columnList[6].attrType=String&columnList[6].fullAttrName=remarks&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&!columnList[6].isQuery=&columnList[6].queryType=LIKE&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=textarea&columnList[6].optionMap['gridRowCol']=12/2/10&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['isNewLine']=1&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1301694767169245184&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=good_name&columnList[7].comments=商品名称&columnList[7].columnType=varchar(200)&columnList[7].attrType=String&columnList[7].fullAttrName=goodName&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].queryType=LIKE&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1301694767194411008&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=product_date&columnList[8].comments=生产日期&columnList[8].columnType=datetime&columnList[8].attrType=java.util.Date&columnList[8].fullAttrName=productDate&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=datetime&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1301694767219576832&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=suggested_price&columnList[9].comments=建议价格&columnList[9].columnType=decimal(10,2)&columnList[9].attrType=Double&columnList[9].fullAttrName=suggestedPrice&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[9].optionMap['fieldValid']=number&columnList[10].id=1301694767248936960&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=in_price&columnList[10].comments=进价&columnList[10].columnType=decimal(10,2)&columnList[10].attrType=Double&columnList[10].fullAttrName=inPrice&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&columnList[10].optionMap['fieldValid']=number&columnList[11].id=1301694767269908480&columnList[11].status=&columnList[11].columnSort=120&columnList[11].columnName=good_num&columnList[11].comments=数量&columnList[11].columnType=int(11)&columnList[11].attrType=Long&columnList[11].fullAttrName=goodNum&!columnList[11].isPk=&!columnList[11].isInsert=&columnList[11].isInsert=1&!columnList[11].isUpdate=&columnList[11].isUpdate=1&!columnList[11].isList=&columnList[11].isList=1&!columnList[11].isQuery=&columnList[11].queryType=EQ&!columnList[11].isEdit=&columnList[11].isEdit=1&!columnList[11].isRequired=&columnList[11].showType=input&columnList[11].optionMap['gridRowCol']=6/4/8&!columnList[11].optionMap['isNewLine']=&columnList[11].optionMap['dictName']=&columnList[11].optionMap['dictType']=&!columnList[11].optionMap['fieldValid']=&columnList[11].optionMap['fieldValid']=digits&columnList[12].id=1301694767295074304&columnList[12].status=&columnList[12].columnSort=130&columnList[12].columnName=good_count&columnList[12].comments=小计&columnList[12].columnType=decimal(10,2)&columnList[12].attrType=Double&columnList[12].fullAttrName=goodCount&!columnList[12].isPk=&!columnList[12].isInsert=&columnList[12].isInsert=1&!columnList[12].isUpdate=&columnList[12].isUpdate=1&!columnList[12].isList=&columnList[12].isList=1&!columnList[12].isQuery=&columnList[12].queryType=EQ&!columnList[12].isEdit=&columnList[12].isEdit=1&!columnList[12].isRequired=&columnList[12].showType=input&columnList[12].optionMap['gridRowCol']=6/4/8&!columnList[12].optionMap['isNewLine']=&columnList[12].optionMap['dictName']=&columnList[12].optionMap['dictType']=&!columnList[12].optionMap['fieldValid']=&columnList[12].optionMap['fieldValid']=number&columnList[13].id=1301694767316045824&columnList[13].status=&columnList[13].columnSort=140&columnList[13].columnName=pay_date&columnList[13].comments=付款日期&columnList[13].columnType=datetime&columnList[13].attrType=java.util.Date&columnList[13].fullAttrName=payDate&!columnList[13].isPk=&!columnList[13].isInsert=&columnList[13].isInsert=1&!columnList[13].isUpdate=&columnList[13].isUpdate=1&!columnList[13].isList=&columnList[13].isList=1&!columnList[13].isQuery=&columnList[13].queryType=EQ&!columnList[13].isEdit=&columnList[13].isEdit=1&!columnList[13].isRequired=&columnList[13].showType=datetime&columnList[13].optionMap['gridRowCol']=6/4/8&!columnList[13].optionMap['isNewLine']=&columnList[13].optionMap['dictName']=&columnList[13].optionMap['dictType']=&!columnList[13].optionMap['fieldValid']=&columnList[14].id=1301694767341211648&columnList[14].status=&columnList[14].columnSort=150&columnList[14].columnName=cost_price&columnList[14].comments=成本价格&columnList[14].columnType=decimal(10,2)&columnList[14].attrType=Double&columnList[14].fullAttrName=costPrice&!columnList[14].isPk=&!columnList[14].isInsert=&columnList[14].isInsert=1&!columnList[14].isUpdate=&columnList[14].isUpdate=1&!columnList[14].isList=&columnList[14].isList=1&!columnList[14].isQuery=&columnList[14].queryType=EQ&!columnList[14].isEdit=&columnList[14].isEdit=1&!columnList[14].isRequired=&columnList[14].showType=input&columnList[14].optionMap['gridRowCol']=6/4/8&!columnList[14].optionMap['isNewLine']=&columnList[14].optionMap['dictName']=&columnList[14].optionMap['dictType']=&!columnList[14].optionMap['fieldValid']=&columnList[14].optionMap['fieldValid']=number&columnList[15].id=1301694767370571776&columnList[15].status=&columnList[15].columnSort=160&columnList[15].columnName=sale_price&columnList[15].comments=销售价格&columnList[15].columnType=decimal(10,2)&columnList[15].attrType=Double&columnList[15].fullAttrName=salePrice&!columnList[15].isPk=&!columnList[15].isInsert=&columnList[15].isInsert=1&!columnList[15].isUpdate=&columnList[15].isUpdate=1&!columnList[15].isList=&columnList[15].isList=1&!columnList[15].isQuery=&columnList[15].queryType=EQ&!columnList[15].isEdit=&columnList[15].isEdit=1&!columnList[15].isRequired=&columnList[15].showType=input&columnList[15].optionMap['gridRowCol']=6/4/8&!columnList[15].optionMap['isNewLine']=&columnList[15].optionMap['dictName']=&columnList[15].optionMap['dictType']=&!columnList[15].optionMap['fieldValid']=&columnList[15].optionMap['fieldValid']=number&columnList[16].id=1301694767395737600&columnList[16].status=&columnList[16].columnSort=170&columnList[16].columnName=membership_price&columnList[16].comments=会员价格&columnList[16].columnType=decimal(10,2)&columnList[16].attrType=Double&columnList[16].fullAttrName=membershipPrice&!columnList[16].isPk=&!columnList[16].isInsert=&columnList[16].isInsert=1&!columnList[16].isUpdate=&columnList[16].isUpdate=1&!columnList[16].isList=&columnList[16].isList=1&!columnList[16].isQuery=&columnList[16].queryType=EQ&!columnList[16].isEdit=&columnList[16].isEdit=1&!columnList[16].isRequired=&columnList[16].showType=input&columnList[16].optionMap['gridRowCol']=6/4/8&!columnList[16].optionMap['isNewLine']=&columnList[16].optionMap['dictName']=&columnList[16].optionMap['dictType']=&!columnList[16].optionMap['fieldValid']=&columnList[16].optionMap['fieldValid']=number&columnList[17].id=1301694767420903424&columnList[17].status=&columnList[17].columnSort=180&columnList[17].columnName=good_unit&columnList[17].comments=单位&columnList[17].columnType=char(1)&columnList[17].attrType=String&columnList[17].fullAttrName=goodUnit&!columnList[17].isPk=&!columnList[17].isInsert=&columnList[17].isInsert=1&!columnList[17].isUpdate=&columnList[17].isUpdate=1&!columnList[17].isList=&columnList[17].isList=1&!columnList[17].isQuery=&columnList[17].queryType=EQ&!columnList[17].isEdit=&columnList[17].isEdit=1&!columnList[17].isRequired=&columnList[17].showType=input&columnList[17].optionMap['gridRowCol']=6/4/8&!columnList[17].optionMap['isNewLine']=&columnList[17].optionMap['dictName']=&columnList[17].optionMap['dictType']=&!columnList[17].optionMap['fieldValid']=&columnList[18].id=1301694767446069248&columnList[18].status=&columnList[18].columnSort=190&columnList[18].columnName=market_purchase_id&columnList[18].comments=父表market_purchase主键&columnList[18].columnType=varchar(64)&columnList[18].attrType=String&columnList[18].fullAttrName=marketPurchaseId&!columnList[18].isPk=&!columnList[18].isInsert=&columnList[18].isInsert=1&!columnList[18].isUpdate=&columnList[18].isUpdate=1&!columnList[18].isList=&columnList[18].isList=1&!columnList[18].isQuery=&columnList[18].queryType=EQ&!columnList[18].isEdit=&columnList[18].isEdit=1&!columnList[18].isRequired=&columnList[18].showType=input&columnList[18].optionMap['gridRowCol']=6/4/8&!columnList[18].optionMap['isNewLine']=&columnList[18].optionMap['dictName']=&columnList[18].optionMap['dictType']=&!columnList[18].optionMap['fieldValid']=&columnList[19].id=&columnList[19].status=&columnList[19].columnSort=200&columnList[19].columnName=good_barcode&columnList[19].comments=商品条码&columnList[19].columnType=varchar(50)&columnList[19].attrType=String&columnList[19].fullAttrName=goodBarcode&!columnList[19].isPk=&!columnList[19].isInsert=&columnList[19].isInsert=1&!columnList[19].isUpdate=&columnList[19].isUpdate=1&!columnList[19].isList=&columnList[19].isList=1&!columnList[19].isQuery=&columnList[19].queryType=EQ&!columnList[19].isEdit=&columnList[19].isEdit=1&!columnList[19].isRequired=&columnList[19].showType=input&columnList[19].optionMap['gridRowCol']=6/4/8&!columnList[19].optionMap['isNewLine']=&columnList[19].optionMap['dictName']=&columnList[19].optionMap['dictType']=&!columnList[19].optionMap['fieldValid']=&genFlag=(String), market_purchase_good(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 394(Long)
2020-09-05 21:51:56.320 DEBUG 17008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:52:11.309 DEBUG 17008 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:11.309  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2020-09-05 21:52:11.314 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 21:52:11.316 DEBUG 17008 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:11.322 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 21:52:11.324 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:52:11.326 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 21:52:11.328 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:52:11.335 DEBUG 17008 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:52:11.336 DEBUG 17008 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:52:11.345 DEBUG 17008 [nio-8980-exec-3] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 19
2020-09-05 21:52:11.405 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2020-09-05 21:52:11.405 DEBUG 17008 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:11.406 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2020-09-05 21:52:11.407 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: MarketPurchaseGood(String), 进货商品管理(String), market_purchase(String), market_purchase_id(String), (String), (String), com.jeesite.modules(String), market(String), (String), 进货商品管理(String), 进货商品管理(String), zg(String), D:\work\jeesite4-market(String), {"treeViewName":"","isHaveDelete":"1","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2020-09-05 21:52:11.404(Timestamp), (String), market_purchase_good(String)
2020-09-05 21:52:11.408 DEBUG 17008 [nio-8980-exec-3] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.410 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.411 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.412 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), id(String), 10(Integer), varchar(64)(String), 编号(String), 编号(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694766997278720(String)
2020-09-05 21:52:11.414 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.415 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.415 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.416 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), status(String), 20(Integer), char(1)(String), 状态(String), 状态（0正常 1删除 2停用）(String), status(String), String(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), select(String), {"isNewLine":"","fieldValid":"","dictName":"sys_search_status","gridRowCol":"6/4/8","dictType":"sys_search_status"}(String), 1301694767022444544(String)
2020-09-05 21:52:11.418 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.419 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.420 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.420 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), create_by(String), 30(Integer), varchar(64)(String), 创建者(String), 创建者(String), createBy(String), String(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767047610368(String)
2020-09-05 21:52:11.422 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.423 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.424 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.424 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), create_date(String), 40(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767081164800(String)
2020-09-05 21:52:11.426 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.427 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.427 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.428 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), update_by(String), 50(Integer), varchar(64)(String), 更新者(String), 更新者(String), updateBy(String), String(String), (String), 0(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767102136320(String)
2020-09-05 21:52:11.429 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.431 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.432 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.433 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), update_date(String), 60(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 0(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767127302144(String)
2020-09-05 21:52:11.435 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.436 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.437 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.438 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), remarks(String), 70(Integer), varchar(500)(String), 备注信息(String), 备注信息(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1301694767148273664(String)
2020-09-05 21:52:11.440 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.440 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.441 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.442 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), good_name(String), 80(Integer), varchar(200)(String), 商品名称(String), 商品名称(String), goodName(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), LIKE(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767169245184(String)
2020-09-05 21:52:11.444 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.444 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.445 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.446 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), product_date(String), 90(Integer), datetime(String), 生产日期(String), 生产日期(String), productDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767194411008(String)
2020-09-05 21:52:11.447 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.449 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.450 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.450 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), suggested_price(String), 100(Integer), decimal(10,2)(String), 建议价格(String), 建议价格(String), suggestedPrice(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767219576832(String)
2020-09-05 21:52:11.452 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.453 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.453 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.454 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), in_price(String), 110(Integer), decimal(10,2)(String), 进价(String), 进价(String), inPrice(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767248936960(String)
2020-09-05 21:52:11.456 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.456 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.458 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.459 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), good_num(String), 120(Integer), int(11)(String), 数量(String), 数量(String), goodNum(String), Long(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"digits","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767269908480(String)
2020-09-05 21:52:11.460 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.462 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.462 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.463 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), good_count(String), 130(Integer), decimal(10,2)(String), 小计(String), 小计(String), goodCount(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767295074304(String)
2020-09-05 21:52:11.464 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.465 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.466 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.467 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), pay_date(String), 140(Integer), datetime(String), 付款日期(String), 付款日期(String), payDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767316045824(String)
2020-09-05 21:52:11.469 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.471 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.472 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.472 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), cost_price(String), 150(Integer), decimal(10,2)(String), 成本价格(String), 成本价格(String), costPrice(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767341211648(String)
2020-09-05 21:52:11.474 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.475 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.476 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.477 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), sale_price(String), 160(Integer), decimal(10,2)(String), 销售价格(String), 销售价格(String), salePrice(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767370571776(String)
2020-09-05 21:52:11.478 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.479 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.480 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.481 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), membership_price(String), 170(Integer), decimal(10,2)(String), 会员价格(String), 会员价格(String), membershipPrice(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767395737600(String)
2020-09-05 21:52:11.482 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.483 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.484 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.484 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), good_unit(String), 180(Integer), char(1)(String), 单位(String), 单位(String), goodUnit(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767420903424(String)
2020-09-05 21:52:11.486 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.487 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:11.488 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:11.488 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase_good(String), market_purchase_id(String), 190(Integer), varchar(64)(String), 父表market_purchase主键(String), 父表market_purchase主键(String), marketPurchaseId(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301694767446069248(String)
2020-09-05 21:52:11.490 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:11.491 DEBUG 17008 [nio-8980-exec-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (#{id}, #{genTable.tableName}, #{columnName}, #{columnSort}, #{columnType}, #{columnLabel}, #{comments}, #{fullAttrName}, #{attrType}, #{isPk}, #{isNull}, #{isInsert}, #{isUpdate}, #{isList}, #{isQuery}, #{queryType}, #{isEdit}, #{showType}, #{options})
2020-09-05 21:52:11.492 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==>  Preparing: INSERT INTO `js_gen_table_column` (`id`, `table_name`, `column_name`, `column_sort`, `column_type`, `column_label`, `comments`, `attr_name`, `attr_type`, `is_pk`, `is_null`, `is_insert`, `is_update`, `is_list`, `is_query`, `query_type`, `is_edit`, `show_type`, `options`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:52:11.492 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.insert ] - ==> Parameters: 1302243130564227072(String), market_purchase_good(String), good_barcode(String), 200(Integer), varchar(50)(String), 商品条码(String), 商品条码(String), goodBarcode(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String)
2020-09-05 21:52:11.494 DEBUG 17008 [nio-8980-exec-3] [c.j.m.gen.dao.GenTableColumnDao.insert ] - <==    Updates: 1
2020-09-05 21:52:11.503 DEBUG 17008 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:11.497  用时: 188毫秒  URI: /js/a/gen/genTable/save  总内存: 515MB  已用内存: 258.025MB
2020-09-05 21:52:11.507 DEBUG 17008 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:52:11.507 DEBUG 17008 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:11.508 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:52:11.508 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243130618753024(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:52:11.503(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=market_purchase_good&comments=进货商品管理&className=MarketPurchaseGood&functionAuthor=zg&parentTableName=market_purchase&parentTableFkName=market_purchase_id&remarks=&columnList[0].id=1301694766997278720&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=编号&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1301694767022444544&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=status&columnList[1].comments=状态（0正常 1删除 2停用）&columnList[1].columnType=char(1)&columnList[1].attrType=String&columnList[1].fullAttrName=status&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&!columnList[1].isList=&!columnList[1].isQuery=&columnList[1].queryType=EQ&!columnList[1].isEdit=&!columnList[1].isRequired=&columnList[1].isRequired=1&columnList[1].showType=select&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=sys_search_status&columnList[1].optionMap['dictType']=sys_search_status&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1301694767047610368&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=create_by&columnList[2].comments=创建者&columnList[2].columnType=varchar(64)&columnList[2].attrType=String&columnList[2].fullAttrName=createBy&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&!columnList[2].isList=&!columnList[2].isQuery=&columnList[2].queryType=EQ&!columnList[2].isEdit=&!columnList[2].isRequired=&columnList[2].isRequired=1&columnList[2].showType=input&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1301694767081164800&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=create_date&columnList[3].comments=创建时间&columnList[3].columnType=datetime&columnList[3].attrType=java.util.Date&columnList[3].fullAttrName=createDate&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&!columnList[3].isRequired=&columnList[3].isRequired=1&columnList[3].showType=input&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1301694767102136320&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=update_by&columnList[4].comments=更新者&columnList[4].columnType=varchar(64)&columnList[4].attrType=String&columnList[4].fullAttrName=updateBy&!columnList[4].isPk=&!columnList[4].isInsert=&columnList[4].isInsert=1&!columnList[4].isUpdate=&columnList[4].isUpdate=1&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=EQ&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].isRequired=1&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1301694767127302144&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=update_date&columnList[5].comments=更新时间&columnList[5].columnType=datetime&columnList[5].attrType=java.util.Date&columnList[5].fullAttrName=updateDate&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&!columnList[5].isRequired=&columnList[5].isRequired=1&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1301694767148273664&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=remarks&columnList[6].comments=备注信息&columnList[6].columnType=varchar(500)&columnList[6].attrType=String&columnList[6].fullAttrName=remarks&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&columnList[6].isUpdate=1&!columnList[6].isList=&!columnList[6].isQuery=&columnList[6].queryType=LIKE&!columnList[6].isEdit=&columnList[6].isEdit=1&!columnList[6].isRequired=&columnList[6].showType=textarea&columnList[6].optionMap['gridRowCol']=12/2/10&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['isNewLine']=1&columnList[6].optionMap['dictName']=&columnList[6].optionMap['dictType']=&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1301694767169245184&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=good_name&columnList[7].comments=商品名称&columnList[7].columnType=varchar(200)&columnList[7].attrType=String&columnList[7].fullAttrName=goodName&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&columnList[7].isUpdate=1&!columnList[7].isList=&columnList[7].isList=1&!columnList[7].isQuery=&columnList[7].isQuery=1&columnList[7].queryType=LIKE&!columnList[7].isEdit=&columnList[7].isEdit=1&!columnList[7].isRequired=&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1301694767194411008&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=product_date&columnList[8].comments=生产日期&columnList[8].columnType=datetime&columnList[8].attrType=java.util.Date&columnList[8].fullAttrName=productDate&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&columnList[8].isUpdate=1&!columnList[8].isList=&columnList[8].isList=1&!columnList[8].isQuery=&columnList[8].queryType=EQ&!columnList[8].isEdit=&columnList[8].isEdit=1&!columnList[8].isRequired=&columnList[8].showType=datetime&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1301694767219576832&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=suggested_price&columnList[9].comments=建议价格&columnList[9].columnType=decimal(10,2)&columnList[9].attrType=Double&columnList[9].fullAttrName=suggestedPrice&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&columnList[9].isList=1&!columnList[9].isQuery=&columnList[9].queryType=EQ&!columnList[9].isEdit=&columnList[9].isEdit=1&!columnList[9].isRequired=&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[9].optionMap['fieldValid']=number&columnList[10].id=1301694767248936960&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=in_price&columnList[10].comments=进价&columnList[10].columnType=decimal(10,2)&columnList[10].attrType=Double&columnList[10].fullAttrName=inPrice&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&columnList[10].isList=1&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&columnList[10].isEdit=1&!columnList[10].isRequired=&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&columnList[10].optionMap['fieldValid']=number&columnList[11].id=1301694767269908480&columnList[11].status=&columnList[11].columnSort=120&columnList[11].columnName=good_num&columnList[11].comments=数量&columnList[11].columnType=int(11)&columnList[11].attrType=Long&columnList[11].fullAttrName=goodNum&!columnList[11].isPk=&!columnList[11].isInsert=&columnList[11].isInsert=1&!columnList[11].isUpdate=&columnList[11].isUpdate=1&!columnList[11].isList=&columnList[11].isList=1&!columnList[11].isQuery=&columnList[11].queryType=EQ&!columnList[11].isEdit=&columnList[11].isEdit=1&!columnList[11].isRequired=&columnList[11].showType=input&columnList[11].optionMap['gridRowCol']=6/4/8&!columnList[11].optionMap['isNewLine']=&columnList[11].optionMap['dictName']=&columnList[11].optionMap['dictType']=&!columnList[11].optionMap['fieldValid']=&columnList[11].optionMap['fieldValid']=digits&columnList[12].id=1301694767295074304&columnList[12].status=&columnList[12].columnSort=130&columnList[12].columnName=good_count&columnList[12].comments=小计&columnList[12].columnType=decimal(10,2)&columnList[12].attrType=Double&columnList[12].fullAttrName=goodCount&!columnList[12].isPk=&!columnList[12].isInsert=&columnList[12].isInsert=1&!columnList[12].isUpdate=&columnList[12].isUpdate=1&!columnList[12].isList=&columnList[12].isList=1&!columnList[12].isQuery=&columnList[12].queryType=EQ&!columnList[12].isEdit=&columnList[12].isEdit=1&!columnList[12].isRequired=&columnList[12].showType=input&columnList[12].optionMap['gridRowCol']=6/4/8&!columnList[12].optionMap['isNewLine']=&columnList[12].optionMap['dictName']=&columnList[12].optionMap['dictType']=&!columnList[12].optionMap['fieldValid']=&columnList[12].optionMap['fieldValid']=number&columnList[13].id=1301694767316045824&columnList[13].status=&columnList[13].columnSort=140&columnList[13].columnName=pay_date&columnList[13].comments=付款日期&columnList[13].columnType=datetime&columnList[13].attrType=java.util.Date&columnList[13].fullAttrName=payDate&!columnList[13].isPk=&!columnList[13].isInsert=&columnList[13].isInsert=1&!columnList[13].isUpdate=&columnList[13].isUpdate=1&!columnList[13].isList=&columnList[13].isList=1&!columnList[13].isQuery=&columnList[13].queryType=EQ&!columnList[13].isEdit=&columnList[13].isEdit=1&!columnList[13].isRequired=&columnList[13].showType=datetime&columnList[13].optionMap['gridRowCol']=6/4/8&!columnList[13].optionMap['isNewLine']=&columnList[13].optionMap['dictName']=&columnList[13].optionMap['dictType']=&!columnList[13].optionMap['fieldValid']=&columnList[14].id=1301694767341211648&columnList[14].status=&columnList[14].columnSort=150&columnList[14].columnName=cost_price&columnList[14].comments=成本价格&columnList[14].columnType=decimal(10,2)&columnList[14].attrType=Double&columnList[14].fullAttrName=costPrice&!columnList[14].isPk=&!columnList[14].isInsert=&columnList[14].isInsert=1&!columnList[14].isUpdate=&columnList[14].isUpdate=1&!columnList[14].isList=&columnList[14].isList=1&!columnList[14].isQuery=&columnList[14].queryType=EQ&!columnList[14].isEdit=&columnList[14].isEdit=1&!columnList[14].isRequired=&columnList[14].showType=input&columnList[14].optionMap['gridRowCol']=6/4/8&!columnList[14].optionMap['isNewLine']=&columnList[14].optionMap['dictName']=&columnList[14].optionMap['dictType']=&!columnList[14].optionMap['fieldValid']=&columnList[14].optionMap['fieldValid']=number&columnList[15].id=1301694767370571776&columnList[15].status=&columnList[15].columnSort=160&columnList[15].columnName=sale_price&columnList[15].comments=销售价格&columnList[15].columnType=decimal(10,2)&columnList[15].attrType=Double&columnList[15].fullAttrName=salePrice&!columnList[15].isPk=&!columnList[15].isInsert=&columnList[15].isInsert=1&!columnList[15].isUpdate=&columnList[15].isUpdate=1&!columnList[15].isList=&columnList[15].isList=1&!columnList[15].isQuery=&columnList[15].queryType=EQ&!columnList[15].isEdit=&columnList[15].isEdit=1&!columnList[15].isRequired=&columnList[15].showType=input&columnList[15].optionMap['gridRowCol']=6/4/8&!columnList[15].optionMap['isNewLine']=&columnList[15].optionMap['dictName']=&columnList[15].optionMap['dictType']=&!columnList[15].optionMap['fieldValid']=&columnList[15].optionMap['fieldValid']=number&columnList[16].id=1301694767395737600&columnList[16].status=&columnList[16].columnSort=170&columnList[16].columnName=membership_price&columnList[16].comments=会员价格&columnList[16].columnType=decimal(10,2)&columnList[16].attrType=Double&columnList[16].fullAttrName=membershipPrice&!columnList[16].isPk=&!columnList[16].isInsert=&columnList[16].isInsert=1&!columnList[16].isUpdate=&columnList[16].isUpdate=1&!columnList[16].isList=&columnList[16].isList=1&!columnList[16].isQuery=&columnList[16].queryType=EQ&!columnList[16].isEdit=&columnList[16].isEdit=1&!columnList[16].isRequired=&columnList[16].showType=input&columnList[16].optionMap['gridRowCol']=6/4/8&!columnList[16].optionMap['isNewLine']=&columnList[16].optionMap['dictName']=&columnList[16].optionMap['dictType']=&!columnList[16].optionMap['fieldValid']=&columnList[16].optionMap['fieldValid']=number&columnList[17].id=1301694767420903424&columnList[17].status=&columnList[17].columnSort=180&columnList[17].columnName=good_unit&columnList[17].comments=单位&columnList[17].columnType=char(1)&columnList[17].attrType=String&columnList[17].fullAttrName=goodUnit&!columnList[17].isPk=&!columnList[17].isInsert=&columnList[17].isInsert=1&!columnList[17].isUpdate=&columnList[17].isUpdate=1&!columnList[17].isList=&columnList[17].isList=1&!columnList[17].isQuery=&columnList[17].queryType=EQ&!columnList[17].isEdit=&columnList[17].isEdit=1&!columnList[17].isRequired=&columnList[17].showType=input&columnList[17].optionMap['gridRowCol']=6/4/8&!columnList[17].optionMap['isNewLine']=&columnList[17].optionMap['dictName']=&columnList[17].optionMap['dictType']=&!columnList[17].optionMap['fieldValid']=&columnList[18].id=1301694767446069248&columnList[18].status=&columnList[18].columnSort=190&columnList[18].columnName=market_purchase_id&columnList[18].comments=父表market_purchase主键&columnList[18].columnType=varchar(64)&columnList[18].attrType=String&columnList[18].fullAttrName=marketPurchaseId&!columnList[18].isPk=&!columnList[18].isInsert=&columnList[18].isInsert=1&!columnList[18].isUpdate=&columnList[18].isUpdate=1&!columnList[18].isList=&columnList[18].isList=1&!columnList[18].isQuery=&columnList[18].queryType=EQ&!columnList[18].isEdit=&columnList[18].isEdit=1&!columnList[18].isRequired=&columnList[18].showType=input&columnList[18].optionMap['gridRowCol']=6/4/8&!columnList[18].optionMap['isNewLine']=&columnList[18].optionMap['dictName']=&columnList[18].optionMap['dictType']=&!columnList[18].optionMap['fieldValid']=&columnList[19].id=&columnList[19].status=&columnList[19].columnSort=200&columnList[19].columnName=good_barcode&columnList[19].comments=商品条码&columnList[19].columnType=varchar(50)&columnList[19].attrType=String&columnList[19].fullAttrName=goodBarcode&!columnList[19].isPk=&!columnList[19].isInsert=&columnList[19].isInsert=1&!columnList[19].isUpdate=&columnList[19].isUpdate=1&!columnList[19].isList=&columnList[19].isList=1&!columnList[19].isQuery=&columnList[19].queryType=EQ&!columnList[19].isEdit=&columnList[19].isEdit=1&!columnList[19].isRequired=&columnList[19].showType=input&columnList[19].optionMap['gridRowCol']=6/4/8&!columnList[19].optionMap['isNewLine']=&columnList[19].optionMap['dictName']=&columnList[19].optionMap['dictType']=&!columnList[19].optionMap['fieldValid']=&genFlag=(String), market_purchase_good(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 188(Long)
2020-09-05 21:52:11.512 DEBUG 17008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:52:11.712 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:11.712  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 21:52:11.717 DEBUG 17008 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:52:11.718 DEBUG 17008 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:11.727 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE a.`parent_table_name` = ?
2020-09-05 21:52:11.727 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: market_purchase(String)
2020-09-05 21:52:11.729 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:52:11.730 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: market_purchase(String)
2020-09-05 21:52:11.734 DEBUG 17008 [nio-8980-exec-6] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2020-09-05 21:52:11.742 DEBUG 17008 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:11.741  用时: 29毫秒  URI: /js/a/gen/genTable/listData  总内存: 515MB  已用内存: 260.533MB
2020-09-05 21:52:11.748 DEBUG 17008 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:52:11.748 DEBUG 17008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:11.749 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:52:11.750 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243131621191680(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:52:11.742(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=market_purchase&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 29(Long)
2020-09-05 21:52:11.752 DEBUG 17008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:52:30.387 DEBUG 17008 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:30.387  URI: /js/a/gen/genTable/save  IP: 127.0.0.1
2020-09-05 21:52:30.390 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = #{tableName}
2020-09-05 21:52:30.390 DEBUG 17008 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:30.395 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`table_name` = ?
2020-09-05 21:52:30.395 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - ==> Parameters: market_purchase(String)
2020-09-05 21:52:30.397 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.get    ] - <==      Total: 1
2020-09-05 21:52:30.398 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:52:30.403 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:52:30.403 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase(String)
2020-09-05 21:52:30.407 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 17
2020-09-05 21:52:30.441 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 4毫秒: UPDATE `js_gen_table` SET `class_name` = #{className}, `comments` = #{comments}, `parent_table_name` = #{parentTableName}, `parent_table_fk_name` = #{parentTableFkName}, `data_source_name` = #{dataSourceName}, `tpl_category` = #{tplCategory}, `package_name` = #{packageName}, `module_name` = #{moduleName}, `sub_module_name` = #{subModuleName}, `function_name` = #{functionName}, `function_name_simple` = #{functionNameSimple}, `function_author` = #{functionAuthor}, `gen_base_dir` = #{genBaseDir}, `options` = #{options}, `update_by` = #{updateBy}, `update_date` = #{updateDate}, `remarks` = #{remarks} WHERE `table_name` = #{tableName}
2020-09-05 21:52:30.442 DEBUG 17008 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:30.442 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==>  Preparing: UPDATE `js_gen_table` SET `class_name` = ?, `comments` = ?, `parent_table_name` = ?, `parent_table_fk_name` = ?, `data_source_name` = ?, `tpl_category` = ?, `package_name` = ?, `module_name` = ?, `sub_module_name` = ?, `function_name` = ?, `function_name_simple` = ?, `function_author` = ?, `gen_base_dir` = ?, `options` = ?, `update_by` = ?, `update_date` = ?, `remarks` = ? WHERE `table_name` = ?
2020-09-05 21:52:30.443 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - ==> Parameters: MarketPurchase(String), 进货管理(String), (String), (String), (String), crud(String), com.jeesite.modules(String), market(String), (String), 进货管理(String), 进货管理(String), zg(String), D:\work\jeesite4-market(String), {"treeViewName":"","isHaveDelete":"0","treeViewCode":"","isFileUpload":"0","isHaveDisableEnable":"0","isImageUpload":"0"}(String), system(String), 2020-09-05 21:52:30.439(Timestamp), (String), market_purchase(String)
2020-09-05 21:52:30.445 DEBUG 17008 [nio-8980-exec-9] [c.j.modules.gen.dao.GenTableDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.446 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.447 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.447 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), id(String), 10(Integer), varchar(64)(String), 编号(String), 编号(String), id(String), String(String), 1(String), 0(String), 1(String), (String), (String), (String), EQ(String), 1(String), hidden(String), {"isNewLine":"","fieldValid":"abc","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335294013440(String)
2020-09-05 21:52:30.448 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.449 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.450 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.450 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), purchase_order_no(String), 20(Integer), varchar(50)(String), 订单编号(String), 订单编号(String), purchaseOrderNo(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335465979904(String)
2020-09-05 21:52:30.452 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.453 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.453 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.454 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), purchase_date(String), 30(Integer), datetime(String), 进货日期(String), 进货日期(String), purchaseDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), 1(String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335503728640(String)
2020-09-05 21:52:30.455 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.456 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.457 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.457 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), supplier_id(String), 40(Integer), varchar(64)(String), 供应商id(String), 供应商id(String), supplierId(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), 1(String), select(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335545671680(String)
2020-09-05 21:52:30.459 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.461 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.461 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.461 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), supplier_name(String), 50(Integer), varchar(200)(String), 供应商名称(String), 供应商名称(String), supplierName(String), String(String), (String), 1(String), (String), (String), (String), (String), LIKE(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335583420416(String)
2020-09-05 21:52:30.463 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.465 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 2毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.465 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.465 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), purchase_label(String), 60(Integer), varchar(10)(String), 标签(String), 标签(String), purchaseLabel(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335621169152(String)
2020-09-05 21:52:30.467 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.468 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.469 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.469 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), status(String), 70(Integer), char(1)(String), 状态(String), 状态（0正常 1删除 2停用）(String), status(String), String(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), select(String), {"isNewLine":"","fieldValid":"","dictName":"sys_search_status","gridRowCol":"6/4/8","dictType":"sys_search_status"}(String), 1301526335654723584(String)
2020-09-05 21:52:30.471 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.472 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.473 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.474 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), create_by(String), 80(Integer), varchar(64)(String), 创建者(String), 创建者(String), createBy(String), String(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335688278016(String)
2020-09-05 21:52:30.476 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.477 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.478 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.478 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), create_date(String), 90(Integer), datetime(String), 创建时间(String), 创建时间(String), createDate(String), java.util.Date(String), (String), 0(String), 1(String), (String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335772164096(String)
2020-09-05 21:52:30.480 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.481 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.482 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.483 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), update_by(String), 100(Integer), varchar(64)(String), 更新者(String), 更新者(String), updateBy(String), String(String), (String), 0(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335814107136(String)
2020-09-05 21:52:30.485 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.485 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.486 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.487 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), update_date(String), 110(Integer), datetime(String), 更新时间(String), 更新时间(String), updateDate(String), java.util.Date(String), (String), 0(String), 1(String), 1(String), (String), (String), EQ(String), (String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335847661568(String)
2020-09-05 21:52:30.489 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.490 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.490 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.491 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), remarks(String), 120(Integer), varchar(500)(String), 备注信息(String), 备注信息(String), remarks(String), String(String), (String), 1(String), 1(String), 1(String), (String), (String), LIKE(String), 1(String), textarea(String), {"isNewLine":"1","fieldValid":"","dictName":"","gridRowCol":"12/2/10","dictType":""}(String), 1301526335881216000(String)
2020-09-05 21:52:30.493 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.494 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.494 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.495 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), total_money(String), 130(Integer), decimal(10,2)(String), 进货总额(String), 进货总额(String), totalMoney(String), Double(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335914770432(String)
2020-09-05 21:52:30.497 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.498 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.499 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.500 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), pay_state(String), 140(Integer), char(1)(String), 付款状态(String), 付款状态(String), payState(String), String(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335948324864(String)
2020-09-05 21:52:30.503 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.503 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 0毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.504 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.505 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), pay_date(String), 150(Integer), datetime(String), 付款日期(String), 付款日期(String), payDate(String), java.util.Date(String), (String), 1(String), 1(String), 1(String), 1(String), (String), EQ(String), 1(String), datetime(String), {"isNewLine":"","fieldValid":"","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526335990267904(String)
2020-09-05 21:52:30.507 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.509 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.510 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.510 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), payable_money(String), 160(Integer), decimal(10,2)(String), 应付金额(String), 应付金额(String), payableMoney(String), Double(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526336028016640(String)
2020-09-05 21:52:30.512 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.513 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.UpdateSqlProvider   ] - 1毫秒: UPDATE `js_gen_table_column` SET `table_name` = #{genTable.tableName}, `column_name` = #{columnName}, `column_sort` = #{columnSort}, `column_type` = #{columnType}, `column_label` = #{columnLabel}, `comments` = #{comments}, `attr_name` = #{fullAttrName}, `attr_type` = #{attrType}, `is_pk` = #{isPk}, `is_null` = #{isNull}, `is_insert` = #{isInsert}, `is_update` = #{isUpdate}, `is_list` = #{isList}, `is_query` = #{isQuery}, `query_type` = #{queryType}, `is_edit` = #{isEdit}, `show_type` = #{showType}, `options` = #{options} WHERE `id` = #{id}
2020-09-05 21:52:30.514 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==>  Preparing: UPDATE `js_gen_table_column` SET `table_name` = ?, `column_name` = ?, `column_sort` = ?, `column_type` = ?, `column_label` = ?, `comments` = ?, `attr_name` = ?, `attr_type` = ?, `is_pk` = ?, `is_null` = ?, `is_insert` = ?, `is_update` = ?, `is_list` = ?, `is_query` = ?, `query_type` = ?, `is_edit` = ?, `show_type` = ?, `options` = ? WHERE `id` = ?
2020-09-05 21:52:30.514 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - ==> Parameters: market_purchase(String), paid_money(String), 170(Integer), decimal(10,2)(String), 实付金额(String), 实付金额(String), paidMoney(String), Double(String), (String), 1(String), 1(String), 1(String), (String), (String), EQ(String), 1(String), input(String), {"isNewLine":"","fieldValid":"number","dictName":"","gridRowCol":"6/4/8","dictType":""}(String), 1301526336065765376(String)
2020-09-05 21:52:30.516 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableColumnDao.update ] - <==    Updates: 1
2020-09-05 21:52:30.550 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = #{sqlMap.where#parent_table_name#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:52:30.550 DEBUG 17008 [nio-8980-exec-9] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:30.556 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_gen_table` a WHERE a.`parent_table_name` = ? ORDER BY a.update_date DESC
2020-09-05 21:52:30.557 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: market_purchase(String)
2020-09-05 21:52:30.559 DEBUG 17008 [nio-8980-exec-9] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 1
2020-09-05 21:52:30.561 DEBUG 17008 [nio-8980-exec-9] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = #{sqlMap.where#table_name#EQ1} ORDER BY a.column_sort
2020-09-05 21:52:30.566 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`table_name` AS "genTable.tableName", a.`column_name` AS "columnName", a.`column_sort` AS "columnSort", a.`column_type` AS "columnType", a.`column_label` AS "columnLabel", a.`comments` AS "comments", a.`attr_name` AS "fullAttrName", a.`attr_type` AS "attrType", a.`is_pk` AS "isPk", a.`is_null` AS "isNull", a.`is_insert` AS "isInsert", a.`is_update` AS "isUpdate", a.`is_list` AS "isList", a.`is_query` AS "isQuery", a.`query_type` AS "queryType", a.`is_edit` AS "isEdit", a.`show_type` AS "showType", a.`options` AS "options" FROM `js_gen_table_column` a WHERE a.`table_name` = ? ORDER BY a.column_sort
2020-09-05 21:52:30.567 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - ==> Parameters: market_purchase_good(String)
2020-09-05 21:52:30.572 DEBUG 17008 [nio-8980-exec-9] [c.j.m.g.dao.GenTableColumnDao.findList ] - <==      Total: 20
2020-09-05 21:52:30.581 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\resources\mappings\modules\market\MarketPurchaseGoodDao.xml
2020-09-05 21:52:30.583 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.market.dao.MarketPurchaseGoodDao">
	
	<!-- 查询数据
	<select id="findList" resultType="MarketPurchaseGood">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2020-09-05 21:52:30.585 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\resources\mappings\modules\market\MarketPurchaseGoodDao.xml
2020-09-05 21:52:30.586 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\entity\MarketPurchaseGood.java
2020-09-05 21:52:30.645 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.entity;

import org.hibernate.validator.constraints.Length;
import java.util.Date;
import com.jeesite.common.mybatis.annotation.JoinTable;
import com.jeesite.common.mybatis.annotation.JoinTable.Type;
import com.fasterxml.jackson.annotation.JsonFormat;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * 进货管理Entity
 * @author zg
 * @version 2020-09-05
 */
@Table(name="market_purchase_good", alias="a", columns={
		@Column(name="id", attrName="id", label="编号", isPK=true),
		@Column(includeEntity=DataEntity.class),
		@Column(name="good_name", attrName="goodName", label="商品名称", queryType=QueryType.LIKE),
		@Column(name="product_date", attrName="productDate", label="生产日期", isQuery=false),
		@Column(name="suggested_price", attrName="suggestedPrice", label="建议价格", isQuery=false),
		@Column(name="in_price", attrName="inPrice", label="进价", isQuery=false),
		@Column(name="good_num", attrName="goodNum", label="数量", isQuery=false),
		@Column(name="good_count", attrName="goodCount", label="小计", isQuery=false),
		@Column(name="pay_date", attrName="payDate", label="付款日期", isQuery=false),
		@Column(name="cost_price", attrName="costPrice", label="成本价格", isQuery=false),
		@Column(name="sale_price", attrName="salePrice", label="销售价格", isQuery=false),
		@Column(name="membership_price", attrName="membershipPrice", label="会员价格", isQuery=false),
		@Column(name="good_unit", attrName="goodUnit", label="单位", isQuery=false),
		@Column(name="market_purchase_id", attrName="marketPurchaseId.id", label="父表market_purchase主键", isQuery=false),
		@Column(name="good_barcode", attrName="goodBarcode", label="商品条码", isQuery=false),
	}, orderBy="a.create_date ASC"
)
public class MarketPurchaseGood extends DataEntity<MarketPurchaseGood> {
	
	private static final long serialVersionUID = 1L;
	private String goodName;		// 商品名称
	private Date productDate;		// 生产日期
	private Double suggestedPrice;		// 建议价格
	private Double inPrice;		// 进价
	private Long goodNum;		// 数量
	private Double goodCount;		// 小计
	private Date payDate;		// 付款日期
	private Double costPrice;		// 成本价格
	private Double salePrice;		// 销售价格
	private Double membershipPrice;		// 会员价格
	private String goodUnit;		// 单位
	private MarketPurchase marketPurchaseId;		// 父表market_purchase主键 父类
	private String goodBarcode;		// 商品条码
	
	public MarketPurchaseGood() {
		this(null);
	}


	public MarketPurchaseGood(MarketPurchase marketPurchaseId){
		this.marketPurchaseId = marketPurchaseId;
	}
	
	@Length(min=0, max=200, message="商品名称长度不能超过 200 个字符")
	public String getGoodName() {
		return goodName;
	}

	public void setGoodName(String goodName) {
		this.goodName = goodName;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	public Date getProductDate() {
		return productDate;
	}

	public void setProductDate(Date productDate) {
		this.productDate = productDate;
	}
	
	public Double getSuggestedPrice() {
		return suggestedPrice;
	}

	public void setSuggestedPrice(Double suggestedPrice) {
		this.suggestedPrice = suggestedPrice;
	}
	
	public Double getInPrice() {
		return inPrice;
	}

	public void setInPrice(Double inPrice) {
		this.inPrice = inPrice;
	}
	
	public Long getGoodNum() {
		return goodNum;
	}

	public void setGoodNum(Long goodNum) {
		this.goodNum = goodNum;
	}
	
	public Double getGoodCount() {
		return goodCount;
	}

	public void setGoodCount(Double goodCount) {
		this.goodCount = goodCount;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	public Date getPayDate() {
		return payDate;
	}

	public void setPayDate(Date payDate) {
		this.payDate = payDate;
	}
	
	public Double getCostPrice() {
		return costPrice;
	}

	public void setCostPrice(Double costPrice) {
		this.costPrice = costPrice;
	}
	
	public Double getSalePrice() {
		return salePrice;
	}

	public void setSalePrice(Double salePrice) {
		this.salePrice = salePrice;
	}
	
	public Double getMembershipPrice() {
		return membershipPrice;
	}

	public void setMembershipPrice(Double membershipPrice) {
		this.membershipPrice = membershipPrice;
	}
	
	@Length(min=0, max=1, message="单位长度不能超过 1 个字符")
	public String getGoodUnit() {
		return goodUnit;
	}

	public void setGoodUnit(String goodUnit) {
		this.goodUnit = goodUnit;
	}
	
	@Length(min=0, max=64, message="父表market_purchase主键长度不能超过 64 个字符")
	public MarketPurchase getMarketPurchaseId() {
		return marketPurchaseId;
	}

	public void setMarketPurchaseId(MarketPurchase marketPurchaseId) {
		this.marketPurchaseId = marketPurchaseId;
	}
	
	@Length(min=0, max=50, message="商品条码长度不能超过 50 个字符")
	public String getGoodBarcode() {
		return goodBarcode;
	}

	public void setGoodBarcode(String goodBarcode) {
		this.goodBarcode = goodBarcode;
	}
	
}
2020-09-05 21:52:30.647 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\entity\MarketPurchaseGood.java
2020-09-05 21:52:30.648 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\dao\MarketPurchaseGoodDao.java
2020-09-05 21:52:30.649 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.market.entity.MarketPurchaseGood;

/**
 * 进货管理DAO接口
 * @author zg
 * @version 2020-09-05
 */
@MyBatisDao
public interface MarketPurchaseGoodDao extends CrudDao<MarketPurchaseGood> {
	
}
2020-09-05 21:52:30.650 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\dao\MarketPurchaseGoodDao.java
2020-09-05 21:52:30.651 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\resources\mappings\modules\market\MarketPurchaseDao.xml
2020-09-05 21:52:30.651 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jeesite.modules.market.dao.MarketPurchaseDao">
	
	<!-- 查询数据
	<select id="findList" resultType="MarketPurchase">
		SELECT ${sqlMap.column.toSql()}
		FROM ${sqlMap.table.toSql()}
		<where>
			${sqlMap.where.toSql()}
		</where>
		ORDER BY ${sqlMap.order.toSql()}
	</select> -->
	
</mapper>
2020-09-05 21:52:30.653 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\resources\mappings\modules\market\MarketPurchaseDao.xml
2020-09-05 21:52:30.653 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\entity\MarketPurchase.java
2020-09-05 21:52:30.655 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.entity;

import org.hibernate.validator.constraints.Length;
import java.util.Date;
import com.jeesite.common.mybatis.annotation.JoinTable;
import com.jeesite.common.mybatis.annotation.JoinTable.Type;
import com.fasterxml.jackson.annotation.JsonFormat;
import java.util.List;
import com.jeesite.common.collect.ListUtils;

import com.jeesite.common.entity.DataEntity;
import com.jeesite.common.mybatis.annotation.Column;
import com.jeesite.common.mybatis.annotation.Table;
import com.jeesite.common.mybatis.mapper.query.QueryType;

/**
 * 进货管理Entity
 * @author zg
 * @version 2020-09-05
 */
@Table(name="market_purchase", alias="a", columns={
		@Column(name="id", attrName="id", label="编号", isPK=true),
		@Column(name="purchase_order_no", attrName="purchaseOrderNo", label="订单编号"),
		@Column(name="purchase_date", attrName="purchaseDate", label="进货日期"),
		@Column(name="supplier_id", attrName="supplierId", label="供应商id", isQuery=false),
		@Column(name="supplier_name", attrName="supplierName", label="供应商名称", isInsert=false, isUpdate=false, isQuery=false),
		@Column(name="purchase_label", attrName="purchaseLabel", label="标签", isQuery=false),
		@Column(includeEntity=DataEntity.class),
		@Column(name="total_money", attrName="totalMoney", label="进货总额", isQuery=false),
		@Column(name="pay_state", attrName="payState", label="付款状态", isQuery=false),
		@Column(name="pay_date", attrName="payDate", label="付款日期", isQuery=false),
		@Column(name="payable_money", attrName="payableMoney", label="应付金额", isQuery=false),
		@Column(name="paid_money", attrName="paidMoney", label="实付金额", isQuery=false),
	}, orderBy="a.update_date DESC"
)
public class MarketPurchase extends DataEntity<MarketPurchase> {
	
	private static final long serialVersionUID = 1L;
	private String purchaseOrderNo;		// 订单编号
	private Date purchaseDate;		// 进货日期
	private String supplierId;		// 供应商id
	private String supplierName;		// 供应商名称
	private String purchaseLabel;		// 标签
	private Double totalMoney;		// 进货总额
	private String payState;		// 付款状态
	private Date payDate;		// 付款日期
	private Double payableMoney;		// 应付金额
	private Double paidMoney;		// 实付金额
	private List<MarketPurchaseGood> marketPurchaseGoodList = ListUtils.newArrayList();		// 子表列表
	
	public MarketPurchase() {
		this(null);
	}

	public MarketPurchase(String id){
		super(id);
	}
	
	@Length(min=0, max=50, message="订单编号长度不能超过 50 个字符")
	public String getPurchaseOrderNo() {
		return purchaseOrderNo;
	}

	public void setPurchaseOrderNo(String purchaseOrderNo) {
		this.purchaseOrderNo = purchaseOrderNo;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	public Date getPurchaseDate() {
		return purchaseDate;
	}

	public void setPurchaseDate(Date purchaseDate) {
		this.purchaseDate = purchaseDate;
	}
	
	@Length(min=0, max=64, message="供应商id长度不能超过 64 个字符")
	public String getSupplierId() {
		return supplierId;
	}

	public void setSupplierId(String supplierId) {
		this.supplierId = supplierId;
	}
	
	@Length(min=0, max=200, message="供应商名称长度不能超过 200 个字符")
	public String getSupplierName() {
		return supplierName;
	}

	public void setSupplierName(String supplierName) {
		this.supplierName = supplierName;
	}
	
	@Length(min=0, max=10, message="标签长度不能超过 10 个字符")
	public String getPurchaseLabel() {
		return purchaseLabel;
	}

	public void setPurchaseLabel(String purchaseLabel) {
		this.purchaseLabel = purchaseLabel;
	}
	
	public Double getTotalMoney() {
		return totalMoney;
	}

	public void setTotalMoney(Double totalMoney) {
		this.totalMoney = totalMoney;
	}
	
	@Length(min=0, max=1, message="付款状态长度不能超过 1 个字符")
	public String getPayState() {
		return payState;
	}

	public void setPayState(String payState) {
		this.payState = payState;
	}
	
	@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
	public Date getPayDate() {
		return payDate;
	}

	public void setPayDate(Date payDate) {
		this.payDate = payDate;
	}
	
	public Double getPayableMoney() {
		return payableMoney;
	}

	public void setPayableMoney(Double payableMoney) {
		this.payableMoney = payableMoney;
	}
	
	public Double getPaidMoney() {
		return paidMoney;
	}

	public void setPaidMoney(Double paidMoney) {
		this.paidMoney = paidMoney;
	}
	
	public List<MarketPurchaseGood> getMarketPurchaseGoodList() {
		return marketPurchaseGoodList;
	}

	public void setMarketPurchaseGoodList(List<MarketPurchaseGood> marketPurchaseGoodList) {
		this.marketPurchaseGoodList = marketPurchaseGoodList;
	}
	
}
2020-09-05 21:52:30.658 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\entity\MarketPurchase.java
2020-09-05 21:52:30.658 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\dao\MarketPurchaseDao.java
2020-09-05 21:52:30.658 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.dao;

import com.jeesite.common.dao.CrudDao;
import com.jeesite.common.mybatis.annotation.MyBatisDao;
import com.jeesite.modules.market.entity.MarketPurchase;

/**
 * 进货管理DAO接口
 * @author zg
 * @version 2020-09-05
 */
@MyBatisDao
public interface MarketPurchaseDao extends CrudDao<MarketPurchase> {
	
}
2020-09-05 21:52:30.659 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\dao\MarketPurchaseDao.java
2020-09-05 21:52:30.660 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\service\MarketPurchaseService.java
2020-09-05 21:52:30.672 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.jeesite.common.entity.Page;
import com.jeesite.common.service.CrudService;
import com.jeesite.modules.market.entity.MarketPurchase;
import com.jeesite.modules.market.dao.MarketPurchaseDao;
import com.jeesite.modules.market.entity.MarketPurchaseGood;
import com.jeesite.modules.market.dao.MarketPurchaseGoodDao;

/**
 * 进货管理Service
 * @author zg
 * @version 2020-09-05
 */
@Service
@Transactional(readOnly=true)
public class MarketPurchaseService extends CrudService<MarketPurchaseDao, MarketPurchase> {
	
	@Autowired
	private MarketPurchaseGoodDao marketPurchaseGoodDao;
	
	/**
	 * 获取单条数据
	 * @param marketPurchase
	 * @return
	 */
	@Override
	public MarketPurchase get(MarketPurchase marketPurchase) {
		MarketPurchase entity = super.get(marketPurchase);
		if (entity != null){
			MarketPurchaseGood marketPurchaseGood = new MarketPurchaseGood(entity);
			marketPurchaseGood.setStatus(MarketPurchaseGood.STATUS_NORMAL);
			entity.setMarketPurchaseGoodList(marketPurchaseGoodDao.findList(marketPurchaseGood));
		}
		return entity;
	}
	
	/**
	 * 查询分页数据
	 * @param marketPurchase 查询条件
	 * @param marketPurchase.page 分页对象
	 * @return
	 */
	@Override
	public Page<MarketPurchase> findPage(MarketPurchase marketPurchase) {
		return super.findPage(marketPurchase);
	}
	
	/**
	 * 保存数据（插入或更新）
	 * @param marketPurchase
	 */
	@Override
	@Transactional(readOnly=false)
	public void save(MarketPurchase marketPurchase) {
		super.save(marketPurchase);
		// 保存 MarketPurchase子表
		for (MarketPurchaseGood marketPurchaseGood : marketPurchase.getMarketPurchaseGoodList()){
			if (!MarketPurchaseGood.STATUS_DELETE.equals(marketPurchaseGood.getStatus())){
				marketPurchaseGood.setMarketPurchaseId(marketPurchase);
				if (marketPurchaseGood.getIsNewRecord()){
					marketPurchaseGoodDao.insert(marketPurchaseGood);
				}else{
					marketPurchaseGoodDao.update(marketPurchaseGood);
				}
			}else{
				marketPurchaseGoodDao.delete(marketPurchaseGood);
			}
		}
	}
	
	/**
	 * 更新状态
	 * @param marketPurchase
	 */
	@Override
	@Transactional(readOnly=false)
	public void updateStatus(MarketPurchase marketPurchase) {
		super.updateStatus(marketPurchase);
	}
	
	/**
	 * 删除数据
	 * @param marketPurchase
	 */
	@Override
	@Transactional(readOnly=false)
	public void delete(MarketPurchase marketPurchase) {
		super.delete(marketPurchase);
		MarketPurchaseGood marketPurchaseGood = new MarketPurchaseGood();
		marketPurchaseGood.setMarketPurchaseId(marketPurchase);
		marketPurchaseGoodDao.deleteByEntity(marketPurchaseGood);
	}
	
}
2020-09-05 21:52:30.674 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\service\MarketPurchaseService.java
2020-09-05 21:52:30.675 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\web\MarketPurchaseController.java
2020-09-05 21:52:30.682 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
/**
 * Copyright (c) 2013-Now http://jeesite.com All rights reserved.
 */
package com.jeesite.modules.market.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.jeesite.common.config.Global;
import com.jeesite.common.entity.Page;
import com.jeesite.common.web.BaseController;
import com.jeesite.modules.market.entity.MarketPurchase;
import com.jeesite.modules.market.service.MarketPurchaseService;

/**
 * 进货管理Controller
 * @author zg
 * @version 2020-09-05
 */
@Controller
@RequestMapping(value = "${adminPath}/market/marketPurchase")
public class MarketPurchaseController extends BaseController {

	@Autowired
	private MarketPurchaseService marketPurchaseService;
	
	/**
	 * 获取数据
	 */
	@ModelAttribute
	public MarketPurchase get(String id, boolean isNewRecord) {
		return marketPurchaseService.get(id, isNewRecord);
	}
	
	/**
	 * 查询列表
	 */
	@RequiresPermissions("market:marketPurchase:view")
	@RequestMapping(value = {"list", ""})
	public String list(MarketPurchase marketPurchase, Model model) {
		model.addAttribute("marketPurchase", marketPurchase);
		return "modules/market/marketPurchaseList";
	}
	
	/**
	 * 查询列表数据
	 */
	@RequiresPermissions("market:marketPurchase:view")
	@RequestMapping(value = "listData")
	@ResponseBody
	public Page<MarketPurchase> listData(MarketPurchase marketPurchase, HttpServletRequest request, HttpServletResponse response) {
		marketPurchase.setPage(new Page<>(request, response));
		Page<MarketPurchase> page = marketPurchaseService.findPage(marketPurchase);
		return page;
	}

	/**
	 * 查看编辑表单
	 */
	@RequiresPermissions("market:marketPurchase:view")
	@RequestMapping(value = "form")
	public String form(MarketPurchase marketPurchase, Model model) {
		model.addAttribute("marketPurchase", marketPurchase);
		return "modules/market/marketPurchaseForm";
	}

	/**
	 * 保存数据
	 */
	@RequiresPermissions("market:marketPurchase:edit")
	@PostMapping(value = "save")
	@ResponseBody
	public String save(@Validated MarketPurchase marketPurchase) {
		marketPurchaseService.save(marketPurchase);
		return renderResult(Global.TRUE, text("保存进货管理成功！"));
	}
	
}
2020-09-05 21:52:30.684 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\java\com\jeesite\modules\market\web\MarketPurchaseController.java
2020-09-05 21:52:30.684 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\resources\views\modules\market\marketPurchaseList.html
2020-09-05 21:52:30.704 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: '进货管理管理', libs: ['dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header">
			<div class="box-title">
				<i class="fa icon-notebook"></i> ${text('进货管理管理')}
			</div>
			<div class="box-tools pull-right">
				<a href="#" class="btn btn-default" id="btnSearch" title="${text('查询')}"><i class="fa fa-filter"></i> ${text('查询')}</a>
				<% if(hasPermi('market:marketPurchase:edit')){ %>
					<a href="${ctx}/market/marketPurchase/form" class="btn btn-default btnTool" title="${text('新增进货管理')}"><i class="fa fa-plus"></i> ${text('新增')}</a>
				<% } %>
				<a href="#" class="btn btn-default" id="btnSetting" title="${text('设置')}"><i class="fa fa-navicon"></i></a>
			</div>
		</div>
		<div class="box-body">
			<#form:form id="searchForm" model="${marketPurchase}" action="${ctx}/market/marketPurchase/listData" method="post" class="form-inline hide"
					data-page-no="${parameter.pageNo}" data-page-size="${parameter.pageSize}" data-order-by="${parameter.orderBy}">
				<div class="form-group">
					<label class="control-label">${text('订单编号')}：</label>
					<div class="control-inline">
						<#form:input path="purchaseOrderNo" maxlength="50" class="form-control width-120"/>
					</div>
				</div>
				<div class="form-group">
					<label class="control-label">${text('进货日期')}：</label>
					<div class="control-inline">
						<#form:input path="purchaseDate" readonly="true" maxlength="20" class="form-control laydate width-datetime"
							dataFormat="datetime" data-type="datetime" data-format="yyyy-MM-dd HH:mm"/>
					</div>
				</div>
				<div class="form-group">
					<button type="submit" class="btn btn-primary btn-sm">${text('查询')}</button>
					<button type="reset" class="btn btn-default btn-sm">${text('重置')}</button>
				</div>
			</#form:form>
			<table id="dataGrid"></table>
			<div id="dataGridPage"></div>
		</div>
	</div>
</div>
<% } %>
<script>
// 初始化DataGrid对象
$('#dataGrid').dataGrid({
	searchForm: $("#searchForm"),
	columnModel: [
		{header:'${text("订单编号")}', name:'purchaseOrderNo', index:'a.purchase_order_no', width:150, align:"left", frozen:true, formatter: function(val, obj, row, act){
			return '<a href="${ctx}/market/marketPurchase/form?id='+row.id+'" class="btnList" data-title="${text("编辑进货管理")}">'+(val||row.id)+'</a>';
		}},
		{header:'${text("进货日期")}', name:'purchaseDate', index:'a.purchase_date', width:150, align:"center"},
		{header:'${text("进货总额")}', name:'totalMoney', index:'a.total_money', width:150, align:"right", formatter: function(val, obj, row, act){
			return js.formatNumber(val, 2, false, ''); // 数值类型格式化 (原始数值, 小数位数, 是否千分位, 默认值，金额情况下设置0.00);
		}},
		{header:'${text("付款状态")}', name:'payState', index:'a.pay_state', width:150, align:"left"},
		{header:'${text("付款日期")}', name:'payDate', index:'a.pay_date', width:150, align:"center"},
		{header:'${text("操作")}', name:'actions', width:120, sortable:false, title:false, formatter: function(val, obj, row, act){
			var actions = [];
			<% if(hasPermi('market:marketPurchase:edit')){ %>
				actions.push('<a href="${ctx}/market/marketPurchase/form?id='+row.id+'" class="btnList" title="${text("编辑进货管理")}"><i class="fa fa-pencil"></i></a>&nbsp;');
			<% } %>
			return actions.join('');
		}}
	],
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
2020-09-05 21:52:30.706 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\resources\views\modules\market\marketPurchaseList.html
2020-09-05 21:52:30.706 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - Generate File ==> 
D:\work\jeesite4-market\src\main\resources\views\modules\market\marketPurchaseForm.html
2020-09-05 21:52:30.735 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Content ==> 
<% layout('/layouts/default.html', {title: '进货管理管理', libs: ['validate','dataGrid']}){ %>
<div class="main-content">
	<div class="box box-main">
		<div class="box-header with-border">
			<div class="box-title">
				<i class="fa icon-note"></i> ${text(marketPurchase.isNewRecord ? '新增进货管理' : '编辑进货管理')}
			</div>
			<div class="box-tools pull-right">
				<button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i></button>
			</div>
		</div>
		<#form:form id="inputForm" model="${marketPurchase}" action="${ctx}/market/marketPurchase/save" method="post" class="form-horizontal">
			<div class="box-body">
				<div class="form-unit">${text('基本信息')}</div>
				<#form:hidden path="id"/>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('订单编号')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="purchaseOrderNo" maxlength="50" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('进货日期')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="purchaseDate" readonly="true" maxlength="20" class="form-control laydate"
									dataFormat="datetime" data-type="datetime" data-format="yyyy-MM-dd HH:mm"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('供应商id')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:select path="supplierId" dictType="" blankOption="true" class="form-control" />
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('标签')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="purchaseLabel" maxlength="10" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-12">
						<div class="form-group">
							<label class="control-label col-sm-2" title="">
								<span class="required hide">*</span> ${text('备注信息')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-10">
								<#form:textarea path="remarks" rows="4" maxlength="500" class="form-control"/>
							</div>
						</div>
					</div>
				</div>
				<div class="row">
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('进货总额')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="totalMoney" class="form-control number"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('付款状态')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="payState" maxlength="1" class="form-control"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('付款日期')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="payDate" readonly="true" maxlength="20" class="form-control laydate"
									dataFormat="datetime" data-type="datetime" data-format="yyyy-MM-dd HH:mm"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('应付金额')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="payableMoney" class="form-control number"/>
							</div>
						</div>
					</div>
					<div class="col-xs-6">
						<div class="form-group">
							<label class="control-label col-sm-4" title="">
								<span class="required hide">*</span> ${text('实付金额')}：<i class="fa icon-question hide"></i></label>
							<div class="col-sm-8">
								<#form:input path="paidMoney" class="form-control number"/>
							</div>
						</div>
					</div>
				</div>
				<h4 class="form-unit">${text('进货商品管理')}</h4>
				<div class="ml10 mr10">
					<table id="marketPurchaseGoodDataGrid"></table>
					<% if (hasPermi('market:marketPurchase:edit')){ %>
						<a href="#" id="marketPurchaseGoodDataGridAddRowBtn" class="btn btn-primary btn-sm mt10 mb10"><i class="fa fa-plus"></i> ${text('增行')}</a>
					<% } %>
				</div>
			</div>
			<div class="box-footer">
				<div class="row">
					<div class="col-sm-offset-2 col-sm-10">
						<% if (hasPermi('market:marketPurchase:edit')){ %>
							<button type="submit" class="btn btn-sm btn-primary" id="btnSubmit"><i class="fa fa-check"></i> ${text('保 存')}</button>&nbsp;
						<% } %>
						<button type="button" class="btn btn-sm btn-default" id="btnCancel" onclick="js.closeCurrentTabPage()"><i class="fa fa-reply-all"></i> ${text('关 闭')}</button>
					</div>
				</div>
			</div>
		</#form:form>
	</div>
</div>
<% } %>
<script>
//初始化进货商品管理DataGrid对象
$("#marketPurchaseGoodDataGrid").dataGrid({

	data: ${toJson(marketPurchase.marketPurchaseGoodList)},
	datatype: "local", // 设置本地数据
	autoGridHeight: function(){return 'auto'}, // 设置自动高度
	
	// 设置数据表格列
	columnModel: [
		{header:'状态', name:'status', editable:true, hidden:true},
		{header:'主键', name:'id', editable:true, hidden:true},
		{header:'${text("备注信息")}', name:'remarks', width:150, editable:true, edittype:'textarea', editoptions:{'maxlength':'500', 'class':'form-control', 'rows':'1'}},
		{header:'${text("商品名称")}', name:'goodName', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'200', 'class':'form-control'}},
		{header:'${text("生产日期")}', name:'productDate', width:150, 
			formatter:'date', formatoptions:{srcformat:'Y-m-d H:i:s',newformat:'Y-m-d H:i:s'},
			editable:true, edittype:'text', editoptions:{'class':'form-control laydate', 'readonly':'true',
				dataInit: function(element){
					laydate.render({elem:element, type:'datetime', format:'yyyy-MM-dd HH:mm'});
				}
			}
		},
		{header:'${text("建议价格")}', name:'suggestedPrice', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("进价")}', name:'inPrice', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("数量")}', name:'goodNum', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'11', 'class':'form-control digits'}},
		{header:'${text("小计")}', name:'goodCount', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("付款日期")}', name:'payDate', width:150, 
			formatter:'date', formatoptions:{srcformat:'Y-m-d H:i:s',newformat:'Y-m-d H:i:s'},
			editable:true, edittype:'text', editoptions:{'class':'form-control laydate', 'readonly':'true',
				dataInit: function(element){
					laydate.render({elem:element, type:'datetime', format:'yyyy-MM-dd HH:mm'});
				}
			}
		},
		{header:'${text("成本价格")}', name:'costPrice', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("销售价格")}', name:'salePrice', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("会员价格")}', name:'membershipPrice', width:150, editable:true, edittype:'text', editoptions:{'class':'form-control number'}},
		{header:'${text("单位")}', name:'goodUnit', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'1', 'class':'form-control'}},
		{header:'${text("父表market_purchase主键")}', name:'marketPurchaseId.id', editable:true, hidden:true},
		{header:'${text("商品条码")}', name:'goodBarcode', width:150, editable:true, edittype:'text', editoptions:{'maxlength':'50', 'class':'form-control'}},
		{header:'${text("操作")}', name:'actions', width:80, sortable:false, fixed:true, formatter: function(val, obj, row, act){
			var actions = [];
			if (val == 'new'){
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#marketPurchaseGoodDataGrid\').dataGrid(\'delRowData\',\''+obj.rowId+'\')});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}else{
				actions.push('<a href="#" onclick="js.confirm(\'${text("你确认要删除这条数据吗？")}\', function(){$(\'#marketPurchaseGoodDataGrid\').dataGrid(\'setRowData\',\''+obj.rowId+'\',null,{display:\'none\'});$(\'#'+obj.rowId+'_status\').val(\''+Global.STATUS_DELETE+'\');});return false;"><i class="fa fa-trash-o"></i></a>&nbsp;');
			}
			return actions.join('');
		}, editoptions: {defaultValue: 'new'}}
	],
	
	// 编辑表格参数
	editGrid: true,				// 是否是编辑表格
	editGridInitRowNum: 1,		// 编辑表格的初始化新增行数
	editGridAddRowBtn: $('#marketPurchaseGoodDataGridAddRowBtn'),	// 子表增行按钮
	editGridAddRowInitData: {id: '', status: Global.STATUS_NORMAL},	// 新增行的时候初始化的数据
	
	// 编辑表格的提交数据参数
	editGridInputFormListName: 'marketPurchaseGoodList', // 提交的数据列表名
	editGridInputFormListAttrs: 'status,id,createBy,createDate,updateBy,updateDate,remarks,goodName,productDate,suggestedPrice,inPrice,goodNum,goodCount,payDate,costPrice,salePrice,membershipPrice,goodUnit,marketPurchaseId.id,goodBarcode,', // 提交数据列表的属性字段
	
	// 加载成功后执行事件
	ajaxSuccess: function(data){
		
	}
});
</script>
<script>
$("#inputForm").validate({
	submitHandler: function(form){
		js.ajaxSubmitForm($(form), function(data){
			js.showMessage(data.message);
			if(data.result == Global.TRUE){
				js.closeCurrentTabPage(function(contentWindow){
					contentWindow.page();
				});
			}
		}, "json");
    }
});
</script>
2020-09-05 21:52:30.829 DEBUG 17008 [nio-8980-exec-9] [com.jeesite.modules.gen.utils.GenUtils ] - File Create ==> D:\work\jeesite4-market\src\main\resources\views\modules\market\marketPurchaseForm.html
2020-09-05 21:52:30.850 DEBUG 17008 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:30.835  用时: 448毫秒  URI: /js/a/gen/genTable/save  总内存: 515MB  已用内存: 304.051MB
2020-09-05 21:52:30.861 DEBUG 17008 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:52:30.862 DEBUG 17008 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:30.863 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:52:30.867 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243211761758208(String), update(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:52:30.849(Timestamp), /js/a/gen/genTable/save(String), POST(String), dataSourceName=&isNewRecord=false&tableName=market_purchase&comments=进货管理&className=MarketPurchase&functionAuthor=zg&parentTableName=&parentTableFkName=&remarks=&columnList[0].id=1301526335294013440&columnList[0].status=&columnList[0].columnSort=10&columnList[0].columnName=id&columnList[0].comments=编号&columnList[0].columnType=varchar(64)&columnList[0].attrType=String&columnList[0].fullAttrName=id&!columnList[0].isPk=&columnList[0].isPk=1&!columnList[0].isInsert=&columnList[0].isInsert=1&!columnList[0].isUpdate=&!columnList[0].isList=&!columnList[0].isQuery=&columnList[0].queryType=EQ&!columnList[0].isEdit=&columnList[0].isEdit=1&!columnList[0].isRequired=&columnList[0].isRequired=1&columnList[0].showType=hidden&columnList[0].optionMap['gridRowCol']=6/4/8&!columnList[0].optionMap['isNewLine']=&columnList[0].optionMap['dictName']=&columnList[0].optionMap['dictType']=&!columnList[0].optionMap['fieldValid']=&columnList[0].optionMap['fieldValid']=abc&columnList[1].id=1301526335465979904&columnList[1].status=&columnList[1].columnSort=20&columnList[1].columnName=purchase_order_no&columnList[1].comments=订单编号&columnList[1].columnType=varchar(50)&columnList[1].attrType=String&columnList[1].fullAttrName=purchaseOrderNo&!columnList[1].isPk=&!columnList[1].isInsert=&columnList[1].isInsert=1&!columnList[1].isUpdate=&columnList[1].isUpdate=1&!columnList[1].isList=&columnList[1].isList=1&!columnList[1].isQuery=&columnList[1].isQuery=1&columnList[1].queryType=EQ&!columnList[1].isEdit=&columnList[1].isEdit=1&!columnList[1].isRequired=&columnList[1].showType=input&columnList[1].optionMap['gridRowCol']=6/4/8&!columnList[1].optionMap['isNewLine']=&columnList[1].optionMap['dictName']=&columnList[1].optionMap['dictType']=&!columnList[1].optionMap['fieldValid']=&columnList[2].id=1301526335503728640&columnList[2].status=&columnList[2].columnSort=30&columnList[2].columnName=purchase_date&columnList[2].comments=进货日期&columnList[2].columnType=datetime&columnList[2].attrType=java.util.Date&columnList[2].fullAttrName=purchaseDate&!columnList[2].isPk=&!columnList[2].isInsert=&columnList[2].isInsert=1&!columnList[2].isUpdate=&columnList[2].isUpdate=1&!columnList[2].isList=&columnList[2].isList=1&!columnList[2].isQuery=&columnList[2].isQuery=1&columnList[2].queryType=EQ&!columnList[2].isEdit=&columnList[2].isEdit=1&!columnList[2].isRequired=&columnList[2].showType=datetime&columnList[2].optionMap['gridRowCol']=6/4/8&!columnList[2].optionMap['isNewLine']=&columnList[2].optionMap['dictName']=&columnList[2].optionMap['dictType']=&!columnList[2].optionMap['fieldValid']=&columnList[3].id=1301526335545671680&columnList[3].status=&columnList[3].columnSort=40&columnList[3].columnName=supplier_id&columnList[3].comments=供应商id&columnList[3].columnType=varchar(64)&columnList[3].attrType=String&columnList[3].fullAttrName=supplierId&!columnList[3].isPk=&!columnList[3].isInsert=&columnList[3].isInsert=1&!columnList[3].isUpdate=&columnList[3].isUpdate=1&!columnList[3].isList=&!columnList[3].isQuery=&columnList[3].queryType=EQ&!columnList[3].isEdit=&columnList[3].isEdit=1&!columnList[3].isRequired=&columnList[3].showType=select&columnList[3].optionMap['gridRowCol']=6/4/8&!columnList[3].optionMap['isNewLine']=&columnList[3].optionMap['dictName']=&columnList[3].optionMap['dictType']=&!columnList[3].optionMap['fieldValid']=&columnList[4].id=1301526335583420416&columnList[4].status=&columnList[4].columnSort=50&columnList[4].columnName=supplier_name&columnList[4].comments=供应商名称&columnList[4].columnType=varchar(200)&columnList[4].attrType=String&columnList[4].fullAttrName=supplierName&!columnList[4].isPk=&!columnList[4].isInsert=&!columnList[4].isUpdate=&!columnList[4].isList=&!columnList[4].isQuery=&columnList[4].queryType=LIKE&!columnList[4].isEdit=&!columnList[4].isRequired=&columnList[4].showType=input&columnList[4].optionMap['gridRowCol']=6/4/8&!columnList[4].optionMap['isNewLine']=&columnList[4].optionMap['dictName']=&columnList[4].optionMap['dictType']=&!columnList[4].optionMap['fieldValid']=&columnList[5].id=1301526335621169152&columnList[5].status=&columnList[5].columnSort=60&columnList[5].columnName=purchase_label&columnList[5].comments=标签&columnList[5].columnType=varchar(10)&columnList[5].attrType=String&columnList[5].fullAttrName=purchaseLabel&!columnList[5].isPk=&!columnList[5].isInsert=&columnList[5].isInsert=1&!columnList[5].isUpdate=&columnList[5].isUpdate=1&!columnList[5].isList=&!columnList[5].isQuery=&columnList[5].queryType=EQ&!columnList[5].isEdit=&columnList[5].isEdit=1&!columnList[5].isRequired=&columnList[5].showType=input&columnList[5].optionMap['gridRowCol']=6/4/8&!columnList[5].optionMap['isNewLine']=&columnList[5].optionMap['dictName']=&columnList[5].optionMap['dictType']=&!columnList[5].optionMap['fieldValid']=&columnList[6].id=1301526335654723584&columnList[6].status=&columnList[6].columnSort=70&columnList[6].columnName=status&columnList[6].comments=状态（0正常 1删除 2停用）&columnList[6].columnType=char(1)&columnList[6].attrType=String&columnList[6].fullAttrName=status&!columnList[6].isPk=&!columnList[6].isInsert=&columnList[6].isInsert=1&!columnList[6].isUpdate=&!columnList[6].isList=&!columnList[6].isQuery=&columnList[6].queryType=EQ&!columnList[6].isEdit=&!columnList[6].isRequired=&columnList[6].isRequired=1&columnList[6].showType=select&columnList[6].optionMap['gridRowCol']=6/4/8&!columnList[6].optionMap['isNewLine']=&columnList[6].optionMap['dictName']=sys_search_status&columnList[6].optionMap['dictType']=sys_search_status&!columnList[6].optionMap['fieldValid']=&columnList[7].id=1301526335688278016&columnList[7].status=&columnList[7].columnSort=80&columnList[7].columnName=create_by&columnList[7].comments=创建者&columnList[7].columnType=varchar(64)&columnList[7].attrType=String&columnList[7].fullAttrName=createBy&!columnList[7].isPk=&!columnList[7].isInsert=&columnList[7].isInsert=1&!columnList[7].isUpdate=&!columnList[7].isList=&!columnList[7].isQuery=&columnList[7].queryType=EQ&!columnList[7].isEdit=&!columnList[7].isRequired=&columnList[7].isRequired=1&columnList[7].showType=input&columnList[7].optionMap['gridRowCol']=6/4/8&!columnList[7].optionMap['isNewLine']=&columnList[7].optionMap['dictName']=&columnList[7].optionMap['dictType']=&!columnList[7].optionMap['fieldValid']=&columnList[8].id=1301526335772164096&columnList[8].status=&columnList[8].columnSort=90&columnList[8].columnName=create_date&columnList[8].comments=创建时间&columnList[8].columnType=datetime&columnList[8].attrType=java.util.Date&columnList[8].fullAttrName=createDate&!columnList[8].isPk=&!columnList[8].isInsert=&columnList[8].isInsert=1&!columnList[8].isUpdate=&!columnList[8].isList=&!columnList[8].isQuery=&columnList[8].queryType=EQ&!columnList[8].isEdit=&!columnList[8].isRequired=&columnList[8].isRequired=1&columnList[8].showType=input&columnList[8].optionMap['gridRowCol']=6/4/8&!columnList[8].optionMap['isNewLine']=&columnList[8].optionMap['dictName']=&columnList[8].optionMap['dictType']=&!columnList[8].optionMap['fieldValid']=&columnList[9].id=1301526335814107136&columnList[9].status=&columnList[9].columnSort=100&columnList[9].columnName=update_by&columnList[9].comments=更新者&columnList[9].columnType=varchar(64)&columnList[9].attrType=String&columnList[9].fullAttrName=updateBy&!columnList[9].isPk=&!columnList[9].isInsert=&columnList[9].isInsert=1&!columnList[9].isUpdate=&columnList[9].isUpdate=1&!columnList[9].isList=&!columnList[9].isQuery=&columnList[9].queryType=EQ&!columnList[9].isEdit=&!columnList[9].isRequired=&columnList[9].isRequired=1&columnList[9].showType=input&columnList[9].optionMap['gridRowCol']=6/4/8&!columnList[9].optionMap['isNewLine']=&columnList[9].optionMap['dictName']=&columnList[9].optionMap['dictType']=&!columnList[9].optionMap['fieldValid']=&columnList[10].id=1301526335847661568&columnList[10].status=&columnList[10].columnSort=110&columnList[10].columnName=update_date&columnList[10].comments=更新时间&columnList[10].columnType=datetime&columnList[10].attrType=java.util.Date&columnList[10].fullAttrName=updateDate&!columnList[10].isPk=&!columnList[10].isInsert=&columnList[10].isInsert=1&!columnList[10].isUpdate=&columnList[10].isUpdate=1&!columnList[10].isList=&!columnList[10].isQuery=&columnList[10].queryType=EQ&!columnList[10].isEdit=&!columnList[10].isRequired=&columnList[10].isRequired=1&columnList[10].showType=input&columnList[10].optionMap['gridRowCol']=6/4/8&!columnList[10].optionMap['isNewLine']=&columnList[10].optionMap['dictName']=&columnList[10].optionMap['dictType']=&!columnList[10].optionMap['fieldValid']=&columnList[11].id=1301526335881216000&columnList[11].status=&columnList[11].columnSort=120&columnList[11].columnName=remarks&columnList[11].comments=备注信息&columnList[11].columnType=varchar(500)&columnList[11].attrType=String&columnList[11].fullAttrName=remarks&!columnList[11].isPk=&!columnList[11].isInsert=&columnList[11].isInsert=1&!columnList[11].isUpdate=&columnList[11].isUpdate=1&!columnList[11].isList=&!columnList[11].isQuery=&columnList[11].queryType=LIKE&!columnList[11].isEdit=&columnList[11].isEdit=1&!columnList[11].isRequired=&columnList[11].showType=textarea&columnList[11].optionMap['gridRowCol']=12/2/10&!columnList[11].optionMap['isNewLine']=&columnList[11].optionMap['isNewLine']=1&columnList[11].optionMap['dictName']=&columnList[11].optionMap['dictType']=&!columnList[11].optionMap['fieldValid']=&columnList[12].id=1301526335914770432&columnList[12].status=&columnList[12].columnSort=130&columnList[12].columnName=total_money&columnList[12].comments=进货总额&columnList[12].columnType=decimal(10,2)&columnList[12].attrType=Double&columnList[12].fullAttrName=totalMoney&!columnList[12].isPk=&!columnList[12].isInsert=&columnList[12].isInsert=1&!columnList[12].isUpdate=&columnList[12].isUpdate=1&!columnList[12].isList=&columnList[12].isList=1&!columnList[12].isQuery=&columnList[12].queryType=EQ&!columnList[12].isEdit=&columnList[12].isEdit=1&!columnList[12].isRequired=&columnList[12].showType=input&columnList[12].optionMap['gridRowCol']=6/4/8&!columnList[12].optionMap['isNewLine']=&columnList[12].optionMap['dictName']=&columnList[12].optionMap['dictType']=&!columnList[12].optionMap['fieldValid']=&columnList[12].optionMap['fieldValid']=number&columnList[13].id=1301526335948324864&columnList[13].status=&columnList[13].columnSort=140&columnList[13].columnName=pay_state&columnList[13].comments=付款状态&columnList[13].columnType=char(1)&columnList[13].attrType=String&columnList[13].fullAttrName=payState&!columnList[13].isPk=&!columnList[13].isInsert=&columnList[13].isInsert=1&!columnList[13].isUpdate=&columnList[13].isUpdate=1&!columnList[13].isList=&columnList[13].isList=1&!columnList[13].isQuery=&columnList[13].queryType=EQ&!columnList[13].isEdit=&columnList[13].isEdit=1&!columnList[13].isRequired=&columnList[13].showType=input&columnList[13].optionMap['gridRowCol']=6/4/8&!columnList[13].optionMap['isNewLine']=&columnList[13].optionMap['dictName']=&columnList[13].optionMap['dictType']=&!columnList[13].optionMap['fieldValid']=&columnList[14].id=1301526335990267904&columnList[14].status=&columnList[14].columnSort=150&columnList[14].columnName=pay_date&columnList[14].comments=付款日期&columnList[14].columnType=datetime&columnList[14].attrType=java.util.Date&columnList[14].fullAttrName=payDate&!columnList[14].isPk=&!columnList[14].isInsert=&columnList[14].isInsert=1&!columnList[14].isUpdate=&columnList[14].isUpdate=1&!columnList[14].isList=&columnList[14].isList=1&!columnList[14].isQuery=&columnList[14].queryType=EQ&!columnList[14].isEdit=&columnList[14].isEdit=1&!columnList[14].isRequired=&columnList[14].showType=datetime&columnList[14].optionMap['gridRowCol']=6/4/8&!columnList[14].optionMap['isNewLine']=&columnList[14].optionMap['dictName']=&columnList[14].optionMap['dictType']=&!columnList[14].optionMap['fieldValid']=&columnList[15].id=1301526336028016640&columnList[15].status=&columnList[15].columnSort=160&columnList[15].columnName=payable_money&columnList[15].comments=应付金额&columnList[15].columnType=decimal(10,2)&columnList[15].attrType=Double&columnList[15].fullAttrName=payableMoney&!columnList[15].isPk=&!columnList[15].isInsert=&columnList[15].isInsert=1&!columnList[15].isUpdate=&columnList[15].isUpdate=1&!columnList[15].isList=&!columnList[15].isQuery=&columnList[15].queryType=EQ&!columnList[15].isEdit=&columnList[15].isEdit=1&!columnList[15].isRequired=&columnList[15].showType=input&columnList[15].optionMap['gridRowCol']=6/4/8&!columnList[15].optionMap['isNewLine']=&columnList[15].optionMap['dictName']=&columnList[15].optionMap['dictType']=&!columnList[15].optionMap['fieldValid']=&columnList[15].optionMap['fieldValid']=number&columnList[16].id=1301526336065765376&columnList[16].status=&columnList[16].columnSort=170&columnList[16].columnName=paid_money&columnList[16].comments=实付金额&columnList[16].columnType=decimal(10,2)&columnList[16].attrType=Double&columnList[16].fullAttrName=paidMoney&!columnList[16].isPk=&!columnList[16].isInsert=&columnList[16].isInsert=1&!columnList[16].isUpdate=&columnList[16].isUpdate=1&!columnList[16].isList=&!columnList[16].isQuery=&columnList[16].queryType=EQ&!columnList[16].isEdit=&columnList[16].isEdit=1&!columnList[16].isRequired=&columnList[16].showType=input&columnList[16].optionMap['gridRowCol']=6/4/8&!columnList[16].optionMap['isNewLine']=&columnList[16].optionMap['dictName']=&columnList[16].optionMap['dictType']=&!columnList[16].optionMap['fieldValid']=&columnList[16].optionMap['fieldValid']=number&tplCategory=crud&packageName=com.jeesite.modules&moduleName=market&subModuleName=&functionName=进货管理&functionNameSimple=进货管理&genBaseDir=D:\work\jeesite4-market&!optionMap['isHaveDisableEnable']=&optionMap['isHaveDisableEnable']=0&!optionMap['isHaveDelete']=&optionMap['isHaveDelete']=0&optionMap['treeViewCode']=&optionMap['treeViewName']=&!optionMap['isImageUpload']=&optionMap['isImageUpload']=0&!optionMap['isFileUpload']=&optionMap['isFileUpload']=0&genFlag=2&replaceFile=1&!replaceFile=0(String), market_purchase(String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 448(Long)
2020-09-05 21:52:30.876 DEBUG 17008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:52:30.883 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:52:30.883  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 21:52:30.937 DEBUG 17008 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2020-09-05 21:52:30.939 DEBUG 17008 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:30.972 DEBUG 17008 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2020-09-05 21:52:30.974 DEBUG 17008 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:52:30.983 DEBUG 17008 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:52:30.984 DEBUG 17008 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:52:30.995 DEBUG 17008 [io-8980-exec-10] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2020-09-05 21:52:31.024 DEBUG 17008 [io-8980-exec-10] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:52:31.020  用时: 137毫秒  URI: /js/a/gen/genTable/listData  总内存: 515MB  已用内存: 308.586MB
2020-09-05 21:52:31.043 DEBUG 17008 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:52:31.044 DEBUG 17008 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@6b6f73d] will be managed by Spring
2020-09-05 21:52:31.046 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:52:31.048 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243212491567104(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:52:31.024(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 137(Long)
2020-09-05 21:52:31.081 DEBUG 17008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:54:11.810 INFO  19008 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 19008 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 21:54:11.813 DEBUG 19008 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 21:54:11.814 INFO  19008 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 21:54:14.119 INFO  19008 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 21:54:14.120 INFO  19008 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 21:54:18.018 INFO  19008 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 21:54:18.018 INFO  19008 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 21:54:18.019 INFO  19008 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 21:54:18.682 DEBUG 19008 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 21:54:19.353 INFO  19008 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 21:54:20.447 INFO  19008 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 21:54:28.080 DEBUG 19008 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:30.880 DEBUG 19008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 21:54:30.902 DEBUG 19008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 21:54:31.059 DEBUG 19008 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 21:54:31.073 DEBUG 19008 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:54:31.085 DEBUG 19008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 21:54:31.088 DEBUG 19008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 21:54:31.103 DEBUG 19008 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 21:54:35.514 INFO  19008 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 21:54:35.520 INFO  19008 [           main] [com.jeesite.modules.Application        ] - Started Application in 24.767 seconds (JVM running for 26.829)
2020-09-05 21:54:41.955 DEBUG 19008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 21:54:41.959 DEBUG 19008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:41.968 DEBUG 19008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 21:54:41.970 DEBUG 19008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 21:54:41.984 DEBUG 19008 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 21:54:42.183 DEBUG 19008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 21:54:42.184 DEBUG 19008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:42.193 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 21:54:42.193 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 21:54:42.274 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 21:54:42.313 DEBUG 19008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 10毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:42.320 DEBUG 19008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:42.327 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:42.331 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 21:54:42.425 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 21:54:46.461 DEBUG 19008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:54:46.466 DEBUG 19008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:46.477 DEBUG 19008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 21:54:46.478 DEBUG 19008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 21:54:46.486 DEBUG 19008 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 21:54:46.564 DEBUG 19008 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:46.565 DEBUG 19008 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:46.572 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:46.575 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 21:54:46.582 DEBUG 19008 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 21:54:47.077 DEBUG 19008 [nio-8980-exec-7] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:47.078 DEBUG 19008 [nio-8980-exec-7] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:47.084 DEBUG 19008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:47.086 DEBUG 19008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298482562558640128,%(String)
2020-09-05 21:54:47.120 DEBUG 19008 [nio-8980-exec-7] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 67
2020-09-05 21:54:47.201 DEBUG 19008 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:47.199  URI: /js/a/gen/genTable/list  IP: 127.0.0.1
2020-09-05 21:54:47.232 INFO  19008 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/gen/genTableList <<<<<<<<< /js/a/gen/genTable/list >>>>>>>>> com.jeesite.modules.gen.web.GenTableController#list(GenTable, Model)
2020-09-05 21:54:47.411 DEBUG 19008 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:47.366  用时: 167毫秒  URI: /js/a/gen/genTable/list  总内存: 503MB  已用内存: 107.107MB
2020-09-05 21:54:47.416 DEBUG 19008 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:47.417 DEBUG 19008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:47.419 DEBUG 19008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:47.421 DEBUG 19008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 21:54:47.456 DEBUG 19008 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 21:54:47.476 DEBUG 19008 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:54:47.479 DEBUG 19008 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:47.480 DEBUG 19008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:54:47.489 DEBUG 19008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243784522039296(String), access(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:54:47.406(Timestamp), /js/a/gen/genTable/list(String), GET(String), (String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 167(Long)
2020-09-05 21:54:47.493 DEBUG 19008 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:54:48.151 DEBUG 19008 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:48.151  URI: /js/a/gen/genTable/listData  IP: 127.0.0.1
2020-09-05 21:54:48.218 DEBUG 19008 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = #{sqlMap.where.parent_table_name#EQ_FORCE3.val} ) ORDER BY a.update_date DESC
2020-09-05 21:54:48.219 DEBUG 19008 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:48.333 DEBUG 19008 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT count(0) FROM `js_gen_table` a WHERE (a.parent_table_name IS NULL OR a.parent_table_name = ?)
2020-09-05 21:54:48.334 DEBUG 19008 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:54:48.338 DEBUG 19008 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==>  Preparing: SELECT a.`table_name` AS "tableName", a.`class_name` AS "className", a.`comments` AS "comments", a.`parent_table_name` AS "parentTableName", a.`parent_table_fk_name` AS "parentTableFkName", a.`data_source_name` AS "dataSourceName", a.`tpl_category` AS "tplCategory", a.`package_name` AS "packageName", a.`module_name` AS "moduleName", a.`sub_module_name` AS "subModuleName", a.`function_name` AS "functionName", a.`function_name_simple` AS "functionNameSimple", a.`function_author` AS "functionAuthor", a.`gen_base_dir` AS "genBaseDir", a.`options` AS "options", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", (SELECT count(1) FROM `js_gen_table` WHERE parent_table_name=a.table_name) AS "childNum" FROM `js_gen_table` a WHERE ( a.parent_table_name IS NULL OR a.parent_table_name = ? ) ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:54:48.340 DEBUG 19008 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - ==> Parameters: (String)
2020-09-05 21:54:48.348 DEBUG 19008 [nio-8980-exec-2] [c.j.m.gen.dao.GenTableDao.findList     ] - <==      Total: 5
2020-09-05 21:54:48.451 DEBUG 19008 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:48.446  用时: 295毫秒  URI: /js/a/gen/genTable/listData  总内存: 503MB  已用内存: 134.576MB
2020-09-05 21:54:48.461 DEBUG 19008 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:54:48.462 DEBUG 19008 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:48.462 DEBUG 19008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:54:48.465 DEBUG 19008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243788905086976(String), select(String), 系统管理/研发工具/代码生成工具(String), system(String), 超级管理员(String), 2020-09-05 21:54:48.451(Timestamp), /js/a/gen/genTable/listData(String), POST(String), parentTableName_isNull=&tableName_like=&comments=&pageNo=&pageSize=&orderBy=(String), (String), GenTable(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 295(Long)
2020-09-05 21:54:48.468 DEBUG 19008 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:54:54.636 DEBUG 19008 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:54.637 DEBUG 19008 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:54.645 DEBUG 19008 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 21:54:54.646 DEBUG 19008 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 21:54:54.653 DEBUG 19008 [nio-8980-exec-4] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 21:54:55.557 DEBUG 19008 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:55.555  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 21:54:55.620 INFO  19008 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 21:54:55.670 DEBUG 19008 [nio-8980-exec-9] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:55.664  用时: 109毫秒  URI: /js/a/market/marketPurchase/list  总内存: 503MB  已用内存: 150.258MB
2020-09-05 21:54:55.678 DEBUG 19008 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 0毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:54:55.681 DEBUG 19008 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:55.683 DEBUG 19008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:54:55.687 DEBUG 19008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243819179573248(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 21:54:55.669(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 109(Long)
2020-09-05 21:54:55.690 DEBUG 19008 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:54:55.840 DEBUG 19008 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:55.839  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 21:54:55.881 DEBUG 19008 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 21:54:55.885 DEBUG 19008 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:55.899 DEBUG 19008 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` = ?
2020-09-05 21:54:55.902 DEBUG 19008 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 21:54:56.025 DEBUG 19008 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 21:54:56.027 DEBUG 19008 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 21:54:56.035 DEBUG 19008 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 21:54:56.087 DEBUG 19008 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:56.079  用时: 240毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 503MB  已用内存: 155.174MB
2020-09-05 21:54:56.104 DEBUG 19008 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:54:56.108 DEBUG 19008 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:56.111 DEBUG 19008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:54:56.120 DEBUG 19008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243820924403712(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 21:54:56.085(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 240(Long)
2020-09-05 21:54:56.142 DEBUG 19008 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 21:54:57.415 DEBUG 19008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 09:54:57.415  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 21:54:57.421 INFO  19008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model)
2020-09-05 21:54:57.524 DEBUG 19008 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 09:54:57.521  用时: 106毫秒  URI: /js/a/market/marketPurchase/form  总内存: 503MB  已用内存: 169.008MB
2020-09-05 21:54:57.534 DEBUG 19008 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 21:54:57.535 DEBUG 19008 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@3b80bb63] will be managed by Spring
2020-09-05 21:54:57.537 DEBUG 19008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 21:54:57.540 DEBUG 19008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302243826955812864(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 21:54:57.523(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 106(Long)
2020-09-05 21:54:57.545 DEBUG 19008 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:04:22.919 INFO  13096 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 13096 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 22:04:22.926 DEBUG 13096 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 22:04:22.926 INFO  13096 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 22:04:25.401 INFO  13096 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 22:04:25.401 INFO  13096 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 22:04:29.761 INFO  13096 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 22:04:29.761 INFO  13096 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 22:04:29.761 INFO  13096 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 22:04:30.515 DEBUG 13096 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 22:04:31.131 INFO  13096 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 22:04:32.247 INFO  13096 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 22:04:39.548 DEBUG 13096 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:04:42.270 DEBUG 13096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 22:04:42.295 DEBUG 13096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 22:04:42.328 DEBUG 13096 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 22:04:42.336 DEBUG 13096 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:04:42.342 DEBUG 13096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:04:42.344 DEBUG 13096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:04:42.515 DEBUG 13096 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 22:04:46.679 INFO  13096 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 22:04:46.685 INFO  13096 [           main] [com.jeesite.modules.Application        ] - Started Application in 24.809 seconds (JVM running for 26.948)
2020-09-05 22:04:56.807 DEBUG 13096 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 22:04:56.812 DEBUG 13096 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:04:56.820 DEBUG 13096 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 22:04:56.821 DEBUG 13096 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 22:04:57.022 DEBUG 13096 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 22:04:57.264 DEBUG 13096 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:04:57.265 DEBUG 13096 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:04:57.275 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:04:57.276 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 22:04:57.380 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 22:04:57.425 DEBUG 13096 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 11毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:04:57.434 DEBUG 13096 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:04:57.444 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:04:57.447 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 22:04:57.804 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:05:02.454 DEBUG 13096 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:05:02.459 DEBUG 13096 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:02.469 DEBUG 13096 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:05:02.471 DEBUG 13096 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 22:05:02.709 DEBUG 13096 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 22:05:02.846 DEBUG 13096 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:02.848 DEBUG 13096 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:02.860 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:02.862 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 22:05:02.937 DEBUG 13096 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:05:03.619 DEBUG 13096 [io-8980-exec-10] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:03.620 DEBUG 13096 [io-8980-exec-10] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:03.631 DEBUG 13096 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:03.635 DEBUG 13096 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 22:05:03.706 DEBUG 13096 [io-8980-exec-10] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:05:03.750 DEBUG 13096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:05:03.747  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 22:05:03.828 INFO  13096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 22:05:03.989 DEBUG 13096 [nio-8980-exec-7] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:05:03.957  用时: 210毫秒  URI: /js/a/market/marketPurchase/list  总内存: 501.5MB  已用内存: 95.204MB
2020-09-05 22:05:03.994 DEBUG 13096 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:03.995 DEBUG 13096 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:03.996 DEBUG 13096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:05:03.998 DEBUG 13096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 22:05:04.057 DEBUG 13096 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:05:04.086 DEBUG 13096 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:05:04.089 DEBUG 13096 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:04.090 DEBUG 13096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:05:04.100 DEBUG 13096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302246370637574144(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:05:03.984(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 210(Long)
2020-09-05 22:05:04.118 DEBUG 13096 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:05:05.466 DEBUG 13096 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:05:05.465  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 22:05:05.591 DEBUG 13096 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:05:05.597 DEBUG 13096 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:05.778 DEBUG 13096 [nio-8980-exec-4] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` = ?
2020-09-05 22:05:05.784 DEBUG 13096 [nio-8980-exec-4] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:05:05.919 DEBUG 13096 [nio-8980-exec-4] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 22:05:05.921 DEBUG 13096 [nio-8980-exec-4] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:05:05.928 DEBUG 13096 [nio-8980-exec-4] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 22:05:06.125 DEBUG 13096 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:05:06.115  用时: 650毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 501.5MB  已用内存: 118.767MB
2020-09-05 22:05:06.140 DEBUG 13096 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:05:06.142 DEBUG 13096 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:06.144 DEBUG 13096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:05:06.149 DEBUG 13096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302246379613384704(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:05:06.124(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 650(Long)
2020-09-05 22:05:06.155 DEBUG 13096 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:05:06.837 DEBUG 13096 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:05:06.837  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 22:05:06.883 DEBUG 13096 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:05:06.880  用时: 43毫秒  URI: /js/a/market/marketPurchase/form  总内存: 501.5MB  已用内存: 124.209MB
2020-09-05 22:05:06.892 DEBUG 13096 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:05:06.893 DEBUG 13096 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@1f1e15de] will be managed by Spring
2020-09-05 22:05:06.894 DEBUG 13096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:05:06.900 DEBUG 13096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302246382792667136(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:05:06.882(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 1(String), java.lang.NullPointerException
	at com.jeesite.common.service.QueryService.short(bh:20203)
	at com.jeesite.common.service.QueryService.findPage(bh:11040)
	at com.jeesite.modules.market.service.MarketSupplierService.findPage(MarketSupplierService.java:43)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$1f0e5c0.findPage(<generated>)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$36765660.findPage(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController.form(MarketPurchaseController.java:80)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$51c16fd9.form(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$a8a1072f.form(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.K.short(me:48)
	at com.jeesite.common.shiro.web.K.doFilterInternal(me:115)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
(String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 43(Long)
2020-09-05 22:05:06.903 ERROR 13096 [nio-8980-exec-1] [o.a.c.c.C.[.[.[/js].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [/js] threw exception [Request processing failed; nested exception is java.lang.NullPointerException] with root cause

java.lang.NullPointerException: null
	at com.jeesite.common.service.QueryService.short(bh:20203)
	at com.jeesite.common.service.QueryService.findPage(bh:11040)
	at com.jeesite.modules.market.service.MarketSupplierService.findPage(MarketSupplierService.java:43)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$1f0e5c0.findPage(<generated>)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$36765660.findPage(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController.form(MarketPurchaseController.java:80)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$51c16fd9.form(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$a8a1072f.form(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.K.short(me:48)
	at com.jeesite.common.shiro.web.K.doFilterInternal(me:115)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-09-05 22:05:06.904 DEBUG 13096 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:05:06.994 ERROR 13096 [nio-8980-exec-1] [error/500                              ] - 

java.lang.NullPointerException: null
	at com.jeesite.common.service.QueryService.short(bh:20203)
	at com.jeesite.common.service.QueryService.findPage(bh:11040)
	at com.jeesite.modules.market.service.MarketSupplierService.findPage(MarketSupplierService.java:43)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$1f0e5c0.findPage(<generated>)
	at com.jeesite.modules.market.service.MarketSupplierService$$FastClassBySpringCGLIB$$1a7310f3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:367)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:118)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.service.MarketSupplierService$$EnhancerBySpringCGLIB$$36765660.findPage(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController.form(MarketPurchaseController.java:80)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$51c16fd9.form(<generated>)
	at com.jeesite.modules.market.web.MarketPurchaseController$$FastClassBySpringCGLIB$$7fa85a54.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:771)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:749)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:691)
	at com.jeesite.modules.market.web.MarketPurchaseController$$EnhancerBySpringCGLIB$$a8a1072f.form(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:124)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:450)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:387)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at com.jeesite.common.shiro.web.K.short(me:48)
	at com.jeesite.common.shiro.web.K.doFilterInternal(me:115)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)

2020-09-05 22:05:37.634 INFO  15000 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 15000 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 22:05:37.638 DEBUG 15000 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 22:05:37.638 INFO  15000 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 22:05:40.420 INFO  15000 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 22:05:40.421 INFO  15000 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 22:05:44.991 INFO  15000 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 22:05:44.991 INFO  15000 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 22:05:44.992 INFO  15000 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 22:05:46.046 DEBUG 15000 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 22:05:46.935 INFO  15000 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 22:05:48.466 INFO  15000 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 22:05:56.386 DEBUG 15000 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@4c6fabba] will be managed by Spring
2020-09-05 22:05:59.233 DEBUG 15000 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 22:05:59.266 DEBUG 15000 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 22:05:59.301 DEBUG 15000 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 22:05:59.310 DEBUG 15000 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:05:59.316 DEBUG 15000 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:05:59.318 DEBUG 15000 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:05:59.327 DEBUG 15000 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 22:06:02.625 INFO  15000 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 22:06:02.630 INFO  15000 [           main] [com.jeesite.modules.Application        ] - Started Application in 26.074 seconds (JVM running for 28.144)
2020-09-05 22:09:11.434 INFO  16860 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 16860 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 22:09:11.437 DEBUG 16860 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 22:09:11.438 INFO  16860 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 22:09:13.996 INFO  16860 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 22:09:13.998 INFO  16860 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 22:09:18.059 INFO  16860 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 22:09:18.060 INFO  16860 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 22:09:18.060 INFO  16860 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 22:09:18.561 DEBUG 16860 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 22:09:19.342 INFO  16860 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 22:09:20.712 INFO  16860 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 22:09:30.754 DEBUG 16860 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@463a1f47] will be managed by Spring
2020-09-05 22:09:33.318 DEBUG 16860 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 22:09:33.350 DEBUG 16860 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 22:09:33.381 DEBUG 16860 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 22:09:33.388 DEBUG 16860 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:09:33.393 DEBUG 16860 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:09:33.395 DEBUG 16860 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:09:33.403 DEBUG 16860 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 22:09:36.909 INFO  16860 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 22:09:36.917 INFO  16860 [           main] [com.jeesite.modules.Application        ] - Started Application in 26.536 seconds (JVM running for 28.545)
2020-09-05 22:12:47.187 INFO  7780 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 7780 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 22:12:47.192 DEBUG 7780 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 22:12:47.193 INFO  7780 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 22:12:49.863 INFO  7780 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 22:12:49.865 INFO  7780 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 22:12:53.746 INFO  7780 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 22:12:53.746 INFO  7780 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 22:12:53.747 INFO  7780 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 22:12:54.504 DEBUG 7780 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 22:12:55.232 INFO  7780 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 22:12:56.703 INFO  7780 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 22:13:07.296 DEBUG 7780 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:10.548 DEBUG 7780 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 22:13:10.594 DEBUG 7780 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 22:13:10.741 DEBUG 7780 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 22:13:10.756 DEBUG 7780 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 8毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:13:10.767 DEBUG 7780 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:13:10.771 DEBUG 7780 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:13:10.789 DEBUG 7780 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 22:13:14.861 INFO  7780 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 22:13:14.866 INFO  7780 [           main] [com.jeesite.modules.Application        ] - Started Application in 28.74 seconds (JVM running for 30.724)
2020-09-05 22:13:15.264 DEBUG 7780 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 22:13:15.269 DEBUG 7780 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:15.273 DEBUG 7780 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 22:13:15.275 DEBUG 7780 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 22:13:15.284 DEBUG 7780 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 22:13:15.472 DEBUG 7780 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:13:15.473 DEBUG 7780 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:15.480 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:13:15.481 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 22:13:15.599 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 22:13:15.623 DEBUG 7780 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 7毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:15.626 DEBUG 7780 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:15.630 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:15.632 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 22:13:15.900 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:13:19.814 DEBUG 7780 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:13:19.818 DEBUG 7780 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:19.826 DEBUG 7780 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:13:19.830 DEBUG 7780 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 22:13:19.836 DEBUG 7780 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 22:13:19.952 DEBUG 7780 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:19.954 DEBUG 7780 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:19.967 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:19.969 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 22:13:19.980 DEBUG 7780 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:13:20.492 DEBUG 7780 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:20.493 DEBUG 7780 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:20.500 DEBUG 7780 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:20.502 DEBUG 7780 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 22:13:20.512 DEBUG 7780 [nio-8980-exec-3] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:13:20.559 DEBUG 7780 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:13:20.556  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 22:13:20.619 INFO  7780 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 22:13:20.715 DEBUG 7780 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:13:20.689  用时: 133毫秒  URI: /js/a/market/marketPurchase/list  总内存: 479.5MB  已用内存: 158.899MB
2020-09-05 22:13:20.718 DEBUG 7780 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:20.718 DEBUG 7780 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:20.719 DEBUG 7780 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:13:20.721 DEBUG 7780 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 22:13:20.760 DEBUG 7780 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:13:20.780 DEBUG 7780 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:13:20.783 DEBUG 7780 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:20.784 DEBUG 7780 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:13:20.792 DEBUG 7780 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302248454065774592(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:13:20.712(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 133(Long)
2020-09-05 22:13:20.795 DEBUG 7780 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:13:21.528 DEBUG 7780 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:13:21.528  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 22:13:21.577 DEBUG 7780 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:13:21.579 DEBUG 7780 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:21.663 DEBUG 7780 [nio-8980-exec-6] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` = ?
2020-09-05 22:13:21.664 DEBUG 7780 [nio-8980-exec-6] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:13:21.776 DEBUG 7780 [nio-8980-exec-6] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 22:13:21.778 DEBUG 7780 [nio-8980-exec-6] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:13:21.786 DEBUG 7780 [nio-8980-exec-6] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 22:13:21.933 DEBUG 7780 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:13:21.922  用时: 394毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 479.5MB  已用内存: 180.410MB
2020-09-05 22:13:21.950 DEBUG 7780 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:13:21.951 DEBUG 7780 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:21.953 DEBUG 7780 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:13:21.960 DEBUG 7780 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302248459182825472(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:13:21.932(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 394(Long)
2020-09-05 22:13:21.966 DEBUG 7780 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:13:23.142 DEBUG 7780 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:13:23.142  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 22:13:23.164 DEBUG 7780 [nio-8980-exec-3] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:13:23.167 DEBUG 7780 [nio-8980-exec-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:23.184 DEBUG 7780 [nio-8980-exec-3] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:13:23.185 DEBUG 7780 [nio-8980-exec-3] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:13:23.206 DEBUG 7780 [nio-8980-exec-3] [c.j.m.m.dao.MarketSupplierDao.findList ] - <==      Total: 1
2020-09-05 22:13:23.222 INFO  7780 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model, HttpServletRequest, HttpServletResponse)
2020-09-05 22:13:23.510 DEBUG 7780 [nio-8980-exec-3] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:13:23.503  用时: 361毫秒  URI: /js/a/market/marketPurchase/form  总内存: 479.5MB  已用内存: 199.882MB
2020-09-05 22:13:23.564 DEBUG 7780 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:13:23.566 DEBUG 7780 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@78c23ade] will be managed by Spring
2020-09-05 22:13:23.568 DEBUG 7780 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:13:23.572 DEBUG 7780 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302248465797242880(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:13:23.509(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 361(Long)
2020-09-05 22:13:23.577 DEBUG 7780 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:15:02.148 INFO  16904 [           main] [com.jeesite.modules.Application        ] - Starting Application on LAPTOP-4IS710D3 with PID 16904 (D:\work\jeesite4-market\src\main\webapp\WEB-INF\classes started by 86136 in D:\work\jeesite4-market)
2020-09-05 22:15:02.151 DEBUG 16904 [           main] [com.jeesite.modules.Application        ] - Running with Spring Boot v2.2.9.RELEASE, Spring v5.2.8.RELEASE
2020-09-05 22:15:02.152 INFO  16904 [           main] [com.jeesite.modules.Application        ] - The following profiles are active: default
2020-09-05 22:15:04.853 INFO  16904 [           main] [com.jeesite.common.config.Global       ] - Config files: [classpath:config/jeesite-core.yml, classpath:config/application.yml]
2020-09-05 22:15:04.854 INFO  16904 [           main] [com.jeesite.common.config.Global       ] - Spring cache cluster mode: false, session manager name: J1CacheSession
2020-09-05 22:15:09.140 INFO  16904 [           main] [com.jeesite.common.config.Global       ] - user.home: C:/Users/86136
2020-09-05 22:15:09.141 INFO  16904 [           main] [com.jeesite.common.config.Global       ] - user.dir: D:/work/jeesite4-market
2020-09-05 22:15:09.141 INFO  16904 [           main] [com.jeesite.common.config.Global       ] - logPath: D:/work/jeesite4-market/src/main/webapp/WEB-INF/classes

   _____        ___  _   _           ___
  |_   _|      / __'(_)_| |_        /   |
  _ | | __  __ \___ | |_   _| __   / /| |
 ( .| |/__\/__\ ___)| | | |_ /__\ / /_| |_
  \___|\__.\__.|____|_| \___)\__.(____   _|  :: JeeSite V4.2.1 :: 
======================================|_|==========================

    欢迎使用 JeeSite Demo V4.2

    您当前的版本为JeeSite社区版，官方网站：http://jeesite.com

    授权机器码是：8bbfd4b1b84408b28d4ec05b61909721
    授权产品名称：JeeSite Demo
    授权公司名称：ThinkGem

===================================================================

2020-09-05 22:15:09.747 DEBUG 16904 [-mapper-refresh] [c.j.common.datasource.RoutingDataSource] - Set default data source success.
2020-09-05 22:15:10.381 INFO  16904 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 8980 (http)
2020-09-05 22:15:11.511 INFO  16904 [-mapper-refresh] [c.jeesite.common.mybatis.MapperRefresh ] - Mybatis mapper refresh, start in 60 seconds.
2020-09-05 22:15:18.699 DEBUG 16904 [           main] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:21.285 DEBUG 16904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==>  Preparing: SELECT t.TABLE_NAME AS "tableName", t.TABLE_COMMENT AS "comments" FROM information_schema.TABLES t WHERE t.TABLE_SCHEMA = (select database()) UNION ALL SELECT t.TABLE_NAME AS "tableName", t.VIEW_DEFINITION AS "comments" FROM information_schema.VIEWS t WHERE t.TABLE_SCHEMA = (select database()) ORDER BY "tableName"
2020-09-05 22:15:21.329 DEBUG 16904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - ==> Parameters: 
2020-09-05 22:15:21.364 DEBUG 16904 [           main] [c.j.m.g.d.GenDataDictDao.findTableList ] - <==      Total: 50
2020-09-05 22:15:21.373 DEBUG 16904 [           main] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:15:21.378 DEBUG 16904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`module_code` AS "moduleCode", a.`module_name` AS "moduleName", a.`description` AS "description", a.`main_class_name` AS "mainClassName", a.`current_version` AS "currentVersion", a.`upgrade_info` AS "upgradeInfo" FROM `js_sys_module` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:15:21.380 DEBUG 16904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:15:21.388 DEBUG 16904 [           main] [c.j.modules.sys.dao.ModuleDao.findList ] - <==      Total: 8
2020-09-05 22:15:24.888 INFO  16904 [           main] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 8980 (http) with context path '/js'
2020-09-05 22:15:24.892 INFO  16904 [           main] [com.jeesite.modules.Application        ] - Started Application in 23.75 seconds (JVM running for 26.138)
2020-09-05 22:15:33.378 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = #{userCode}
2020-09-05 22:15:33.386 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:33.403 DEBUG 16904 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`user_code` AS "userCode", a.`login_code` AS "loginCode", a.`user_name` AS "userName", a.`password` AS "password", a.`email` AS "email", a.`mobile` AS "mobile", a.`phone` AS "phone", a.`sex` AS "sex", a.`avatar` AS "avatar", a.`sign` AS "sign", a.`wx_openid` AS "wxOpenid", a.`mobile_imei` AS "mobileImei", a.`user_type` AS "userType", a.`ref_code` AS "refCode", a.`ref_name` AS "refName", a.`mgr_type` AS "mgrType", a.`pwd_security_level` AS "pwdSecurityLevel", a.`pwd_update_date` AS "pwdUpdateDate", a.`pwd_update_record` AS "pwdUpdateRecord", a.`pwd_question` AS "pwdQuestion", a.`pwd_question_answer` AS "pwdQuestionAnswer", a.`pwd_question_2` AS "pwdQuestion2", a.`pwd_question_answer_2` AS "pwdQuestionAnswer2", a.`pwd_question_3` AS "pwdQuestion3", a.`pwd_question_answer_3` AS "pwdQuestionAnswer3", a.`pwd_quest_update_date` AS "pwdQuestUpdateDate", a.`last_login_ip` AS "lastLoginIp", a.`last_login_date` AS "lastLoginDate", a.`freeze_date` AS "freezeDate", a.`freeze_cause` AS "freezeCause", a.`user_weight` AS "userWeight", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_user` a WHERE a.`user_code` = ?
2020-09-05 22:15:33.407 DEBUG 16904 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - ==> Parameters: system(String)
2020-09-05 22:15:33.435 DEBUG 16904 [nio-8980-exec-1] [com.jeesite.modules.sys.dao.UserDao.get] - <==      Total: 1
2020-09-05 22:15:33.823 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:15:33.825 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:33.843 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`config_name` AS "configName", a.`config_key` AS "configKey", a.`config_value` AS "configValue", a.`is_sys` AS "isSys", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `js_sys_config` a ORDER BY a.config_key
2020-09-05 22:15:33.845 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - ==> Parameters: 
2020-09-05 22:15:33.900 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.ConfigDao.findList ] - <==      Total: 18
2020-09-05 22:15:33.972 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 20毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:33.984 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:33.997 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:34.003 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer)
2020-09-05 22:15:34.175 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:15:38.684 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:15:38.689 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:38.698 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:15:38.700 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_menu_sys_code(String), 1(String), 0(String)
2020-09-05 22:15:38.708 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 22:15:38.784 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`parent_code` = #{sqlMap.where#parent_code#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:38.785 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:38.793 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`parent_code` = ? AND a.`sys_code` = ? AND a.weight >= ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:38.795 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), 0(String), default(String), 40(Integer)
2020-09-05 22:15:38.801 DEBUG 16904 [nio-8980-exec-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:15:39.290 DEBUG 16904 [nio-8980-exec-5] [c.j.c.m.m.provider.SelectSqlProvider   ] - 4毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`sys_code` = #{sqlMap.where#sys_code#EQ1} AND a.weight >= #{sqlMap.where.weight#GTE1.val} AND a.parent_codes LIKE #{sqlMap.where.parent_codes#RIGHT_LIKE1.val} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:39.291 DEBUG 16904 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:39.301 DEBUG 16904 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? AND a.`sys_code` = ? AND a.weight >= ? AND a.parent_codes LIKE ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:39.302 DEBUG 16904 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String), default(String), 40(Integer), 0,1298541730076454912,%(String)
2020-09-05 22:15:39.310 DEBUG 16904 [nio-8980-exec-5] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 3
2020-09-05 22:15:39.375 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:15:39.371  URI: /js/a/market/marketPurchase/list  IP: 127.0.0.1
2020-09-05 22:15:39.425 INFO  16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseList <<<<<<<<< /js/a/market/marketPurchase/list >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#list(MarketPurchase, Model)
2020-09-05 22:15:39.551 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:15:39.518  用时: 147毫秒  URI: /js/a/market/marketPurchase/list  总内存: 505MB  已用内存: 108.149MB
2020-09-05 22:15:39.555 DEBUG 16904 [  log-save-10-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:39.556 DEBUG 16904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:39.558 DEBUG 16904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==>  Preparing: SELECT a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`menu_code` AS "menuCode", a.`menu_name` AS "menuNameOrig", a.`menu_type` AS "menuType", a.`menu_href` AS "menuHref", a.`menu_target` AS "menuTarget", a.`menu_icon` AS "menuIcon", a.`menu_color` AS "menuColor", a.`menu_title` AS "menuTitle", a.`permission` AS "permission", a.`weight` AS "weight", a.`is_show` AS "isShow", a.`sys_code` AS "sysCode", a.`module_codes` AS "moduleCodes", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_menu` a WHERE a.`status` = ? ORDER BY a.sys_code, a.tree_sorts, a.menu_code
2020-09-05 22:15:39.559 DEBUG 16904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - ==> Parameters: 0(String)
2020-09-05 22:15:39.601 DEBUG 16904 [  log-save-10-1] [c.j.modules.sys.dao.MenuDao.findList   ] - <==      Total: 77
2020-09-05 22:15:39.628 DEBUG 16904 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:15:39.631 DEBUG 16904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:39.632 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:15:39.638 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249036376997888(String), access(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:15:39.546(Timestamp), /js/a/market/marketPurchase/list(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 147(Long)
2020-09-05 22:15:39.641 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:15:40.606 DEBUG 16904 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:15:40.606  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 22:15:40.697 DEBUG 16904 [nio-8980-exec-2] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:15:40.700 DEBUG 16904 [nio-8980-exec-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:40.815 DEBUG 16904 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` = ?
2020-09-05 22:15:40.816 DEBUG 16904 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:15:40.826 DEBUG 16904 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 22:15:40.827 DEBUG 16904 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:15:40.831 DEBUG 16904 [nio-8980-exec-2] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 1
2020-09-05 22:15:40.932 DEBUG 16904 [nio-8980-exec-2] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:15:40.926  用时: 320毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 505MB  已用内存: 131.610MB
2020-09-05 22:15:40.943 DEBUG 16904 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:15:40.945 DEBUG 16904 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:40.946 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:15:40.950 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249042181914624(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:15:40.931(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 320(Long)
2020-09-05 22:15:40.958 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:15:43.057 DEBUG 16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:15:43.056  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 22:15:43.092 DEBUG 16904 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:15:43.094 DEBUG 16904 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:43.110 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:15:43.110 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:15:43.113 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - <==      Total: 1
2020-09-05 22:15:43.118 INFO  16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model, HttpServletRequest, HttpServletResponse)
2020-09-05 22:15:43.255 DEBUG 16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:15:43.250  用时: 194毫秒  URI: /js/a/market/marketPurchase/form  总内存: 505MB  已用内存: 153.119MB
2020-09-05 22:15:43.266 DEBUG 16904 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:15:43.267 DEBUG 16904 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:15:43.270 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:15:43.274 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249051929477120(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:15:43.254(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), (String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 194(Long)
2020-09-05 22:15:43.279 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:16:04.600 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:16:04.600  URI: /js/a/market/marketSupplier/list  IP: 127.0.0.1
2020-09-05 22:16:04.621 INFO  16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketSupplierList <<<<<<<<< /js/a/market/marketSupplier/list >>>>>>>>> com.jeesite.modules.market.web.MarketSupplierController#list(MarketSupplier, Model)
2020-09-05 22:16:04.766 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 5毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:16:04.768 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:04.783 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:16:04.790 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), market_supplier(String), 1(String), 0(String)
2020-09-05 22:16:04.802 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 1
2020-09-05 22:16:04.848 DEBUG 16904 [nio-8980-exec-1] [c.j.c.m.m.provider.SelectSqlProvider   ] - 6毫秒: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = #{sqlMap.where#status#EQ1} AND a.`dict_type` = #{sqlMap.where#dict_type#EQ1} AND ( a.is_sys = #{sqlMap.where.is_sys#EQ1.val} OR a.corp_code = #{sqlMap.where.corp_code#EQ1.val} ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:16:04.851 DEBUG 16904 [nio-8980-exec-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:04.874 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==>  Preparing: SELECT a.`corp_code` AS "corpCode", a.`corp_name` AS "corpName", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`parent_code` AS "parentCode", a.`parent_codes` AS "parentCodes", a.`tree_sort` AS "treeSort", a.`tree_sorts` AS "treeSorts", a.`tree_leaf` AS "treeLeaf", a.`tree_level` AS "treeLevel", a.`tree_names` AS "treeNames", a.`dict_code` AS "dictCode", a.`dict_label` AS "dictLabelOrig", a.`dict_value` AS "dictValue", a.`dict_type` AS "dictType", a.`is_sys` AS "isSys", a.`description` AS "description", a.`css_style` AS "cssStyle", a.`css_class` AS "cssClass", a.`extend_s1` AS "extend.extendS1", a.`extend_s2` AS "extend.extendS2", a.`extend_s3` AS "extend.extendS3", a.`extend_s4` AS "extend.extendS4", a.`extend_s5` AS "extend.extendS5", a.`extend_s6` AS "extend.extendS6", a.`extend_s7` AS "extend.extendS7", a.`extend_s8` AS "extend.extendS8", a.`extend_i1` AS "extend.extendI1", a.`extend_i2` AS "extend.extendI2", a.`extend_i3` AS "extend.extendI3", a.`extend_i4` AS "extend.extendI4", a.`extend_f1` AS "extend.extendF1", a.`extend_f2` AS "extend.extendF2", a.`extend_f3` AS "extend.extendF3", a.`extend_f4` AS "extend.extendF4", a.`extend_d1` AS "extend.extendD1", a.`extend_d2` AS "extend.extendD2", a.`extend_d3` AS "extend.extendD3", a.`extend_d4` AS "extend.extendD4" FROM `js_sys_dict_data` a WHERE a.`status` = ? AND a.`dict_type` = ? AND ( a.is_sys = ? OR a.corp_code = ? ) ORDER BY a.tree_sorts, a.dict_code
2020-09-05 22:16:04.880 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - ==> Parameters: 0(String), sys_status(String), 1(String), 0(String)
2020-09-05 22:16:04.903 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.dao.DictDataDao.findList     ] - <==      Total: 7
2020-09-05 22:16:04.950 DEBUG 16904 [nio-8980-exec-1] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:16:04.944  用时: 344毫秒  URI: /js/a/market/marketSupplier/list  总内存: 505MB  已用内存: 164.467MB
2020-09-05 22:16:04.971 DEBUG 16904 [  log-save-10-4] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:16:04.973 DEBUG 16904 [  log-save-10-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:04.975 DEBUG 16904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:04.979 DEBUG 16904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249142920708096(String), select(String), 超市管理/供应商管理(String), system(String), 超级管理员(String), 2020-09-05 22:16:04.949(Timestamp), /js/a/market/marketSupplier/list(String), GET(String), (String), (String), MarketSupplier(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 344(Long)
2020-09-05 22:16:04.986 DEBUG 16904 [  log-save-10-4] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:16:05.206 DEBUG 16904 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:16:05.206  URI: /js/a/market/marketSupplier/listData  IP: 127.0.0.1
2020-09-05 22:16:05.248 DEBUG 16904 [nio-8980-exec-6] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` != #{STATUS_DELETE} ORDER BY a.update_date DESC
2020-09-05 22:16:05.248 DEBUG 16904 [nio-8980-exec-6] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:05.258 DEBUG 16904 [nio-8980-exec-6] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_supplier` a WHERE a.`status` != ?
2020-09-05 22:16:05.259 DEBUG 16904 [nio-8980-exec-6] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 1(String)
2020-09-05 22:16:05.262 DEBUG 16904 [nio-8980-exec-6] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` != ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 22:16:05.264 DEBUG 16904 [nio-8980-exec-6] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 1(String)
2020-09-05 22:16:05.268 DEBUG 16904 [nio-8980-exec-6] [c.j.m.m.dao.MarketSupplierDao.findList ] - <==      Total: 1
2020-09-05 22:16:05.289 DEBUG 16904 [nio-8980-exec-6] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:16:05.285  用时: 79毫秒  URI: /js/a/market/marketSupplier/listData  总内存: 505MB  已用内存: 169.701MB
2020-09-05 22:16:05.297 DEBUG 16904 [  log-save-10-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:16:05.298 DEBUG 16904 [  log-save-10-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:05.300 DEBUG 16904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:05.302 DEBUG 16904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249144346771456(String), select(String), 超市管理/供应商管理(String), system(String), 超级管理员(String), 2020-09-05 22:16:05.288(Timestamp), /js/a/market/marketSupplier/listData(String), POST(String), supplierName=&supplierPhone=&supplierLabel=&supplierNearBizDate_gte=&supplierNearBizDate_lte=&status=&pageNo=&pageSize=&orderBy=(String), (String), MarketSupplier(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 79(Long)
2020-09-05 22:16:05.305 DEBUG 16904 [  log-save-10-5] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:16:17.928 DEBUG 16904 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:16:17.927  URI: /js/a/market/marketPurchase/save  IP: 127.0.0.1
2020-09-05 22:16:18.195 DEBUG 16904 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 2毫秒: INSERT INTO `market_purchase` (`id`, `purchase_order_no`, `supplier_id`, `purchase_label`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `pay_state`) VALUES (#{id}, #{purchaseOrderNo}, #{supplierId}, #{purchaseLabel}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{payState})
2020-09-05 22:16:18.196 DEBUG 16904 [nio-8980-exec-5] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:18.197 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.dao.MarketPurchaseDao.insert   ] - ==>  Preparing: INSERT INTO `market_purchase` (`id`, `purchase_order_no`, `supplier_id`, `purchase_label`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `pay_state`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:18.200 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.dao.MarketPurchaseDao.insert   ] - ==> Parameters: 1302249198474264576(String), 2(String), 1298543900599414784(String), (String), 0(String), system(String), 2020-09-05 22:16:18.194(Timestamp), system(String), 2020-09-05 22:16:18.194(Timestamp), (String), (String)
2020-09-05 22:16:18.203 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.dao.MarketPurchaseDao.insert   ] - <==    Updates: 1
2020-09-05 22:16:18.207 DEBUG 16904 [nio-8980-exec-5] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `market_purchase_good` (`id`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `good_name`, `good_unit`, `market_purchase_id`, `good_barcode`) VALUES (#{id}, #{status}, #{createBy}, #{createDate}, #{updateBy}, #{updateDate}, #{remarks}, #{goodName}, #{goodUnit}, #{marketPurchaseId.id}, #{goodBarcode})
2020-09-05 22:16:18.209 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.d.MarketPurchaseGoodDao.insert ] - ==>  Preparing: INSERT INTO `market_purchase_good` (`id`, `status`, `create_by`, `create_date`, `update_by`, `update_date`, `remarks`, `good_name`, `good_unit`, `market_purchase_id`, `good_barcode`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:18.212 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.d.MarketPurchaseGoodDao.insert ] - ==> Parameters: 1302249198520401920(String), 0(String), system(String), 2020-09-05 22:16:18.205(Timestamp), system(String), 2020-09-05 22:16:18.205(Timestamp), (String), (String), (String), 1302249198474264576(String), (String)
2020-09-05 22:16:18.214 DEBUG 16904 [nio-8980-exec-5] [c.j.m.m.d.MarketPurchaseGoodDao.insert ] - <==    Updates: 1
2020-09-05 22:16:18.231 DEBUG 16904 [nio-8980-exec-5] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:16:18.228  用时: 301毫秒  URI: /js/a/market/marketPurchase/save  总内存: 505MB  已用内存: 192.319MB
2020-09-05 22:16:18.238 DEBUG 16904 [  log-save-10-1] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:16:18.239 DEBUG 16904 [  log-save-10-1] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@48cd8e71] will be managed by Spring
2020-09-05 22:16:18.240 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:18.242 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249198629453824(String), update(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:16:18.23(Timestamp), /js/a/market/marketPurchase/save(String), POST(String), id=&purchaseOrderNo=2&purchaseDate=&supplierId=1298543900599414784&purchaseLabel=&remarks=&totalMoney=&payState=&payDate=&payableMoney=&paidMoney=&marketPurchaseGoodList[0].status=0&marketPurchaseGoodList[0].id=&marketPurchaseGoodList[0].remarks=&marketPurchaseGoodList[0].goodName=&marketPurchaseGoodList[0].productDate=&marketPurchaseGoodList[0].suggestedPrice=&marketPurchaseGoodList[0].inPrice=&marketPurchaseGoodList[0].goodNum=&marketPurchaseGoodList[0].goodCount=&marketPurchaseGoodList[0].payDate=&marketPurchaseGoodList[0].costPrice=&marketPurchaseGoodList[0].salePrice=&marketPurchaseGoodList[0].membershipPrice=&marketPurchaseGoodList[0].goodUnit=&marketPurchaseGoodList[0].marketPurchaseId.id=&marketPurchaseGoodList[0].goodBarcode=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 301(Long)
2020-09-05 22:16:18.260 DEBUG 16904 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:16:18.260  URI: /js/a/market/marketPurchase/listData  IP: 127.0.0.1
2020-09-05 22:16:18.334 DEBUG 16904 [  log-save-10-1] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:16:18.349 DEBUG 16904 [nio-8980-exec-8] [c.j.c.m.m.provider.SelectSqlProvider   ] - 3毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:16:18.350 DEBUG 16904 [nio-8980-exec-8] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will be managed by Spring
2020-09-05 22:16:18.372 DEBUG 16904 [nio-8980-exec-8] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT count(0) FROM `market_purchase` a WHERE a.`status` = ?
2020-09-05 22:16:18.373 DEBUG 16904 [nio-8980-exec-8] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:16:18.376 DEBUG 16904 [nio-8980-exec-8] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`status` = ? ORDER BY a.update_date DESC LIMIT 20
2020-09-05 22:16:18.377 DEBUG 16904 [nio-8980-exec-8] [c.j.m.m.dao.MarketPurchaseDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:16:18.383 DEBUG 16904 [nio-8980-exec-8] [c.j.m.m.dao.MarketPurchaseDao.findList ] - <==      Total: 2
2020-09-05 22:16:18.397 DEBUG 16904 [nio-8980-exec-8] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:16:18.394  用时: 134毫秒  URI: /js/a/market/marketPurchase/listData  总内存: 505MB  已用内存: 196.335MB
2020-09-05 22:16:18.407 DEBUG 16904 [  log-save-10-2] [c.j.c.m.m.provider.InsertSqlProvider   ] - 1毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:16:18.408 DEBUG 16904 [  log-save-10-2] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will be managed by Spring
2020-09-05 22:16:18.409 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:18.411 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249199325708288(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:16:18.396(Timestamp), /js/a/market/marketPurchase/listData(String), POST(String), purchaseOrderNo=&purchaseDate=&pageNo=&pageSize=&orderBy=(String), (String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 134(Long)
2020-09-05 22:16:18.414 DEBUG 16904 [  log-save-10-2] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
2020-09-05 22:16:23.142 DEBUG 16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 开始计时: 10:16:23.142  URI: /js/a/market/marketPurchase/form  IP: 127.0.0.1
2020-09-05 22:16:23.146 DEBUG 16904 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 0毫秒: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`id` = #{id}
2020-09-05 22:16:23.147 DEBUG 16904 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will not be managed by Spring
2020-09-05 22:16:23.154 DEBUG 16904 [nio-8980-exec-4] [c.j.m.market.dao.MarketPurchaseDao.get ] - ==>  Preparing: SELECT a.`id` AS "id", a.`purchase_order_no` AS "purchaseOrderNo", a.`purchase_date` AS "purchaseDate", a.`supplier_id` AS "supplierId", a.`supplier_name` AS "supplierName", a.`purchase_label` AS "purchaseLabel", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`total_money` AS "totalMoney", a.`pay_state` AS "payState", a.`pay_date` AS "payDate", a.`payable_money` AS "payableMoney", a.`paid_money` AS "paidMoney" FROM `market_purchase` a WHERE a.`id` = ?
2020-09-05 22:16:23.155 DEBUG 16904 [nio-8980-exec-4] [c.j.m.market.dao.MarketPurchaseDao.get ] - ==> Parameters: 1302249198474264576(String)
2020-09-05 22:16:23.158 DEBUG 16904 [nio-8980-exec-4] [c.j.m.market.dao.MarketPurchaseDao.get ] - <==      Total: 1
2020-09-05 22:16:23.163 DEBUG 16904 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 1毫秒: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`good_name` AS "goodName", a.`product_date` AS "productDate", a.`suggested_price` AS "suggestedPrice", a.`in_price` AS "inPrice", a.`good_num` AS "goodNum", a.`good_count` AS "goodCount", a.`pay_date` AS "payDate", a.`cost_price` AS "costPrice", a.`sale_price` AS "salePrice", a.`membership_price` AS "membershipPrice", a.`good_unit` AS "goodUnit", a.`market_purchase_id` AS "marketPurchaseId.id", a.`good_barcode` AS "goodBarcode" FROM `market_purchase_good` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.create_date ASC
2020-09-05 22:16:23.164 DEBUG 16904 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will not be managed by Spring
2020-09-05 22:16:23.170 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.d.M.findList                   ] - ==>  Preparing: SELECT a.`id` AS "id", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks", a.`good_name` AS "goodName", a.`product_date` AS "productDate", a.`suggested_price` AS "suggestedPrice", a.`in_price` AS "inPrice", a.`good_num` AS "goodNum", a.`good_count` AS "goodCount", a.`pay_date` AS "payDate", a.`cost_price` AS "costPrice", a.`sale_price` AS "salePrice", a.`membership_price` AS "membershipPrice", a.`good_unit` AS "goodUnit", a.`market_purchase_id` AS "marketPurchaseId.id", a.`good_barcode` AS "goodBarcode" FROM `market_purchase_good` a WHERE a.`status` = ? ORDER BY a.create_date ASC
2020-09-05 22:16:23.171 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.d.M.findList                   ] - ==> Parameters: 0(String)
2020-09-05 22:16:23.185 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.d.M.findList                   ] - <==      Total: 3
2020-09-05 22:16:23.200 DEBUG 16904 [nio-8980-exec-4] [c.j.c.m.m.provider.SelectSqlProvider   ] - 2毫秒: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = #{sqlMap.where#status#EQ1} ORDER BY a.update_date DESC
2020-09-05 22:16:23.200 DEBUG 16904 [nio-8980-exec-4] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will be managed by Spring
2020-09-05 22:16:23.210 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==>  Preparing: SELECT a.`id` AS "id", a.`supplier_name` AS "supplierName", a.`supplier_phone` AS "supplierPhone", a.`supplier_addr` AS "supplierAddr", a.`supplier_label` AS "supplierLabel", a.`supplier_near_biz_date` AS "supplierNearBizDate", a.`status` AS "status", a.`create_by` AS "createBy", a.`create_date` AS "createDate", a.`update_by` AS "updateBy", a.`update_date` AS "updateDate", a.`remarks` AS "remarks" FROM `market_supplier` a WHERE a.`status` = ? ORDER BY a.update_date DESC
2020-09-05 22:16:23.212 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - ==> Parameters: 0(String)
2020-09-05 22:16:23.217 DEBUG 16904 [nio-8980-exec-4] [c.j.m.m.dao.MarketSupplierDao.findList ] - <==      Total: 1
2020-09-05 22:16:23.223 INFO  16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - ViewName: modules/market/marketPurchaseForm <<<<<<<<< /js/a/market/marketPurchase/form >>>>>>>>> com.jeesite.modules.market.web.MarketPurchaseController#form(MarketPurchase, Model, HttpServletRequest, HttpServletResponse)
2020-09-05 22:16:23.287 DEBUG 16904 [nio-8980-exec-4] [c.j.m.sys.interceptor.LogInterceptor   ] - 计时结束: 10:16:23.283  用时: 141毫秒  URI: /js/a/market/marketPurchase/form  总内存: 505MB  已用内存: 199.482MB
2020-09-05 22:16:23.310 DEBUG 16904 [  log-save-10-3] [c.j.c.m.m.provider.InsertSqlProvider   ] - 3毫秒: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (#{id}, #{logType}, #{logTitle}, #{createBy}, #{createByName}, #{createDate}, #{requestUri}, #{requestMethod}, #{requestParams}, #{bizKey}, #{bizType}, #{remoteAddr}, #{serverAddr}, #{isException}, #{exceptionInfo}, #{userAgent}, #{deviceName}, #{browserName}, #{executeTime})
2020-09-05 22:16:23.312 DEBUG 16904 [  log-save-10-3] [o.m.s.t.SpringManagedTransaction       ] - JDBC Connection [com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl@5579fc5c] will be managed by Spring
2020-09-05 22:16:23.314 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==>  Preparing: INSERT INTO `js_sys_log` (`id`, `log_type`, `log_title`, `create_by`, `create_by_name`, `create_date`, `request_uri`, `request_method`, `request_params`, `biz_key`, `biz_type`, `remote_addr`, `server_addr`, `is_exception`, `exception_info`, `user_agent`, `device_name`, `browser_name`, `execute_time`) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2020-09-05 22:16:23.330 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - ==> Parameters: 1302249219840049152(String), select(String), 超市管理/进货管理(String), system(String), 超级管理员(String), 2020-09-05 22:16:23.287(Timestamp), /js/a/market/marketPurchase/form(String), GET(String), id=1302249198474264576(String), 1302249198474264576(String), MarketPurchase(String), 127.0.0.1(String), http://127.0.0.1:8980(String), 0(String), (String), Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36(String), Windows 10(String), Chrome(String), 141(Long)
2020-09-05 22:16:23.351 DEBUG 16904 [  log-save-10-3] [c.jeesite.modules.sys.dao.LogDao.insert] - <==    Updates: 1
